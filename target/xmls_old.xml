<components><component namespace="com.nd.sdp.component" name="timepicker" display="时间选择器" type="library">
	<pages>
	</pages>
	
	<properties>
	</properties>
	
	<events>
	</events>

	<handlers>
	</handlers>  
    <runtime>
      <properties>
        <property type="bool" name="lazy_init_android" displayName="是否开启延迟初始化" value="true"/>
        <property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
      </properties>
    </runtime>
    <android>
		<class/>
		<dependency>
          <![CDATA[
            compile('com.nd.sdp.android.common.ui:nd-timepicker:1.3.8') {
                transitive = true
                changing = true;
            }
          ]]>
		 </dependency>
	</android>
  
  	<ios>
		<dependency>
            <![CDATA[
				pod 'MUIDatePickerView', '0.0.11'
			]]>
		</dependency>
	</ios>

</component><component namespace="com.nd.smartcan.appfactory" name="main_component" display="应用框架">
  <pages>
    <page type="cmp" name="benchmark" display="性能基准统计" toplevel="1" android_class="" allow_guest="true"/>
    <page type="cmp" name="develop" display="开发者工具页面（调试使用，勿配置在正式产品上）" toplevel="1" allow_guest="true"/>
	<page type="cmp" name="download" display="下载管理" toplevel="1" allow_guest="true"/>
    <page type="cmp" name="permission_list" display="高敏感权限" android_class="" allow_guest="true"/>
    <page type="cmp" name="main" display="TAB布局" template="1" allow_guest="true" toplevel="3">
      <img>http://cs.101.com/v0.1/static/cs_app_native_storage/apps/com.nd.app.factory.ios.ep200059/1470123273000.png</img>
      <properties>
        <group name="items" displayName="页签" max-repeat="100">
          <validator type="size" rule="[1,100]" msg=""/>
          <property name="text" displayName="标题" type="string" i18n="true">
            <validator type="required"/>
          </property>
          <property name="image" displayName="默认图标" type="image" accept="png,jpeg,jpg,9.png,json">
            <transfer os="Android" model="xhdpi"/>
            <transfer os="Android" model="xxhdpi"/>
          </property>
          <property name="image_selected" displayName="选中图标" type="image" accept="png,jpeg,jpg,9.png">
            <transfer os="Android" model="xhdpi"/>
            <transfer os="Android" model="xxhdpi"/>
          </property>
          <property name="page" displayName="页面" type="page_level_1">
            <validator type="required"/>
          </property>
          <property name="_not_switch_tab" displayName="不跳转tab" type="bool"/>
          <property name="param" displayName="页面参数" type="map"/>
          <property name="_stick" displayName="不可移除" type="bool"/>
          <property name="hidden" displayName="页面隐藏状态，默认/不配置时显示" type="bool"/>
        </group>
          <property type="string" name="tabbar_item_selected_text_color" displayName="tab标签选中态字体颜色(    请以RGBA格式输入，如00FF00FF表示alpha为1.0的纯绿色)(如要使用动态换肤，请勿配置此项)" value=""/>
          <property type="string" name="tabbar_item_text_color" displayName="tab标签常态字体颜色(  请以RGBA格式输入，如00FF00FF表示alpha为1.0的纯绿色)(  如要使用动态换肤，请勿配置此项)" value=""/>
          <property type="string" name="tabbar_background_color" displayName="tab标签背景色(请以RGBA格式输入，如00FF00FF表示alpha为1.0的纯绿色)(    如要使用动态换肤，请勿配置此项)" value=""/>
          <property type="image" name="tabbar_background_image_android" displayName="Tab标签背景图片(android:支持.9图片)" value="" accept="png,jpeg,jpg,9.png">
                <transfer os="Android" resize="@hdpi,@xhdpi,@xxhdpi"/>
          </property>
          <property type="int" name="default_tab_index" displayName="打开应用时默认选中的TAB位置（从0开始）" value="0"/>
          <property type="image" name="tabbar_background_image_ios" displayName="Tab 标签背景图片(    iOS:不支持.9图片；图片将被拉伸到Tab尺寸；非纯色图片建议提供标准大小（640x98））" value="">
                <transfer os="iOS" resize="640*98@2x" model="iPhone4"/>
                <transfer os="iOS" resize="750*98@2x" model="iPhone6"/>
                <transfer os="iOS" resize="1242*147@3x" model="iPhone6P"/>
                <transfer os="iOS" resize="1125*249@3x" model="iPhoneX"/>
                <transfer os="iOS" resize="828*166@2x" model="iPhoneXR"/>
                <transfer os="iOS" resize="1242*249@3x" model="iPhoneXSMax"/>
                <transfer os="iOS" resize="1170*249@3x" model="iPhone12"/>
				<transfer os="iOS" resize="1284*249@3x" model="iPhone12ProMax"/>
           </property>
      </properties>
    </page>
    <page type="cmp" name="main_fragment" display="(已废弃)TAB布局(fragment)" template="1">          
      <img>http://cs.101.com/v0.1/static/cs_app_native_storage/apps/com.nd.app.factory.ios.ep200059/1470123273000.png</img>
      <properties>
        <group name="items" displayName="页签" max-repeat="100">
          <validator type="size" rule="[1,100]" msg=""/>
          <property name="text" displayName="标题" type="string" i18n="true">
            <validator type="required"/>
          </property>
          <property name="image" displayName="默认图标" type="image" accept="png,jpeg,jpg,9.png,json">
            <transfer os="Android" model="xhdpi"/>
            <transfer os="Android" model="xxhdpi"/>
          </property>
          <property name="image_selected" displayName="选中图标" type="image" accept="png,jpeg,jpg,9.png">
          <transfer os="Android" model="xhdpi"/>
            <transfer os="Android" model="xxhdpi"/>
          </property>
          <property name="page" displayName="页面" type="page_level_1">
            <validator type="required"/>
          </property>
          <property name="_not_switch_tab" displayName="不跳转tab" type="bool"/>
          <property name="param" displayName="页面参数" type="map"/>
          <property name="_stick" displayName="不可移除" type="bool"/>
        </group>
      </properties>
    </page>
    <page type="cmp" name="webview" display="Web页面" template="1" allow_guest="true">
      <img>http://cs.101.com/v0.1/static/cs_app_native_storage/apps/com.nd.app.factory.ios.ep200059/1470123386000.png</img>
      <params>
        <property type="bool" name="_maf_show_progress_bar" displayName="是否显示进度条"/>
        <property type="string" name="url" displayName="地址"/>
        <property type="string" name="_maf_down_start_event_name" displayName="网页触发下载，这边要发送的事件名称"/>
      </params>
      <properties>
        <property name="url" displayName="页面URL" type="string"/>
        <property name="_maf_show_progress_bar" displayName="显示加载进度条" type="bool"/>
        <property name="_maf_down_start_event_name" displayName="触发下载时，发送的事件名(只有android生效)" type="string"/>
      </properties>
    </page>
        <page type="cmp" name="main_virtual" display="容器宿主属性配置" toplevel="1" android_class="" allow_guest="true" expandability="true">
       <img>http://cs.101.com/v0.1/static/cs_app_native_storage/apps/com.nd.app.factory.ios.ep200059/1470123273000.png</img>
       <properties>
          <property name="image" displayName="默认图标" type="image" accept="png,jpeg,jpg,9.png"/>
       </properties>
    </page>
  </pages>
  <properties>
    <property type="int" name="request_limit" displayName="异常上报请求时限(仅对 Android 生效)" value="30"/>
    <property type="int" name="updataGapMinute" displayName="应用检查升级间隔(分钟)；最低60；" value=""/>
	<property type="int" name="dont_remind_update_interval" displayName="用户点击取消更新以后，N天之内不会再提示更新。" value="0"/>
	<property type="bool" name="is_default_update_show_ui" desc_true="开启" desc_false="关闭" displayName="静默更新是否显示弹窗(仅对 Android 生效)" value="false"/>
    <property type="int" name="h5_update_minute" displayName="轻应用检查升级间隔（分钟）" value=""/>
    <property type="bool" name="allow_check_update" desc_true="开启" desc_false="关闭" displayName="允许检查更新" value="true"/>
    <property type="enum" name="tabbar_layout_type" displayName="tab标签布局(Android)">
      <options multi="false">
        <option value="phone">Phone</option>
        <option value="pad">Pad</option>
        <option value="auto">Auto</option>
      </options>
    </property>
	<property type="string" name="tabbar_item_selected_text_color" displayName="tab标签选中态字体颜色(请以RGBA格式输入，如00FF00FF表示alpha为1.0的纯绿色)(如要使用动态换肤，请勿配置此项)" value=""/>
    <property type="string" name="tabbar_item_text_color" displayName="tab标签常态字体颜色(请以RGBA格式输入，如00FF00FF表示alpha为1.0的纯绿色)(如要使用动态换肤，请勿配置此项)" value=""/>
    <property type="string" name="tabbar_background_color" displayName="tab标签背景色(请以RGBA格式输入，如00FF00FF表示alpha为1.0的纯绿色)(如要使用动态换肤，请勿配置此项)" value=""/>
    <property type="image" name="tabbar_background_image_android" displayName="Tab标签背景图片(android:支持.9图片)" value="" accept="png,jpeg,jpg,9.png">
           <transfer os="Android" resize="@hdpi,@xhdpi,@xxhdpi"/>
          </property>
    <property type="image" name="tabbar_background_image_ios" displayName="Tab 标签背景图片(iOS:不支持.9图片；图片将被拉伸到Tab尺寸；非纯色图片建议提供标准大小（640x98））" value="">
      <transfer os="iOS" resize="640*98@2x" model="iPhone4"/>
      <transfer os="iOS" resize="750*98@2x" model="iPhone6"/>
      <transfer os="iOS" resize="1242*147@3x" model="iPhone6P"/>
      <transfer os="iOS" resize="1125*249@3x" model="iPhoneX"/>
      <transfer os="iOS" resize="828*166@2x" model="iPhoneXR"/>
      <transfer os="iOS" resize="1242*249@3x" model="iPhoneXSMax"/>
      <transfer os="iOS" resize="1170*249@3x" model="iPhone12"/>
	  <transfer os="iOS" resize="1284*249@3x" model="iPhone12ProMax"/>
    </property>
     <property type="bool" name="is_check_root" desc_true="开启" desc_false="关闭" displayName="检查设备是否root" value="false"/>
     <property type="bool" name="is_check_emulator" desc_true="开启" desc_false="关闭" displayName="检查设备是否为模拟器" value="false"/>
    <property type="int" name="default_tab_index" displayName="打开应用时默认选中的TAB位置（从0开始）" value="0"/>
    <property type="bool" name="apk_resign_check" desc_true="开启" desc_false="关闭" displayName="是否开启应用重签名检查" value="false"/>
    <property type="bool" name="is_show_tab" desc_true="开启" desc_false="关闭" displayName="是否显示tab标签" value="true"/>
    <property type="string" name="sharedUserId" displayName="sharedUserId配置（仅对 Android 生效）" value=""/>
    <property type="string" name="AppId" displayName="Bugly Appid（android）如果崩溃组件有加这个配置就失效" template="false" senior="true">
      <tip>获取内容请点击： https://bugly.qq.com/v2/index</tip>
    </property>
    <property type="bool" name="android_h5_single_task" desc_true="开启" desc_false="关闭" displayName="是否使用singleTask启动H5容器,请勿打开!使用前联系应用工厂开发人员(仅对 Android 生效)" value="false"/>
    <property type="bool" name="is_use_fragment_webview" desc_true="开启" desc_false="关闭" displayName="是否使用fragment加载webview" value="true"/>
	<property type="bool" name="exclude_x5" desc_true="是" desc_false="否" displayName="是否屏蔽X5代码(优先级最高,测试中)" value="false">
		<dependency>
		   <component namespace="com.nd.sdp.component" name="webviewwrapper-x5"/>
		</dependency>
	</property>
    <property type="bool" name="is_global_webview_use_x5" desc_true="开启" desc_false="关闭" displayName="是否使用x5内核加载webview(优先级弱于X5代码屏蔽,仅对 Android 生效)" value="true"/>
    <property type="bool" name="is_multi_web_instance" desc_true="开启" desc_false="关闭" displayName="是否启用单实例web容器" value="false"/>
    <property type="bool" name="set_status_bar_color" desc_true="开启" desc_false="关闭" displayName="是否开启状态栏改色(需API版本大于等于19且各组件实现相应接口)(仅对 Android 生效)" value="false"/>
    <property type="string" name="window_soft_input_mode" displayName="设置窗口和软键盘的交互模式" value=""/>
    <property type="bool" name="is_activity_start_from_history" desc_true="开启" desc_false="关闭" displayName="是否从堆栈历史里启动主界面(仅对 Android 生效)" value="false"/>
    <property type="string" name="androidmax_aspect" displayName="最大屏幕纵横比(官方建议为2.1或更大)(仅 Android 有效)" value="2.1"/>
  	<property type="bool" name="ext_permission" desc_true="是" desc_false="否" displayName="是否显示框架扩展权限" value="true">
		<dependency>
		   <component namespace="com.nd.sdp.component" name="apf-permission"/>
		</dependency>
	</property>
    <property type="bool" name="is_use_popup_web_menu_style" desc_true="开启" desc_false="关闭" displayName="是否使用下拉(旧)样式web菜单" value="false"/>
   <property type="bool" name="is_open_float" displayName="webview是否开启悬浮功能" value="false">
      <dependency>
		   <component namespace="com.nd.sdp.component" name="floating-window"/>
		</dependency>
     </property>
    <property type="bool" name="is_show_default_toast_when_request_error" desc_true="开启" desc_false="关闭" displayName="网络请求失败429或503后是否开启吐司提示" value="true"/>
  </properties>
  <events>
    </events> 
    <runtime>
      <properties>
        <property type="bool" name="lazy_init_android" displayName="是否开启延迟初始化" value="false"/>
        <property type="string" name="system_priority" displayName="初始化系统优先级" value="com.nd.sdp.uc_component;com.nd.sdp.library.cscom;com.nd.sdp.component.nd-net-monitor-component;com.nd.smartcan.appfactory.main_component"/>
      </properties>
      <activity_screen_orientations displayName="要替换界面方向白名单,要有申明才能替换，不支持新增加">
        <activity_screen_orientation value="com.nd.smartcan.appfactory.script.webkit.WebViewActivity"/>
        <activity_screen_orientation value="com.nd.smartcan.appfactory.script.webkit.H5containerActivity"/>
        <activity_screen_orientation value="com.nd.smartcan.appfactory.demo.SplashActivity"/>
        <activity_screen_orientation value="com.nd.smartcan.appfactory.demo.LoadDexActivity"/>		
		<activity_screen_orientation value="com.nd.component.MainContainerActivity"/>
		<activity_screen_orientation value="com.nd.component.ShowPerformActivity"/>
        <activity_screen_orientation value="com.nd.component.ShowPerformListActivity"/>
		<activity_screen_orientation value="com.nd.component.ShowPerformDetailActivity"/>
		<activity_screen_orientation value="com.nd.component.devtool.DevToolActivity"/>
		<activity_screen_orientation value="com.nd.component.devtool.LightAppUpdateLogActivity"/>
		<activity_screen_orientation value="com.nd.component.devtool.UIMonitorActivity"/>
		<activity_screen_orientation value="com.nd.component.SubMainContainerActivity"/>
		<activity_screen_orientation value="com.nd.component.devtool.DevToolFragmentActivity"/>
		<activity_screen_orientation value="com.nd.component.devtool.DevtoolPreferenceActivity"/>
		<activity_screen_orientation value="com.nd.component.devtool.DevToolPerformActivity"/>
		<activity_screen_orientation value="com.nd.component.MainGoPageErrorActivity"/>
		<activity_screen_orientation value="com.nd.component.permission.PermissionListActivity"/>
		<activity_screen_orientation value="com.nd.component.permission.PermissionDetailActivity"/>
		<activity_screen_orientation value="com.nd.component.maintenance.MaintenanceActivity"/>
		<activity_screen_orientation value="com.nd.component.devtool.SchemeGenerateActivity"/>
        <activity_screen_orientation value="com.nd.component.FragmentContainerActivity"/>
        
      </activity_screen_orientations>
    </runtime>
    <build>
        <android>
            <safe_whitelist>
                <activities>
                    <activity name="com.nd.smartcan.appfactory.demo.SplashActivity" detail="未设置exported属性，设置了intent-filter子标签，该组件可导出" describe="外部应用启动当前应用需要" type="activity" owner="苏昌骏"/>
                </activities>       
           </safe_whitelist>
        </android>
    </build>
  <android>
    <class>com.nd.component.MainComponent</class>
    <dependency><![CDATA[
    ext.maf_version = "3.4.09-release.1"
	def androidx_version = "1.0.0"
    configurations.all {
    resolutionStrategy {     
      force "com.nd.sdp.android:ext-downloadmanager:3.0.1-release.5"
      force "com.nd.component.android:maincomponent:3.3.46-release.1"      
      force "com.nd.android.smartcan:smartcan-appfactory:3.5.39-release.1"
	  force "com.nd.sdp.android:apf-interface:3.1.1-stable"
      force "com.nd.sdp.android:apf-assemble:3.1.6-release.1"       
      force "com.nd.sdp.android:h5-implement:3.3.13-release.1"
      force "com.nd.sdp.android:extend-implement:3.1.1-release.1"

      force "com.nd.sdp.android:maf-assemble:3.1.2-release.1"
      force "com.nd.sdp.android:maf-implement:3.1.4-release.1"     
      force "com.nd.sdp.android:maf-interface:3.1.3-release.1"     
      force "com.nd.android.smartcan:smartcan-datacollection-aar:${maf_version}"
      force "com.nd.android.smartcan:datatransfer-aar:${maf_version}"
      force "com.nd.android.smartcan:smartcan-core-aar:${maf_version}"
      force "com.nd.android.smartcan:datalayer-aar:${maf_version}"
      force "com.nd.android.smartcan:framework-aar:${maf_version}"
      force "com.nd.android.smartcan:network-aar:${maf_version}"
      force "com.nd.android.smartcan:commons-util-aar:${maf_version}"
      force "com.nd.android.smartcan:smartcanui-aar:${maf_version}"
      force "com.nd.android.smartcan:thread-util-aar:${maf_version}"


      force "com.nd.sdp.android:webviewwrapper:3.5.25-release.1"
	  force "com.nd.sdp.android:webviewwrapper-x5:3.5.25-release.1"
	  force "com.nd.sdp.android:android-sub-app:3.2.4-release.1"
	  force "com.nd.sdp.android:apf-stand-alone-update:3.2.33-release.1"
	  force "com.nd.android.smartcan:i-android-apf:3.1.0-stable"

      force "androidx.appcompat:appcompat:${androidx_version}"
      force "androidx.cardview:cardview:${androidx_version}"
      force "com.google.android.material:material-rc01:${androidx_version}"
      force "androidx.palette:palette:${androidx_version}"
      force "androidx.recyclerview:recyclerview:${androidx_version}"
      force "androidx.annotation:annotation:${androidx_version}"
      force "androidx.legacy:legacy-support-v4:${androidx_version}"
      force "androidx.percentlayout:percentlayout:${androidx_version}"
      force "androidx.legacy:legacy-support-v13:${androidx_version}"
      force "androidx.browser:browser:${androidx_version}"
      force "androidx.legacy:legacy-support-core-utils:${androidx_version}"

      //force "androidx.core:core:${androidx_version}"
      force "androidx.viewpager:viewpager:${androidx_version}"
      force "androidx.coordinatorlayout:coordinatorlayout:${androidx_version}"
      force "androidx.collection:collection:${androidx_version}"
      force "androidx.vectordrawable:vectordrawable-animated:${androidx_version}"
      force "androidx.customview:customview:${androidx_version}"
      force "androidx.swiperefreshlayout:swiperefreshlayout:${androidx_version}"
      force "androidx.vectordrawable:vectordrawable:${androidx_version}"
      force "androidx.drawerlayout:drawerlayout:${androidx_version}"
      force "androidx.versionedparcelable:versionedparcelable:${androidx_version}"
      force "androidx.slidingpanelayout:slidingpanelayout:${androidx_version}"
      force "androidx.legacy:legacy-support-core-ui:${androidx_version}"
      force "androidx.cursoradapter:cursoradapter:${androidx_version}"
      force "androidx.asynclayoutinflater:asynclayoutinflater:${androidx_version}"
      force "androidx.interpolator:interpolator:${androidx_version}"
      force "androidx.gridlayout:gridlayout:${androidx_version}"
      force "androidx.media:media:${androidx_version}"
      force "androidx.fragment:fragment:${androidx_version}"
	  force "androidx.multidex:multidex:2.0.0"
    }
  } 
	implementation('com.nd.sdp.android:processcheck:3.1.1-release.1@aar') {
        transitive = true
        changing = true 
    }

    implementation('com.nd.sdp.android:maf-interface:3.1.3-release.1@aar') {
        transitive = true
        changing = true 
    }
    implementation('com.nd.component.android:maincomponent:3.3.42-release.1@aar') {
        transitive = true
        changing = true 
    }

    implementation('com.nd.android.smartcan:smartcan-appfactory:3.5.38-release.1@aar') {
        transitive = true
        changing = true
        exclude group:'android.support',module:'android-support-v4'
    }
	
	implementation('com.nd.sdp.android:apf-interface:3.1.1-stable@aar') {
        transitive = true
        changing = true
    }

    implementation('com.nd.sdp.android:apf-assemble:3.1.6-release.1@aar') {
        transitive = true
        changing = true
        exclude group:'android.support',module:'android-support-v4'
    }
    
    implementation('com.nd.sdp.android:maf-assemble:3.1.2-release.1@aar') {
        transitive = true
        changing = true
        exclude group: 'android.support', module: 'android-support-v4'
    }
    implementation('com.nd.sdp.android:maf-implement:3.1.4-release.1@aar') {
        transitive = true
        changing = true
    }

    implementation('com.nd.sdp.android:h5-implement:3.3.10-release.1@aar') {
        transitive = true
        changing = true
        exclude group: 'android.support', module: 'android-support-v4'
    }
    implementation('com.nd.sdp.android:extend-implement:3.1.1-release.1@aar') {
        transitive = true
        changing = true
        exclude group: 'android.support', module: 'android-support-v4'
    }
	implementation("com.nd.android.smartcan:thread-util-aar:${maf_version}") {
        transitive = true
        changing = true
        exclude group: 'android.support', module: 'android-support-v4'
    }
	implementation("com.nd.android.smartcan:smartcan-datacollection-aar:${maf_version}") {
        transitive = true
        changing = true
        exclude group: 'android.support', module: 'android-support-v4'
    }
    implementation("com.nd.android.smartcan:datatransfer-aar:${maf_version}") {
        transitive = true
        changing = true
        exclude group: 'android.support', module: 'android-support-v4'
    }
    implementation("com.nd.android.smartcan:smartcan-core-aar:${maf_version}") {
        transitive = true
        changing = true
        exclude group: 'android.support', module: 'android-support-v4'
    }
    implementation("com.nd.android.smartcan:datalayer-aar:${maf_version}") {
        transitive= true
        changing = true
        exclude group: 'android.support', module: 'android-support-v4'
    }
    implementation("com.nd.android.smartcan:framework-aar:${maf_version}") {
        transitive = true
        changing = true
        exclude group: 'android.support', module: 'android-support-v4'
    }
    implementation("com.nd.android.smartcan:network-aar:${maf_version}") {
        transitive = true
        changing = true
        exclude group: 'android.support', module: 'android-support-v4'
    }
    implementation("com.nd.android.smartcan:commons-util-aar:${maf_version}") {
        transitive = true
        changing = true
        exclude group: 'android.support', module: 'android-support-v4'
    }
    implementation("com.nd.android.smartcan:smartcanui-aar:${maf_version}") {
        transitive = true
        changing = true
        exclude group: 'android.support', module: 'android-support-v4'
    }

    implementation('com.nd.sdp.android:webviewwrapper:3.5.24-release.1@aar') {
        transitive = true
        changing = true
        exclude group: 'android.support', module: 'android-support-v4'
    }
    implementation('com.nd.sdp.android:webviewwrapper-x5:3.5.24-release.1@aar') {
        transitive = true
        changing = true
        exclude group: 'android.support', module: 'android-support-v4'
    }
	implementation('com.nd.android.smartcan:cssdkextend:1.1.4.csextend@aar') {
		transitive = true
		changing = true
		exclude group: 'android.support', module: 'android-support-v4'
	}
	implementation('com.nd.sdp.android:android-sub-app:3.2.4-release.1@aar') {
		transitive = true
		changing = true
	}
	implementation('com.nd.sdp.android:apf-stand-alone-update:3.2.33-release.1@aar') {
        transitive = true
        changing = true
    }
	
	configurations {
		all*.exclude group:'android.support', module: 'android-support-v4'
		all*.exclude group: 'android.support'
		all*.exclude group: 'com.netflix.rxjava'
		all*.exclude group: 'com.nd.android.sdp.demo' , module: 'module_orgtree_ui'
		all*.exclude group: 'com.nd.android.sdp.demo' , module: 'contentServiceSdk'
		all*.exclude group: 'com.nd.android.sdp.demo' , module: 'module_commonResource'
		all*.exclude group: 'com.nd.android.smartcan' , module: 'smartcan-accountclient'
		all*.exclude group: 'com.nd.android.smartcan' , module: 'commons-util'
		all*.exclude group: 'com.nd.android.smartcan' , module: 'network'
		all*.exclude group: 'com.nd.android.smartcan' , module: 'framework'
		all*.exclude group: 'com.nd.android.smartcan' , module: 'datalayer'
		all*.exclude group: 'com.nd.android.smartcan' , module: 'smartcan-core'
		all*.exclude group: 'com.nd.android.smartcan' , module: 'datatransfer'
		all*.exclude group: 'com.nd.android.smartcan' , module: 'smartcan-datacollection'         
		all*.exclude group: 'com.nd.android.smartcan' , module: 'smartcan-func-need-permision'
		all*.exclude group:'com.squareup.okhttp', module: 'okhttp'
		all*.exclude group:'com.squareup.okhttp', module: 'okhttp-urlconnection'
		all*.exclude group:'com.nd.sdp.android', module: 'sdp-common-update'
	}

android {
    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }
    defaultConfig {
    //apf-ndk-begin
    ndk{
      abiFilters "armeabi-v7a"
      }
    //apf-ndk-end
  }
}
    android.applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def charsetCode = "UTF-8"
            output.processManifest.doLast {
                def targetPath = "${buildDir}/intermediates"
                def fileNum = 0
                def folderNum = 0
                File targetFile = new File(targetPath)
                if (targetFile.exists()) {
                    LinkedList<File> list = new LinkedList<File>()
                    String[] subFiles = targetFile.listFiles()
                    for (String sub : subFiles) {
                        if (new File(sub).isDirectory()) {
                            list.add(sub)
                        } else {
                            if (sub.contains("AndroidManifest.xml")) {
                                def content = new File(sub).getText(charsetCode).replaceAll("_applicationId_", applicationId)
                                println "开始-----替换清单文件Activity横竖屏配置，要在白名单中，并且编辑器设备方向配置有修改"
                                def newData = dealWithdic(content, getScreenOrientation(), getfilterActivity())
                                println "结束-----替换清单文件Activity横竖屏配置，要在白名单中，并且编辑器设备方向配置有修改"
                                new File(sub).write(newData, charsetCode)
                                println "applicationId已修改:"
								println sub
                            }
                        }
                    }
                    File tempFile;
                    while (!list.isEmpty()) {
                        tempFile = new File(list.removeFirst())
                        subFiles = tempFile.listFiles()
                        for (String sub : subFiles) {
                            if (new File(sub).isDirectory()) {
                                list.add(sub)
                            } else {
                                if (sub.contains("AndroidManifest.xml")) {
                                    def content = new File(sub).getText(charsetCode).replaceAll("_applicationId_", applicationId)
                                    println "开始-----替换清单文件Activity横竖屏配置，要在白名单中，并且编辑器设备方向配置有修改"
                                    def newData = dealWithdic(content, getScreenOrientation(), getfilterActivity())
                                    println "结束-----替换清单文件Activity横竖屏配置，要在白名单中，并且编辑器设备方向配置有修改"
                                    new File(sub).write(newData, charsetCode)
                                    println "applicationId已修改:"
									println sub

                                }
                            }
                        }
                    }
                } else {
                    println "intermediates文件不存在"
                }
            }
        }
    }

            ]]></dependency>
    <meta-datas>
    <meta-data name="shareUserId" label="shareUserId" type="attribute" xpath="//manifest" file="/app/AndroidManifest.xml">
       <attribute name="android:sharedUserId" value="${sharedUserId}"/>
    </meta-data>
        <meta-data xpath="//manifest/application" file="/app/AndroidManifest.xml">
          <![CDATA[
            <meta-data android:name="android.max_aspect" android:value="${androidmax_aspect}"/>
			<meta-data android:name="android_h5_single_task" android:value="${android_h5_single_task}"/>
			<meta-data android:name="APF_DEFAULT_CHANNEL" android:value="${CHANNEL_NAME}"/>
          ]]>
        </meta-data>
    </meta-datas>
    <scenes>
          
          <scene name="android.permission.INTERNET" displayName="网络权限" describe="框架提供网络请求能力需要" isAsk="true" closeable="true" type="permission"/>
          <scene name="android.permission.GET_TASKS" displayName="获取任务权限" describe="框架获取当前任务包名需要" isAsk="true" closeable="true" type="permission"/>
          <scene name="android.permission.MOUNT_UNMOUNT_FILESYSTEMS" displayName="存储删除文件权限" describe="异常上报需要" isAsk="true" closeable="true" type="permission"/>
          <scene name="android.permission.ACCESS_NETWORK_STATE" displayName="获取网络状态权限" describe="框架提供网络请求能力需要" isAsk="true" closeable="true" type="permission"/>
          <scene name="android.permission.ACCESS_WIFI_STATE" displayName="获取WiFi状态权限" describe="框架提供网络请求能力需要" isAsk="true" closeable="true" type="permission"/>
          <scene name="android.permission.ACCESS_DOWNLOAD_MANAGER" displayName="下载权限" describe="框架提供大文件下载功能需要" isAsk="true" closeable="true" type="permission"/>
          <scene name="android.permission.REQUEST_INSTALL_PACKAGES" displayName="未知来源应用安装权限" describe="框架提供安装apk功能需要" isAsk="true" closeable="true" type="permission"/>
          <scene name="android.permission.WRITE_SETTINGS" displayName="修改系统设置权限" describe="框架提供添加快捷方式需要" isAsk="false" closeable="false" type="permission"/>
          <scene name="com.android.launcher.permission.INSTALL_SHORTCUT" displayName="添加快捷方式权限" describe="适配第三方rom快捷方式创建提供的权限" isAsk="true" closeable="true" type="permission"/>
          <scene name="com.android.launcher.permission.UNINSTALL_SHORTCUT" displayName="移除快捷方式权限" describe="适配第三方rom快捷方式创建提供的权限" isAsk="true" closeable="true" type="permission"/>
          <scene name="com.android.launcher.permission.READ_SETTINGS" displayName="查询快捷方式权限" describe="适配第三方rom快捷方式创建提供的权限" isAsk="true" closeable="true" type="permission"/>
          <scene name="com.android.launcher.permission.WRITE_SETTINGS" displayName="添加快捷方式权限" describe="适配第三方rom快捷方式创建提供的权限" isAsk="true" closeable="true" type="permission"/>
          <scene name="com.android.launcher2.permission.READ_SETTINGS" displayName="查询快捷方式权限" describe="适配第三方rom快捷方式创建提供的权限" isAsk="true" closeable="true" type="permission"/>
          <scene name="com.android.launcher2.permission.WRITE_SETTINGS" displayName="添加快捷方式权限" describe="适配第三方rom快捷方式创建提供的权限" isAsk="true" closeable="true" type="permission"/>
          <scene name="com.android.launcher3.permission.READ_SETTINGS" displayName="查询快捷方式权限" describe="适配第三方rom快捷方式提供的权限" isAsk="true" closeable="true" type="permission"/>
          <scene name="com.android.launcher3.permission.WRITE_SETTINGS" displayName="添加快捷方式权限" describe="适配第三方rom快捷方式创建提供的权限" isAsk="true" closeable="true" type="permission"/>
          <scene name="org.adw.launcher.permission.READ_SETTINGS" displayName="查询快捷方式权限" describe="适配第三方rom快捷方式创建提供的权限" isAsk="true" closeable="true" type="permission"/>
          <scene name="org.adw.launcher.permission.WRITE_SETTINGS" displayName="添加快捷方式权限" describe="适配第三方rom快捷方式创建提供的权限" isAsk="true" closeable="true" type="permission"/>
          <scene name="com.htc.launcher.permission.READ_SETTINGS" displayName="查询快捷方式权限" describe="适配第三方rom快捷方式创建提供的权限" isAsk="true" closeable="true" type="permission"/>
          <scene name="com.htc.launcher.permission.WRITE_SETTINGS" displayName="添加快捷方式权限" describe="适配第三方rom快捷方式创建提供的权限" isAsk="true" closeable="true" type="permission"/>
          <scene name="com.qihoo360.launcher.permission.READ_SETTINGS" displayName="查询快捷方式权限" describe="适配第三方rom快捷方式创建提供的权限" isAsk="true" closeable="true" type="permission"/>
          <scene name="com.qihoo360.launcher.permission.WRITE_SETTINGS" displayName="添加快捷方式权限" describe="适配第三方rom快捷方式创建提供的权限" isAsk="true" closeable="true" type="permission"/>
          <scene name="com.lge.launcher.permission.READ_SETTINGS" displayName="查询快捷方式权限" describe="适配第三方rom快捷方式创建提供的权限" isAsk="true" closeable="true" type="permission"/>
          <scene name="com.lge.launcher.permission.WRITE_SETTINGS" displayName="添加快捷方式权限" describe="适配第三方rom快捷方式创建提供的权限" isAsk="true" closeable="true" type="permission"/>
          <scene name="net.qihoo.launcher.permission.READ_SETTINGS" displayName="查询快捷方式权限" describe="适配第三方rom快捷方式创建提供的权限" isAsk="true" closeable="true" type="permission"/>
          <scene name="net.qihoo.launcher.permission.WRITE_SETTINGS" displayName="添加快捷方式权限" describe="适配第三方rom快捷方式创建提供的权限" isAsk="true" closeable="true" type="permission"/>
          <scene name="org.adwfreak.launcher.permission.READ_SETTINGS" displayName="查询快捷方式权限" describe="适配第三方rom快捷方式创建提供的权限" isAsk="true" closeable="true" type="permission"/>
          <scene name="org.adwfreak.launcher.permission.WRITE_SETTINGS" displayName="添加快捷方式权限" describe="适配第三方rom快捷方式创建提供的权限" isAsk="true" closeable="true" type="permission"/>
          <scene name="org.adw.launcher_donut.permission.READ_SETTINGS" displayName="查询快捷方式权限" describe="适配第三方rom快捷方式创建提供的权限" isAsk="true" closeable="true" type="permission"/>
          <scene name="org.adw.launcher_donut.permission.WRITE_SETTINGS" displayName="添加快捷方式权限" describe="适配第三方rom快捷方式创建提供的权限" isAsk="true" closeable="true" type="permission"/>
          <scene name="com.huawei.launcher3.permission.READ_SETTINGS" displayName="查询快捷方式权限" describe="适配第三方rom快捷方式创建提供的权限" isAsk="true" closeable="true" type="permission"/>
          <scene name="com.huawei.launcher3.permission.WRITE_SETTINGS" displayName="添加快捷方式权限" describe="适配第三方rom快捷方式创建提供的权限" isAsk="true" closeable="true" type="permission"/>
          <scene name="com.fede.launcher.permission.READ_SETTINGS" displayName="查询快捷方式权限" describe="适配第三方rom快捷方式创建提供的权限" isAsk="true" closeable="true" type="permission"/>
          <scene name="com.fede.launcher.permission.WRITE_SETTINGS" displayName="添加快捷方式权限" describe="适配第三方rom快捷方式创建提供的权限" isAsk="true" closeable="true" type="permission"/>
          <scene name="com.sec.android.app.twlauncher.settings.READ_SETTINGS" displayName="查询快捷方式权限" describe="适配第三方rom快捷方式创建提供的权限" isAsk="true" closeable="true" type="permission"/>
          <scene name="com.sec.android.app.twlauncher.settings.WRITE_SETTINGS" displayName="添加快捷方式权限" describe="适配第三方rom快捷方式创建提供的权限" isAsk="true" closeable="true" type="permission"/>
          <scene name="com.anddoes.launcher.permission.READ_SETTINGS" displayName="查询快捷方式权限" describe="适配第三方rom快捷方式创建提供的权限" isAsk="true" closeable="true" type="permission"/>
          <scene name="com.anddoes.launcher.permission.WRITE_SETTINGS" displayName="添加快捷方式权限" describe="适配第三方rom快捷方式创建提供的权限" isAsk="true" closeable="true" type="permission"/>
          <scene name="com.tencent.qqlauncher.permission.READ_SETTINGS" displayName="查询快捷方式权限" describe="适配第三方rom快捷方式创建提供的权限" isAsk="true" closeable="true" type="permission"/>
          <scene name="com.tencent.qqlauncher.permission.WRITE_SETTINGS" displayName="添加快捷方式权限" describe="适配第三方rom快捷方式创建提供的权限" isAsk="true" closeable="true" type="permission"/>
          <scene name="com.huawei.launcher2.permission.READ_SETTINGS" displayName="查询快捷方式权限" describe="适配第三方rom快捷方式创建提供的权限" isAsk="true" closeable="true" type="permission"/>
          <scene name="com.huawei.launcher2.permission.WRITE_SETTINGS" displayName="添加快捷方式权限" describe="适配第三方rom快捷方式创建提供的权限" isAsk="true" closeable="true" type="permission"/>
          <scene name="com.android.mylauncher.permission.READ_SETTINGS" displayName="查询快捷方式权限" describe="适配第三方rom快捷方式创建提供的权限" isAsk="true" closeable="true" type="permission"/>
          <scene name="com.android.mylauncher.permission.WRITE_SETTINGS" displayName="添加快捷方式权限" describe="适配第三方rom快捷方式创建提供的权限" isAsk="true" closeable="true" type="permission"/>
          <scene name="com.ebproductions.android.launcher.permission.READ_SETTINGS" displayName="查询快捷方式权限" describe="适配第三方rom快捷方式创建提供的权限" isAsk="true" closeable="true" type="permission"/>
          <scene name="com.ebproductions.android.launcher.permission.WRITE_SETTINGS" displayName="添加快捷方式权限" describe="适配第三方rom快捷方式创建提供的权限" isAsk="true" closeable="true" type="permission"/>
          <scene name="com.oppo.launcher.permission.READ_SETTINGS" displayName="查询快捷方式权限" describe="适配第三方rom快捷方式创建提供的权限" isAsk="true" closeable="true" type="permission"/>
          <scene name="com.oppo.launcher.permission.WRITE_SETTINGS" displayName="添加快捷方式权限" describe="适配第三方rom快捷方式创建提供的权限" isAsk="true" closeable="true" type="permission"/>
          <scene name="com.miui.mihome2.permission.READ_SETTINGS" displayName="查询快捷方式权限" describe="适配第三方rom快捷方式创建提供的权限" isAsk="true" closeable="true" type="permission"/>
          <scene name="com.miui.mihome2.permission.WRITE_SETTINGS" displayName="添加快捷方式权限" describe="适配第三方rom快捷方式创建提供的权限" isAsk="true" closeable="true" type="permission"/>
          <scene name="com.huawei.android.launcher.permission.READ_SETTINGS" displayName="查询快捷方式权限" describe="适配第三方rom快捷方式创建提供的权限" isAsk="true" closeable="true" type="permission"/>
          <scene name="com.huawei.android.launcher.permission.WRITE_SETTINGS" displayName="添加快捷方式权限" describe="适配第三方rom快捷方式创建提供的权限" isAsk="true" closeable="true" type="permission"/>
          <scene name="telecom.mdesk.permission.READ_SETTINGS" displayName="查询快捷方式权限" describe="适配第三方rom快捷方式创建提供的权限" isAsk="true" closeable="true" type="permission"/>
          <scene name="telecom.mdesk.permission.WRITE_SETTINGS" displayName="添加快捷方式权限" describe="适配第三方rom快捷方式创建提供的权限" isAsk="true" closeable="true" type="permission"/>
          <scene name="dianxin.permission.ACCESS_LAUNCHER_DATA" displayName="快捷方式权限" describe="适配第三方rom快捷方式创建提供的权限" isAsk="true" closeable="true" type="permission"/>
          <scene name="android.permission.FOREGROUND_SERVICE" displayName="快捷方式权限" describe="适配第三方rom快捷方式创建提供的权限" isAsk="true" closeable="true" type="permission"/>
          <scene name="_applicationid_.permission.appfactory.broadcast" displayName="应用框架自定义广播权限" describe="应用框架自定义广播权限" isAsk="true" closeable="true" type="permission"/>
          <scene name="_applicationId_.permission.APPFACTORY_UPDATE_NETWORK_RECEIVE_BROADCAST" displayName="应用框架升级自定义广播权限" describe="应用框架升级自定义广播权限" isAsk="true" closeable="true" type="permission"/> 
          <scene name="android.permission.WRITE_EXTERNAL_STORAGE" displayName="写权限" describe="框架提供写sdcard能力需要" isAsk="true" closeable="true" type="permission"/>
          <scene name="android.permission.READ_EXTERNAL_STORAGE" displayName="读权限" describe="框架提供读sdcard能力需要" isAsk="true" closeable="true" type="permission"/>
          <scene name="android.permission.change_wifi_state" displayName="wifi权限" describe="框架提供检测wifi状态能力需要" isAsk="true" closeable="true" type="permission"/>
    </scenes>
  </android>
  <ios>
    <class>APFMainComponent</class>
    <dependency><![CDATA[
pod 'APFMainComponent', '0.2.288'
pod 'APFKit', '0.1.471'
pod 'APFContentProvider', '1.0.12'
pod 'MUPFoundationNetworking', '1.0.95'
pod 'MUPFoundationNetworkingLegacy', '0.0.13'
pod 'AFNetworking', '3.2.3-APF'
pod 'SmartCan', '0.5.101'
pod 'APFWebKit', '1.0.128'
pod 'SMCDataLayer', '0.4.57'
pod 'MUPFoundation', '0.5.73'
pod 'MUPFoundationUtils', '1.0.32'
pod 'APFUIKit', '1.0.20'
pod 'SUIAlertController', '1.0.9'
pod 'MUPFoundationProfiler', '1.0.30'
pod 'VersionHistorySDK', '1.0.6'
pod 'MUPAssetsKit', '1.0.28'
pod 'MUPSQLiteORM', '0.2.11'
pod 'PSPDFUIKitMainThreadGuard-SDP', '1.19.1'
pod 'FMDB', '2.6.3-APF'
pod 'APFAppUpgradeSDK', '1.0.6'
pre_install do
    system("sed -i '' '/UITextField/d' Pods/BlocksKit/BlocksKit/BlocksKit+UIKit.h")
    system('rm Pods/BlocksKit/BlocksKit/UIKit/UITextField+BlocksKit.h')
    system('rm Pods/BlocksKit/BlocksKit/UIKit/UITextField+BlocksKit.m')
end
            ]]></dependency>
    <scenes>
    <scene name="LaunchImage"/>
    <scene name="PermissionSettingExplain"/>
    <scene name="InformationSecurity"/>
    <scene name="LaunchScreenBackgroundImage"/>
    <scene name="LaunchScreenCenterImage"/>
    <scene name="LaunchScreenBottomImage"/>
    <scene name="associated-domains"/>
    <scene name="changeRuntimeConfig"/>
    <scene name="NSPhotoLibraryAddUsageDescription" describe="允许用户将 H5 页面截长图后保存到相册中"/>
    <scene name="deviceSupport"/>
    <scene name="UIRequiresFullScreen"/>
    <scene name="verifySignature"/>
    </scenes>
    <ruby>
      <!--入口声明，必须提供且唯一-->
      <entry>APFMainBuildExecutor</entry>
      <dsl>
        <pre_dependency_install>
          <![CDATA[
		require 'xcodeproj'

        # todo: 考虑提供环境变量
        # 1. 项目名
        # 2. 项目基础地址

        # 获取当前路径
        current_dir = Pathname(Dir.pwd)

        # 搜索到项目列表
        projects = Dir.glob(current_dir.join('*.xcodeproj'))
        if projects.length != 1
            puts 'can\'t ensure unique xcodeproj file.'
            return
        end

        # 获取 local.json 文件数据
        local_json_file_path = current_dir.join('sdp/local.json')
        unless File.exist? local_json_file_path
            puts 'can\'t found sdp/local.json.'
            return
        end
        local_json_content_string ||= File.open(local_json_file_path, 'r:utf-8', &:read)
        local_json_content = JSON.parse(local_json_content_string)

        # target config
        target_configs = local_json_content['target_config'] || []
        if target_configs.empty?
            puts '[local.json] require target_config.'
            return
        end

        # 配置项目 xocdeproj
        xcode_project_path = projects.first
        xcode_project = Xcodeproj::Project.open(xcode_project_path)

        # 配置 target config
        target_configs.each do |target_config|
            local_json_target_name = target_config['target_name']
            xcode_project_target = xcode_project.targets.select do |item|
                item.name.strip == local_json_target_name
            end.first
            unless xcode_project_target
               puts "target(#{local_json_target_name})不存在，不处理"
               next
            end

            # 获取 bundleid
            bundleid = target_config['properties']['package_name']
            if bundleid.empty?
                puts "target(#{local_json_target_name}) 不存在包名，不处理"
                next
            end

            # 获取 build configurations
            build_configurations = xcode_project_target.build_configuration_list.build_configurations
            build_configurations.each do |build_configuration|
                build_configuration.build_settings['PRODUCT_BUNDLE_IDENTIFIER'] = bundleid
            end
        end

        # 保存 xcodeproj
        xcode_project.save
			]]>
        </pre_dependency_install>
        <post_dependency_install>
          <![CDATA[
            require 'pathname'
            require 'json'
            require 'net/http'
            current_dir = Pathname(Dir.pwd)
            xcode_projects = Dir.glob(current_dir.join('*.xcodeproj'))
            raise Informative, 'require a xcodeproj.' if xcode_projects.empty?
            raise Informative, 'too many xcodeproj.' if xcode_projects.length > 1
            project_name = File.basename(xcode_projects.first, '.xcodeproj')
            components_path = current_dir + project_name + "Resources" + "ci" + "components.json"
            capabilities_path = current_dir + project_name + "Resources" + "ci" + "component_capabilities.json"

            puts "### 开始添加component_capabilities.json文件:#{capabilities_path}"

            # 1. 获取 components.json 文件内容
            unless File.exist? components_path
                puts "目录不存在，跳过处理：#{components_path}"
                return
            end	
            components_content = File.read(components_path)
            components_map = JSON.parse(components_content)

            # 2. 获取默认模板组件内容
            uri = URI('http://app-native-storage.web.sdp.101.com/v0.8/items/93171cb2-88da-41ca-9c74-259d81a89f8a/content')
            content = Net::HTTP.get(uri)
            forced_choiced_components = JSON.parse(content) || []

            # 3. 比较 1 和 2 内容生成 component_capabilities.json 文件
            component_dependency_map = components_map['component_dependency']
            capabilities = []
            forced_choiced_components.each { |forced_choiced_component|
                capability = {}
                component = forced_choiced_component['component']
                component_id = component['namespace'] + ':' + component['name']
                capability['name'] = component['name']
                capability['namespace'] = component['namespace']
                capability['capability_detail'] = ' '
                capability['enable'] = false
                capability['dependencies'] = []
                if component_dependency_map.has_key?(component_id)
                    capability['enable'] = true
                    capability['dependencies'] = component_dependency_map[component_id]
                end
                capabilities << capability
            }

            output = JSON.generate(capabilities)
            file = File.new(capabilities_path, "w")
            file.write(output.to_s)
            file.close

            puts "### 添加完成"
			]]>
    	</post_dependency_install>
      </dsl>
    </ruby>
  </ios>
</component><component namespace="com.nd.social" name="im" display="IM">

	<sdk>

	  <js-sdk>
          <name>imJsModuleProvider</name>  <!-- 必须 -->
          <version>1.0</version>  <!-- 必须 -->
          <android>
              <js-class>com.nd.module_im.appFactoryComponent.js_module.ImJsModuleProvider</js-class> <!-- 可选 -->
          </android>
          <ios>
            <js-class>IMSJsBridgeProvider</js-class>
          </ios>
      </js-sdk> 
      
      <android-plugin>
          <version>1.1</version>
      </android-plugin>
  	</sdk>     
  
    <pages>
        <page type="cmp" name="chat_list" display="聊天列表" toplevel="1">
        
          <properties>
          
             <property type="page" name="im_contact_click" os="android" displayName="点击通讯录跳转(android)">
                <tip>点击顶部通讯录跳转界面，依赖标题栏显示通讯录入口(android)</tip>
             </property> 
             
             <property type="enum" name="im_recent_more_icon" os="android" displayName="更多菜单图标(android)">
                
                <tip>最近聊天列表更多菜单图标配置(android)</tip>
                <options multi="false">
                   <option value="general_top_icon_more">更多图标</option>
                   <option value="general_top_icon_friends">添加好友</option>
                </options>
                
            </property> 
           
            <property type="bool" name="im_chatlist_top_btn_visible" displayName="聊天列表标题栏显示通讯录入口" value="true"/>
            
            <property type="bool" name="im_show_contact_tab" displayName="聊天列表显示通讯录导航" value="false"/>
            
            <property type="bool" name="im_aide_visable" displayName="显示文件传输助手" value="true"/>
            
            <property type="bool" name="im_recent_all_readed_visible" displayName="已阅按钮显示" value="true">
                <tip>最近会话列表全部已阅按钮显示</tip>
            </property>
            
            <property type="bool" name="im_recent_more_menu_visible" displayName="更多按钮显示" value="true">
                <tip>最近会话列表右上角更多菜单按钮显示</tip>
            </property>
            
            <property type="bool" name="im_shortcut_badger" displayName="启用IM Badger图标" value="true">
                <tip>启用IM Badger图标</tip>
            </property>
            
            <group name="im_nav_menu_sort" displayName="标题栏菜单顺序" max-repeat="6">
            
                <tip>friend(添加好友)、group(发起群聊)、official(添加公众号)、aide(文件传输助手)、qrcode(扫一扫)、feedback(BUG反馈)</tip>  
                
                <property type="enum" name="im_nav_menu_item" displayName="标题栏菜单">
                
                    <options multi="false">
                    
                        <option value="friend">friend(添加好友)</option>
                      
                        <option value="group">group(发起群聊)</option>
                      
                        <option value="official">official(添加公众号)</option>
                      
                        <option value="aide">aide(文件传输助手)</option>
                      
                        <option value="qrcode">qrcode(扫一扫)</option>
                      
                        <option value="feedback">feedback(BUG反馈)</option>
                      
                    </options>
                    
                </property>
                
            </group>
            
            <property type="bool" name="im_community_enabled" displayName="开启集体入口" value="false"/>
            <property type="string" name="im_support_study_assistant_cmp" displayName="学习小助手跳转页面" value=""/>
            <property type="string" name="im_psp_assistant" displayName="客服号提示内�������������������������" value="欢迎您使用{appname}" i18n="true" senior="true"/>
			<property type="string" name="im_auto_stick" displayName="自动置顶联系人" value="" senior="true">  
                 <tip>如果有多个用半角逗号隔开</tip>
            </property> 
			<property type="bool" name="im_group_message_assistant" displayName="是否关闭群助手" value="false"/>			
          </properties>  
          
        </page>
        
        <page type="cmp" name="contact" display="通讯录" toplevel="1">
        
            <properties>
                <property type="bool" name="im_add_friend_menu_visible" displayName="添加好友菜单是否可见" value="true"/> 
              
                <group name="im_address_nav_sort" displayName="通讯录导航栏顺序(friend(好友)、group(群组)、org(组织)、official(公众号)" max-repeat="4">
                
                    <property type="enum" name="im_address_nav_item" displayName="通讯录导航栏菜单">
                    
                        <options multi="false">
                        
                            <option value="friend">friend(好友)</option>
                          
                            <option value="group">group(群组)</option>
                          
                            <option value="org">org(组织)</option>
                          
                            <option value="official">official(公众号)</option>

                        </options>
                        
                    </property>
                    
                </group>
            
            </properties>  
            
        </page>
        
        <page type="cmp" name="pad_chat_list" display="聊天列表(Pad)" toplevel="1"/>
        
        <page type="cmp" name="new_msg_notify_setting" display="新消息通知设置界面">
        
            <properties>
            
                <property type="bool" name="im_message_voice_remind" displayName="新消息默认声音提醒" value="false"/>
                
                <property type="bool" name="im_message_vibrate_remind" displayName="新消息默认振动提醒" value="false"/>
                
            </properties>  
            
        </page>
        
        <page type="cmp" name="fontsize_setting" display="字体大小设置"/>
      
      
        <page type="cmp" name="group_list" display="群列表">
        
          	<properties>
                
              <group name="menu" displayName="群组菜单" max-repeat="4">
                
               	  <property type="string" name="title" displayName="菜单标题" i18n="true"/>
                
                  <property type="page" name="pageuri" displayName="跳转页面"/>
               
              </group>
              
              <group name="im_group_type_menu" displayName="群类型菜单" max-repeat="5">
            
                <tip>普通群、部门群、兴趣群、课程群、班级群、家校群、名师群</tip>  
                
                <property type="enum" name="im_group_type_menu_item" displayName="标题栏菜单">
                
                    <options multi="false">
                    
                        <option value="0">普通群</option>
                      
                        <option value="4">部门群</option>
                      
                        <option value="5">兴趣群</option>
                      
                        <option value="6">课程群</option>
                      
                        <option value="8">班级群</option>
                      
                        <option value="9">家校群</option>
                      
                        <option value="10|11|12">名师群</option>
                    </options>
                    
                </property>
                
            </group>
              
            </properties>
          
        </page>      
        
        <page type="cmp" name="org_tree" display="组织树" toplevel="1">
        
            <properties>
            
                <property type="bool" name="im_orgtree_visable" displayName="显示组织树" value="true">
                    <tip>组织树是否可见</tip>  
                    <img src="http://cdncs.101.com/v0.1/static/app_portal/component/im/im_org.jpg"/>  
                    <img src="http://cdncs.101.com/v0.1/static/app_portal/component/im/im_org_2.jpg"/>
                    <img src="http://cdncs.101.com/v0.1/static/app_portal/component/im/im_org_3.jpg"/>
                </property>
                
                <property type="bool" name="im_orgtree_vorg_merge" displayName="虚拟组织树合并显示" value="false">
                    <tip>虚拟组织树合并显示</tip>
                </property>     
                
                <property type="bool" name="im_search_orgtree" displayName="支持搜索组织" value="true"/>
                
                <property type="bool" name="im_org_increment_enable" displayName="开启组织树增量更新" value="false"/>
                
                <property type="bool" name="im_show_org_root_users" displayName="显示组织树的根用户" value="true"/>
                
                <property type="bool" name="im_org_code_visable" displayName="显示工号" value="true"/>
                
                <property type="bool" name="im_support_vorg" displayName="是否开启虚拟组织" value="true"/>
              
              	<property type="bool" name="im_org_user_name_need_real_name" displayName="����������������织树显示名字需要使用RealName" value="true"/>
              
              	<property type="bool" name="im_org_user_cell_click_support_config" displayName="组织树用户项点击可配置化" value="false">
                 	<tip>组织树用户项点击可配置和这个org_click_user_item连用</tip>
                </property>
              
                <property type="bool" name="im_org_node_show_count_config" displayName="显示组织树节点的统计数" value="true">
					<tip>组织树节点的人员总数的显示可配置</tip>
				</property>
              
            </properties> 
            
        </page>
        
        <page type="cmp" name="group_detail" display="群设置">
        
            <params>
            
                <param key="groupId">群组ID，String类型</param>
                
            </params>
            
            <properties>
                <property type="bool" name="im_support_create_group" displayName="是否支持创建群" value="true"/>
                <property type="bool" name="im_support_search_group" displayName="是否支持查找群" value="true"/>
                <property type="bool" name="im_support_burn_message_group" displayName="支持阅后即焚群" value="false"/>
                <property type="bool" name="im_support_group_avatar_jump" displayName="是否支持群头像跳转" value="true"/>
                <property type="bool" name="im_support_recommended_interest_group" displayName="支持推荐兴趣群" value="true"/>
                <property type="bool" name="im_support_group_recommend" displayName="是否支持群推荐" value="true"/>
              	<property type="bool" name="im_support_memdel_all_notify" displayName="是否支持踢人全通知" value="false"/>
				<property type="bool" name="im_support_memexit_all_notify" displayName="是否支持退群全通知" value="false"/>
                <property type="bool" name="im_group_member_list_cell_click_enable" displayName="群成员列表Cell点击事件开启" value="true">
                    <tip>群成员列表Cell点击事件开启</tip>
                </property>
                
                <property type="bool" name="im_entry_group_pay_enable" displayName="入群条件支付功能开启" value="false">
                    <tip>入群条件支付功能开启</tip>
                </property>    
                
                <property type="bool" name="use_advanced_group_verification" displayName="开启高级入群条件" value="false">
                    <tip>��启��级��群条��</tip>
                </property>
              
                <property type="bool" name="im_support_group_look_and_modifies_role_permissions" displayName="支持查看职位权限和修改职位权限" value="true"/>
                
                <property type="bool" name="im_course_group_enabled" displayName="开启课程群入口" value="false"/>
                <property type="page" name="im_group_space_url" displayName="群空间"/>
              
                <property type="enum" name="im_group_join_type" displayName="群成员添加方式">
                    <options multi="false">
                    <option value="1">直接加入</option>
                    <option value="2">通过群邀请函加入</option>
                    </options>
                </property>
              
                <property type="string" name="im_group_invitation_template" displayName="默认邀请函模板" value="亲爱的同学:群{groupname},诚挚邀请您的加入" i18n="true"/>
                
            </properties> 
            
        </page>
        
        <page type="cmp" name="chat" display="聊天">
        
            <params>
                <param key="id">聊天对象的ID，如果是个人传uid，如果是群传gid，一定要传</param>
                <param key="type">聊天的类型，如果是个人传1，如果是群传2，默认是个人，可以不传</param>
                <param key="name">聊天对象的名称，如果是个人传对方的姓名（或者昵称），如果是群传群的名称，如果不传IM内部会去取，取不到则显示ID</param>
            </params>
            
            <properties>

                <property type="bool" name="im_chat_history_search_enable" displayName="是否开启云端消息页面搜索" value="true"/>
              
                <property type="bool" name="im_receipt_chat_enable" displayName="支持消息未读提示" value="true"/> 

                <property type="bool" name="im_support_burn_message" displayName="支持阅后即焚消息" value="false"/>
                
                <property type="bool" name="im_flash_chat_enable" displayName="是否支持闪聊" value="false"/>
              
                <property type="bool" name="im_support_multiple_message_forwarding" displayName="支持多条消息转发" value="true"/>
              
                <property type="bool" name="im_support_quick_reply" displayName="支持快捷回复" value="true"/>

                <property type="bool" name="im_chat_add_to_desktop" displayName="支持聊天添加桌面快捷方式" value="true"/>         
              
                <property type="bool" name="im_chat_input_spell_check_default" displayName="拼写更正默认" value="false"/>
              
                <property type="bool" name="im_visible_add_or_remove_friend_btn" displayName="显示添加好友" value="true"/>   
              
                <property type="bool" name="im_chat_bottom_function_writing" displayName="支持手写" value="true"/>
              
                <property type="bool" name="im_chat_bottom_function_scrawl" displayName="支持涂鸦" value="true"/> 
              
                <group name="im_reward_property" displayName="打赏（鲜花，网龙币，礼物）" max-repeat="3">

                    <property type="enum" name="im_reward_property_item" displayName="打赏（鲜花，网龙币，礼物）">

                        <options multi="false">

                            <option value="1">flower(鲜花)</option>
                        
                            <option value="2">ndCoin(网龙币)</option>

                            <option value="3">gift(礼物)</option>

                        </options>

                    </property>

                </group>     
              
                <group name="im_box_text_link_pattern_support" displayName="box消息文字支持跳转类型菜单" max-repeat="1">
                	
                    <property type="enum" name="im_box_text_link_pattern_support_item" displayName="开启菜单，不选默认全开">
                
                    	<options multi="true">
                    
                        	<option value="0">Email【必选】</option>
                      
                        	<option value="1">电话【可选】</option>
                      
                        	<option value="2">网址链接【必选】</option>
                      
                    	</options>
                      
                    </property>
                  
				</group>
              
                <group name="im_top_property" displayName="聊天置顶" max-repeat="1">

                    <property type="enum" name="im_top_property_unable_item" displayName="关闭聊天置顶">

                        <options multi="true">

                            <option value="1">person(人)</option>
                        
                            <option value="2">group(群)</option>

                            <option value="3">agent(代理号)</option>

                            <option value="4">sub psp(订阅号)</option>

                            <option value="5">ent psp(应用号)</option>

                        </options>

                    </property>                    

                </group>     

                <group name="im_no_disturb_property" displayName="聊天免扰" max-repeat="1">

                    <property type="enum" name="im_no_disturb_property_unable_item" displayName="关闭消息免扰" max-repeat="1">

                        <options multi="false">

                            <option value="1">person(人)</option>
                        
                            <option value="2">group(群)</option>

                            <option value="3">agent(代理号)</option>

                            <option value="4">sub psp(订阅号)</option>

                            <option value="5">ent psp(应用号)</option>

                        </options>

                    </property>                    

                </group>     

                <group name="im_unread_count_in_point_property" displayName="未读显示角标代替数字" max-repeat="1">

                    <property type="enum" name="im_unread_count_in_point_property_item" displayName="未读角标代替数字">

                        <options multi="true">

                            <option value="1">person(人)</option>
                        
                            <option value="2">group(群)</option>

                            <option value="3">agent(代理号)</option>

                            <option value="4">sub psp(订阅号)</option>

                            <option value="5">ent psp(应用号)</option>

                        </options>

                    </property>                    

                </group>       

                <group name="im_chat_link_style" displayName="聊天页面link消息显示样式" max-repeat="1">

                    <property type="enum" name="im_chat_link_style_item" displayName="聊天页面link消息显示样式">

                        <options multi="false">

                            <option value="0">旧样式</option>
                        
                            <option value="1">新样式</option>

                        </options>

                    </property>                    

                </group>               
                      
              
            </properties>
            
        </page>
        
        <page type="cmp" name="dismiss_group" display="解散群">
        
            <params>
            
                <param key="groupId">����������ID，如果是个人传uid，如果是群传gid，一定要传</param>
                
            </params>
            
        </page>
        
        <page type="cmp" name="cloud_contact" display="云办公通讯录" toplevel="1"/>
        
        <page type="cmp" name="contact_choose" display="���择联���人(单选)">
        
            <params>
            
                <param key="title">输入标题���称</param>
                
                <param key="uid">输出uid</param>
                
            </params>
            
        </page>
        
        <page type="cmp" name="friend_list" display="好友列表">
        
            <properties>
            
                <property type="bool" name="im_close_friend" displayName="关闭好友功能" value="false" deprecated=""/>
                
                <property type="bool" name="im_friend_display_follow" displayName="好友关系显示关注" value="true" deprecated=""/>
                
                <property type="page" name="im_add_friend_page" displayName="点击添加好友跳转界面" deprecated="">
                    <tip>点击添加好友跳转界面</tip>
                </property>   
                
            </properties>
            
        </page>
        
 </pages>
    
    
    <events>
    
        <event name="im_click_portrait" desc="点击用户头像" filter="on_avatar_click" sync="1"/>
        
        <event name="im_click_placeOrder" desc="点击下单" filter="on_placeOrder_click" sync="1"/>
      
        <event name="im_org_click_user_item" desc="点击组织树用户项" sync="1"/>
        
    </events>
 
 
    <handlers>
    
        <handler name="goChatPage" desc="进入聊天界面" filter="on_chat_click">
        
            <params>
            
                <param key="id">聊天对象的ID，如果是个人传uid，如果是群传gid，一定要传</param>
                
                <param key="type">聊天的类型，如果是个人传1，如果是群传2，默认是个人，可以不传</param>
                
                <param key="name">聊天对象的名称，如果是个人传对方的姓名（或者昵称），如果是群传群的名称，如果不传IM内部会去取，取不到则显示ID</param>
                
            </params>
            
        </handler>
        
        <handler name="goContactPage" desc="���������������������������������������������������入通讯录界面" filter="on_contact_click"/>
        
        <handler name="setAllMessageRead" desc="设置全部消息已�����������������������������������������������������������������" filter="on_setallmessage_read_click"/>
        
        <handler name="receive_event_im_change_status" desc="im阻断事件" receive_event="im_function_switch"/>
      
    </handlers>

    
    <properties>
       <property type="bool" name="im_immersive_style" displayName="是否开启im沉浸式体验" value="false"/> 
       <property type="bool" name="im_welcome_message" displayName="是否屏蔽最近列表欢迎消息" value="false"/>  
       <property type="bool" name="im_share_origin" displayName="应用外分享不压缩" value="false"/>  
       <property type="bool" name="im_share_to_group" displayName="分享到群组" value="false"/>  
    
        <!--遗弃 start-->
        <property type="bool" name="im_orgtree_visable" displayName="显示组织树" value="true" deprecated="//page[@name=org_tree]">
            <tip>组织树是否可见</tip>  
            <img src="http://cdncs.101.com/v0.1/static/app_portal/component/im/im_org.jpg"/>  
            <img src="http://cdncs.101.com/v0.1/static/app_portal/component/im/im_org_2.jpg"/>
            <img src="http://cdncs.101.com/v0.1/static/app_portal/component/im/im_org_3.jpg"/>
        </property>
        <property type="bool" name="im_search_orgtree" displayName="支持搜索组织" value="true" deprecated="//page[@name=org_tree]"/>
        <property type="bool" name="im_chatlist_top_btn_visible" displayName="聊天列表标题栏显示通讯录入口" value="true" deprecated="//page[@name=chat_list]"/>
        <property type="bool" name="im_show_contact_tab" displayName="聊天列表显示通讯录导航" value="false" deprecated="//page[@name=chat_list]"/>
        <property type="bool" name="im_org_increment_enable" displayName="开启组织树增量更新" value="true" deprecated="//page[@name=org_tree]"/>
        <property type="bool" name="im_message_voice_remind" displayName="新消息默认声音提醒" value="false" deprecated="//page[@name=new_msg_notify_setting]"/>
        <property type="bool" name="im_message_vibrate_remind" displayName="新消息默认振动提醒" value="false" deprecated="//page[@name=new_msg_notify_setting]"/>
        <property type="bool" name="im_show_org_root_users" displayName="显示组织树的根用户" value="true" deprecated="//page[@name=org_tree]"/>

        <property type="bool" name="im_org_code_visable" displayName="显示工号" value="true" deprecated="//page[@name=org_tree]"/>
        <property type="string" name="im_address_nav_sort" displayName="通讯录导航栏顺序" value="friend,group,org,official" deprecated="">
            <tip>friend(好友)、group(群组)、org(组织)、official(公众号)</tip>  
        </property>
        <property type="string" name="im_nav_menu_sort" displayName="标题栏菜单顺序" value="friend,group,official,aide,qrcode,feedback" deprecated="">
            <tip>friend(添加好友)、group(发起群聊)、official(添加公众号)、aide(文件传输助手)、qrcode(扫一扫)、feedback(BUG反馈)</tip>  
        </property>
        <property type="bool" name="im_close_friend" displayName="关闭好友功能" value="false" deprecated="//page[@name=friend_list]"/>
        <property type="bool" name="im_aide_visable" displayName="开启文件传输助手" value="true" deprecated="//page[@name=chat_list]"/>
        <property type="bool" name="im_friend_display_follow" displayName="好友关系显示关注" value="true" deprecated="//page[@name=friend_list]"/>
        <property type="bool" name="im_support_burn_message" displayName="支持阅后即焚消息" value="false" deprecated="//page[@name=chat]"/>
        <property type="bool" name="im_support_burn_message_group" displayName="支持焚毁消息群" value="false" deprecated="//page[@name=group_detail]"/>
        <property type="bool" name="im_recent_all_readed_visible" displayName="已阅按钮显示" value="true" deprecated="//page[@name=chat_list]">
            <tip>最近会话列表全部已阅按钮显示</tip>
        </property>
        <property type="bool" name="im_recent_more_menu_visible" displayName="更��按��显��" value="true" deprecated="//page[@name=chat_list]">
            <tip>���近���话���表���上���更���菜���按��������示</tip>
        </property>
        <property type="bool" name="im_group_member_list_cell_click_enable" displayName="群成员列表Cell点���事���开���" value="true" deprecated="//page[@name=group_detail]">
            <tip>群成员列表Cell��击��件��启</tip>
        </property>
        <property type="bool" name="im_entry_group_pay_enable" displayName="入群条件支付功能开启" value="false" deprecated="//page[@name=group_detail]">
            <tip>入群条件支付功能开启</tip>
        </property>    
        <property type="page" name="im_add_friend_page" displayName="点击添加好友跳转界面" deprecated="//page[@name=friend_list]">
            <tip>点击添加好友跳转界面</tip>
        </property>   
        <property type="bool" name="im_orgtree_vorg_merge" displayName="虚拟组织树合并显示" value="false" deprecated="//page[@name=org_tree]">
            <tip>虚拟组织树合并显示</tip>
        </property>               
        <property type="bool" name="use_advanced_group_verification" displayName="开启高级入群条件" value="false" deprecated="//page[@name=group_detail]">
            <tip>开启高级入群条件</tip>
        </property>
        <property type="bool" name="im_flash_chat_enable" displayName="是否支持闪聊" value="false" deprecated="//page[@name=chat]"/>
        <!--遗弃 end-->
      
        <property type="bool" name="im_support_time_message" displayName="定时��息" value="false">
            <dependency>
                <component namespace="com.nd.sdp.component" name="timermessageplugin" display="定时消息插件"/>
            </dependency>
        </property>
      
        <property type="bool" name="im_support_nurturance" displayName="聊天养成" value="false">
            <dependency>
                <component namespace="com.nd.sdp.component" name="nurturanceplugin" display="聊天养成插件"/>
            </dependency>
        </property>    
      
        <property type="bool" name="im_support_msg_priviledge" displayName="消息发送权限" value="false">
             <dependency>
               <component namespace="com.nd.sdp.component" name="userauthorityconfigplugin" display="消息发送权限插件"/>
            </dependency>
        </property>   
      
        <property type="bool" name="im_support_chat_animation" displayName="聊天彩蛋" value="true">
             <dependency>
               <component namespace="com.nd.sdp.component" name="messageadetectionplugin" display="聊天彩蛋"/>
            </dependency>
        </property>
      
        <property type="bool" name="im_support_email_interaction" displayName="IM与邮件互通" value="false">
             <dependency>
               <component namespace="com.nd.sdp.component" name="im-emailplugin" display="IM与邮件互通插件"/>
            </dependency>
        </property>
      
        <property type="bool" name="im_support_group_ProhibitSpeak" displayName="群内禁言" value="false">
             <dependency>
                 <component namespace="com.nd.sdp.component" name="groupprohibitspeakplugin" display="群内禁言插件"/>
            </dependency>
        </property>
      
         <property type="bool" name="im_support_course_group" displayName="课程群" value="false">
             <dependency>
               <component namespace="com.nd.sdp.component" name="im-course-group" display="课程群功能插件"/>
            </dependency>
        </property>
      
        <property type="bool" name="im_support_assignment" displayName="群任务" value="false">
             <dependency>
               <component namespace="com.nd.sdp.component" name="grouptask" display="群任务插件"/>
            </dependency>
        </property>      
      
         <property type="bool" name="im_support_ai_Intelligent_learning_assistant" displayName="IM��能��服" value="false">
             <dependency>
               <component namespace="com.nd.sdp.component" name="imcustomservice" display="IM智������服插件"/>
            </dependency>
        </property>
      
        <property type="bool" name="im_support_audio_trans" displayName="语音转文字" value="true">
             <dependency>
               <component namespace="com.nd.sdp.component" name="voicetransform" display="语音转文字插件"/>
            </dependency>
        </property>   
      
         <property type="bool" name="im_support_importantmessage_plugin" displayName="重要消息" value="false">
             <dependency>
               <component namespace="com.nd.sdp.component" name="importantmessage-plugin" display="重要消息插件"/>
            </dependency>
        </property>     
        
        <property type="bool" name="im_support_InputPanelEnhancePlugin" displayName="聊天插件配置化" value="false">
             <dependency>
               <component namespace="com.nd.sdp.component.im" name="inputpanelenhance-plugin" display="聊天插件配置化"/>
            </dependency>
        </property>
      
        <property type="bool" name="im_group_stick" displayName="群聊置顶" value="false">
             <dependency>
               <component namespace="com.nd.sdp.component" name="groupstick-plugin" display="群聊置顶插件"/>
            </dependency>
        </property>
      
        <property type="bool" name="im_support_group_invitation" displayName="是否支持群邀请函" value="true">
             <dependency>
                 <component namespace="com.nd.sdp.component" name="groupinvitation" display="群邀请插件"/>
            </dependency>
        </property>
      
         <property type="bool" name="im_support_group_grouplevel" displayName="是否支持群等级" value="true">
             <dependency>
                 <component namespace="com.nd.sdp.component" name="grouplevel" display="群等级���件"/>
            </dependency>
        </property>
      
        <property type="bool" name="im_support_group_groupentrycondition" displayName="是否支持入群条件" value="true">
             <dependency>
                 <component namespace="com.nd.sdp.component" name="groupentrycondition" display="入群条件插件"/>
            </dependency>
        </property> 
      
        <property type="string" name="im_file_base_path" displayName="SD卡文件存储目录(android)" value="99U"/>
        
        <property type="string" name="im_bug_feedback_name" displayName="bug反馈号名称" value="bug小助手" i18n="true"/>
        
        <property type="string" name="im_bug_feedback_uid" displayName="bug反馈号ID" value=""/>  
      
      <property type="bool" name="im_support_file_system" displayName="支持文件系统(iOS)" value="false">
             <dependency>
               <component namespace="com.nd.sdp.component" name="filesystem-plugin" display="支持文件系统(iOS)"/>
            </dependency>
        </property>
		<property type="bool" name="im_support_group_event" displayName="群内特有事件" value="false">
             <dependency>
               <component namespace="com.nd.sdp.component" name="im-group-reminder" display="群内特有事件"/>
            </dependency>
        </property>
        
        <property type="bool" name="im_support_agent_grouping" displayName="代理会话折叠" value="false">
             <dependency>
               <component namespace="com.nd.sdp.component" name="im-agent-grouping-plugin" display="代理会话折叠"/>
            </dependency>
        </property>            
        <property type="bool" name="im_support_chat_room" displayName="聊天室插件" value="true">
             <dependency>
               <component namespace="com.nd.sdp.component" name="imchatroom" display="聊天室插件"/>
            </dependency>
        </property>
      
        <property type="bool" name="im_support_split_screen" displayName="是��支��分��" value="true">
            <tip>��否��持��屏</tip>
        </property>
        
        <property type="bool" name="im_support_robot_to_artificial_service" displayName="IM机��人代理转人工" value="true">
             <dependency>
               <component namespace="com.nd.sdp.component" name="im-robot" display="IM��器人代��转人工"/>
            </dependency>
        </property>
        <property type="bool" name="im_support_group_history_files" displayName="支持群历史群文件" value="true">
             <dependency>
               <component namespace="com.nd.sdp" name="grouphistoryfiles" display="支持群历史群文件"/>
            </dependency>
        </property>
    </properties>  
  
    <runtime>
      <!--组件延迟初始化配置-->
      <properties>
        <property type="bool" name="lazy_init_android" displayName="是否开启延迟初始化" value="false"/>
      </properties>
      <providers>
        <provider name="com.nd.sdp.android.common.search_widget.im_sub_psp_portal" filter="com.nd.sdp.android.common.search_widget.portal_provider" desc="聚合搜索入口信息提供者" anClass="com.nd.module_im.appFactoryComponent.provider.SubPspSearchPortalDataProvider"/>
      	<provider name="com.nd.sdp.android.common.search_widget.im_agent_notification_portal" filter="com.nd.sdp.android.common.search_widget.portal_provider" desc="聚合搜索入口信息提供者" anClass="com.nd.module_im.appFactoryComponent.provider.AgentNotificationSearchPortalDataProvider"/> 
      	<provider name="com.nd.sdp.android.common.search_widget.im_ent_psp_portal" filter="com.nd.sdp.android.common.search_widget.portal_provider" desc="聚合搜索入口信息提供者" anClass="com.nd.module_im.appFactoryComponent.provider.EntPspSearchPortalDataProvider"/>
      	<provider name="com.nd.sdp.android.common.search_widget.im_recent_contact_portal" filter="com.nd.sdp.android.common.search_widget.portal_provider" desc="聚合搜索入口信息提供者" anClass="com.nd.module_im.appFactoryComponent.provider.RecentContactSearchPortalDataProvider"/>
      </providers>
    </runtime>
  
    <build>
        <android>   
            <safe_whitelist>
                <activities>
                    <activity name="com.nd.module_im.search_v2.activity.ShareInSelectContactActivity" describe="需要暴露给外部应用分享使用" type="activity" owner="鄢宜扬"/>
                    <activity name="com.nd.module_im.im.activity.ChatShortCutActivity" describe="需要暴露给桌面应用调用" type="activity" owner="鄢宜扬"/>
                	<activity name="com.nd.module_im.search_v2.activity.ShareInSelectGroupActivity" describe="需要暴露给外部应用分享使用" type="activity" owner="鄢宜扬"/>
              	</activities>
            </safe_whitelist>
        </android>
	</build>
  
    <android>
        <class>com.nd.module_im.appFactoryComponent.IMComponent</class>
        
<scenes>
   <scene name="android.permission.ACCESS_WIFI_STATE" displayName="获取wifi状态权限" describe="IM发送消息时判断wifi连接状态" isAsk="false" closeable="true" type="permission"/>
   <scene name="android.permission.ACCESS_NETWORK_STATE" displayName="获取网络状态权限" describe="IM消息发送消息是判断网络连接状态" isAsk="fase" closeable="true" type="permission"/>
   <scene name="android.permission.INTERNET" displayName="网���������������������限" describe="发送和接收IM消息" isAsk="true" closeable="true" type="permission"/>
   <scene name="android.permission.RECORD_AUDIO" displayName="录音权限" describe="发送语音消息需要的权限" isAsk="true" closeable="true" type="permission"/>
   <scene name="android.permission.CAMERA" displayName="相机权限" describe="拍摄需要的权限" isAsk="true" closeable="true" type="permission"/>
   <scene name="android.permission.WRITE_EXTERNAL_STORAGE" displayName="存储权限" describe="存放IM消息文件、图片等" isAsk="true" closeable="true" type="permission"/>
   <scene name="android.permission.VIBRATE" displayName="允许���序振��� " describe="消息通知震动" isAsk="false" closeable="true" type="permission"/>
   <scene name="android.permission.READ_EXTERNAL_STORAGE" displayName="读取存���权限" describe="发���消���时���户���择���展���储���文���" isAsk="true" closeable="true" type="permission"/>
   <scene name="android.permission.MEDIA_MOUNTED" displayName="" describe="" isAsk="true" closeable="true" type="permission"/>
   <scene name="com.android.launcher.permission.INSTALL_SHORTCUT" displayName="添加桌面快捷" describe="适配第三方rom快捷方式创建提供的权限" isAsk="true" closeable="true" type="permission"/>
   <scene name="com.android.launcher.permission.UNINSTALL_SHORTCUT" displayName="移除快捷方式权限" describe="适配第三方rom快捷方式移除提������������的权限" isAsk="true" closeable="true" type="permission"/>
   <scene name="com.android.launcher.permission.READ_SETTINGS" displayName="查询快捷方式权限" describe="适配第三方rom快捷方式创建提供的权限" isAsk="true" closeable="true" type="permission"/>
   <scene name="com.android.launcher.permission.WRITE_SETTINGS" displayName="添加快捷方式权限" describe="适配第三方rom快捷方式创建提供的权限" isAsk="true" closeable="true" type="permission"/>
  <scene name="com.android.launcher2.permission.READ_SETTINGS" displayName="查询快捷方式权限" describe="适配第三方rom快捷方式创建提供的权限" isAsk="true" closeable="true" type="permission"/>
  <scene name="com.android.launcher2.permission.WRITE_SETTINGS" displayName="添加快捷方式权限" describe="适配第���方rom快捷方式创建提供的权限" isAsk="true" closeable="true" type="permission"/>
   <scene name="com.android.launcher3.permission.READ_SETTINGS" displayName="查询快捷方式权限" describe="框架提供网络请求��������������" isAsk="true" closeable="true" type="permission"/>
   <scene name="com.android.launcher3.permission.WRITE_SETTINGS" displayName="添加快捷方式权限" describe="适配第三方rom快捷方式创建提供的权限" isAsk="true" closeable="true" type="permission"/>
   <scene name="android.permission.REQUEST_INSTALL_PACKAGES" displayName="未知来源应用安装权限" describe="点击apk类型文件消息时发起安装" isAsk="true" closeable="true" type="permission"/>
  <!--shortcut-badger-->
  <scene name="com.sec.android.provider.badge.permission.READ" displayName="" describe="" isAsk="true" closeable="true" type="permission"/>
  <scene name="com.sec.android.provider.badge.permission.WRITE" displayName="" describe="" isAsk="true" closeable="true" type="permission"/>
  <scene name="com.htc.launcher.permission.READ_SETTINGS" displayName="" describe="" isAsk="true" closeable="true" type="permission"/>
  <scene name="com.htc.launcher.permission.UPDATE_SHORTCUT" displayName="" describe="" isAsk="true" closeable="true" type="permission"/>
  <scene name="com.sonyericsson.home.permission.BROADCAST_BADGE" displayName="" describe="" isAsk="true" closeable="true" type="permission"/>
  <scene name="com.sonymobile.home.permission.PROVIDER_INSERT_BADGE" displayName="" describe="" isAsk="true" closeable="true" type="permission"/>
  <scene name="com.anddoes.launcher.permission.UPDATE_COUNT" displayName="" describe="" isAsk="true" closeable="true" type="permission"/>
  <scene name="com.majeur.launcher.permission.UPDATE_BADGE" displayName="" describe="" isAsk="true" closeable="true" type="permission"/>
  <scene name="com.huawei.android.launcher.permission.CHANGE_BADGE" displayName="华为桌面权限" describe="" isAsk="true" closeable="true" type="permission"/>
  <scene name="com.huawei.android.launcher.permission.READ_SETTINGS" displayName="���为桌面���限" describe="" isAsk="true" closeable="true" type="permission"/>
  <scene name="com.huawei.android.launcher.permission.WRITE_SETTINGS" displayName="华为���面权限" describe="" isAsk="true" closeable="true" type="permission"/>
  <scene name="com.oppo.launcher.permission.READ_SETTINGS" displayName="添加快捷方式权限" describe="" isAsk="true" closeable="true" type="permission"/>
  <scene name="com.oppo.launcher.permission.WRITE_SETTINGS" displayName="oppo桌面权限" describe="" isAsk="true" closeable="true" type="permission"/>
  <scene name="me.everything.badger.permission.BADGE_COUNT_READ" displayName="" describe="" isAsk="true" closeable="true" type="permission"/>
  <scene name="me.everything.badger.permission.BADGE_COUNT_WRITE" displayName="" describe="" isAsk="true" closeable="true" type="permission"/>
  <scene name="android.permission.READ_APP_BADGE" displayName="" describe="" isAsk="true" closeable="true" type="permission"/>
  <scene name="_applicationId_.permission.im_time_update" displayName="接收自定义广播" describe="接收自定义广播" isAsk="true" closeable="true" type="permission"/>
</scenes>

        <dependency>
            <![CDATA[
            
				def im_version = "22.16.3.15200.release"
				compile("com.nd.sdp.im:GroupMemberNickManager:${im_version}") {     
                    exclude group: 'com.android.support'
                    exclude group:'com.nd.android.im_plugin',module:'im-plugin-group-ad'
                }

                compile("com.nd.android.sdp.im:msg_assign:${im_version}") {     
                    exclude group: 'com.android.support'
                }

                compile("com.nd.android.sdp.im:module_im:${im_version}") {     
                    exclude group: 'com.android.support'
                    exclude group:'com.nd.android.im_plugin',module:'im-plugin-group-ad'
                }
                compile("com.nd.sdp.im:big_conv:${im_version}") {     
                    exclude group: 'com.android.support'
                }

                compile('com.nd.sdp.im.message_ext:rich_tip:0.1.25.release') {     
                    exclude group: 'com.android.support'
                }

				def group_version = "23.12.132.release"
				compile ("com.nd.android.sdp.im:im_group_chat:${group_version}")
				compile ("com.nd.android.sdp.im:im_group_upload:${group_version}")
				compile ("com.nd.android.sdp.im:im_group_core:${group_version}")


  				compile('com.nd.android.sdp.common:handWrite:1.2.1.32.release') {
            		exclude group: 'android.support'
            		exclude group: 'com.android.support'
            		exclude group: 'com.nd.sdp.android.common'
        		}

				compile('com.nd.sdp.android.common.badger:shortcut-badger:1.1.6') 

                compile('com.nd.android.sdp.module_file_explorer:module_file_explorer:3.0.126.release')

                annotationProcessor "com.nd.sdp.android.serviceloader:service-loader-compiler-app:1.2.2"

				compile('com.nd.sdp.im.common:im_proxy_impl_appfactory:1.2.135.release')

				compile('com.nd.android.im:file_transmit_sdk:1.0.211.release')

				compile('com.nd.android.sdp.im:flexboxview:0.10.1.168.release')
				compile('com.nd.android.sdp.im:boxview:0.10.1.168.release')

				compile('com.nd.sdp.im.common:im_proxy_impl_appfactory:3.0.172.release')

				compile('com.nd.android.sdp.social:module_recorder:13.7.5.release')

				compile('com.nd.sdp.android:smartutils:2.2.8.090.product')
            ]]>
        </dependency>
        
        <groovy>
            <![CDATA[
            
                dependencies {

                    compile ('com.nd.android.im_plugin:chat_activity_skin_plugin:0.1.40.release')
                }

                configurations {
                    all*.exclude group: 'android.support'
                    all*.exclude group: 'com.netflix.rxjava'
                    all*.exclude group: 'com.nd.android.sdp.demo' , module: 'module_orgtree_ui'
                    all*.exclude group: 'com.nd.android.sdp.demo' , module: 'contentServiceSdk'
                    all*.exclude group: 'com.nd.android.sdp.demo' , module: 'module_commonResource'
                    all*.exclude group: 'com.nd.android.sdp.common' , module: 'style'
                    all*.exclude group:'com.nd.sdp.android.unclemock', module: 'unclemock'
                }
                android {
          			compileOptions {
     	    			sourceCompatibility JavaVersion.VERSION_1_8
            			targetCompatibility JavaVersion.VERSION_1_8
          			}
        		}
            ]]>              
        </groovy>
    </android>
    <!--21.20.256    21.21.270-->
    <ios>
        <class>IMSComponent</class>
        <dependency>
          <![CDATA[
                fileObj = File.new(__FILE__, "r")
                while (line = fileObj.gets)
                        if(line =~ /\s(p)od\s+'x_study_activity_ios'/)
                                $imscomponent_version =  "21.21.367"
                                break
                        else
                                $imscomponent_version =   "21.20.267"
                        end

                end
                fileObj.close
                pod 'IMSComponent', $imscomponent_version 
				pod 'IMExtend' , '1.0.137'
				pod 'IMGroupSDK', '0.0.82'
				pod 'IMGroupCoreSDK', '0.0.88-hotfix5'
               ]]>
        </dependency>
        <scenes>
        	<scene name="NSCameraUsageDescription" describe="���������的�����是��了��照��送图片消息"/>
            <scene name="NSMicrophoneUsageDescription" describe="访问您的麦克风是为了录制发送语音消息"/>
        </scenes>
    </ios>

</component><component display="设置" name="appsetting" namespace="com.nd.social">
        <pages>
            <page type="cmp" name="appsetting" display="设置" toplevel="1" allow_guest="true"/>
            <page type="cmp" name="changeLanguage" display="选择语言" allow_guest="true"/>
            <page type="cmp" name="aboutUs" display="关于" allow_guest="true"/>
           <page type="cmp" name="historyVersion" display="版本履历" allow_guest="true"/>
           <page type="cmp" name="subpage" display="隐私设置" allow_guest="true">
				<params>
                      <param key="page_name">页面名</param>
                </params>
		  </page>
        </pages>
        <properties>
          <property type="bool" name="showPrivacy" desc_true="显示" desc_false="隐藏" displayName="显示【隐私设置】" value="true"/>
          <property type="bool" name="showBindMobile" desc_true="显示" desc_false="隐藏" displayName="显示【手机绑定】" value="false"/>
          <property type="bool" name="showChangePassword" desc_true="显示" desc_false="隐藏" displayName="显示【修改密码】" value="false" senior="true">
              <tip>是否显示【修改密码】，选中则显示，非选中则隐藏</tip>
              <img src="http://cdncs.101.com/v0.1/96406b1b-29eb-41f2-b165-11cd2e678966/static/app_portal/social-setting/setting_changepwd_show.png"/>
   			  <img src="http://cdncs.101.com/v0.1/96406b1b-29eb-41f2-b165-11cd2e678966/static/app_portal/social-setting/setting_changepwd_hide.png"/>
          </property>
          <property type="bool" name="showHomePage" desc_true="显示" desc_false="隐藏" displayName="显示【个人主页】" value="false"/>
          <property type="bool" name="showLanguage" desc_true="显示" desc_false="隐藏" displayName="显示【选择语言】" value="true"/>
          <property type="bool" name="showShortcut" desc_true="显示" desc_false="隐藏" displayName="Andriod显示【快捷启动】" value="true"/>
          <property type="bool" name="showInvitingFriends" desc_true="显示" desc_false="隐藏" displayName="显示【邀请好友】" value="false"/>
          <property type="bool" name="showFeedback" desc_true="显示" desc_false="隐藏" displayName="显示【意见反馈】" value="false"/>
          <property type="bool" name="showDownload" desc_true="显示" desc_false="隐藏" displayName="显示【下载管理】" value="false"/>
          <property type="bool" name="showUploadLog" desc_true="显示" desc_false="隐藏" displayName="显示【上传日志】" value="false" senior="true">
                <tip>是否显示【上传日志】，选中则显示，非选中则隐藏</tip>
    		    <img src="http://cdncs.101.com/v0.1/static/app_portal/component/setting/setting_showlog.png"/>
   			    <img src="http://cdncs.101.com/v0.1/static/app_portal/component/setting/setting_hidelog.png"/>
          </property> 
          <property type="bool" name="showCheckUpdate" desc_true="显示" desc_false="隐藏" displayName="显示【检查更新】(iOS)" value="true"/>
          <property type="int" name="smartCleanCacheTriggerValue" displayName="智能清理缓存触发值，达到了这个值就进行缓存清理，单位M;值为正数才触发"/>
          <property type="int" name="smartCleanCacheTimeInterval" displayName="智能清理缓存间隔时间，退到后台并达到距离上次清理时间间隔后，将自动执行一次自动清除缓存流程,单位为小时"/>
          <property type="bool" name="isIOSLandscape" desc_true="开启" desc_false="关闭" displayName="是否启用横屏支持(iOS)" value="false"/>

          <property type="bool" name="showAboutUs" desc_true="显示" desc_false="隐藏" displayName="显示【关于】" value="true"/>
          <property type="string" name="aboutUsText" displayName="【关于】设置项命名" senior="true" i18n="true"/>
          <property type="image" name="aboutUsLogo" displayName="【关于】内应用logo" senior="true" accept="png,gif,jpeg,jpg">
              <tip>提示文件</tip>
              <img src="示例图片"/>
           </property>
          
          <property type="string" name="aboutUsCmpUrl" displayName="【关于界面产品定制化配置】"/>
          <property type="string" name="aboutUsCommentUrl" displayName="【关于】评分URL" senior="true"/>
          <property type="string" name="aboutUsUsageUrl" displayName="【关于】条款URL" senior="true"/>
          <property type="string" name="aboutUsCopyRight" displayName="【关于】版权信息" senior="true" i18n="true"/>
          <property type="string" name="aboutUsCopyRightEn" displayName="【关于】版权信息【英文】" senior="true" i18n="true"/>
          <property type="image" name="aboutAppDownloadQR" displayName="【关于】app下载地址二维码图片" senior="true"/>
      
            <group name="appsetting" displayName="应用设置" max-repeat="10">
               <property type="string" name="name" displayName="设置项名称" i18n="true"/>
               <property type="string" name="url" displayName="设置项跳转URL，支持cmp和http地址,设置项类型设为开关类型，可不填"/>
               <property type="string" name="event" displayName="设置项状态的事件名"/>
               <property type="enum" name="type" displayName="设置项类型，请选择正确的类型">
                  <options multi="false">
                     <option value="jump">跳转</option>
                     <option value="switch">开关</option>
                   </options>
               </property>
               <property type="bool" name="thirdLogin" desc_true="显示" desc_false="隐藏" displayName="第三方登录可见" value="true"/>
              <property type="bool" name="noLogin" desc_true="显示" desc_false="隐藏" displayName="未登录可见" value="true"/>
            </group>
            <group name="more" displayName="更多" max-repeat="10">
               <property type="string" name="name" displayName="设置项名称" i18n="true"/>
               <property type="string" name="url" displayName="设置项跳转URL，支持cmp和http地址,设置项类型设为开关类型，可不填"/>
               <property type="string" name="event" displayName="设置项状态的事件名"/>
               <property type="enum" name="type" displayName="设置项类型，请选择正确的类型">
                  <options multi="false">
                     <option value="jump">跳转</option>
                     <option value="switch">开关</option>
                   </options>
               </property>
               <property type="bool" name="thirdLogin" desc_true="显示" desc_false="隐藏" displayName="第三方登录可见" value="true"/>
              <property type="bool" name="noLogin" desc_true="显示" desc_false="隐藏" displayName="未登录可见" value="true"/>
            </group>
            <property type="enum" name="setting_autoplay_default_config" os="all" displayName="设置自动播放默认配置">
                <options multi="false">
                    <option value="1">移动流量及wifi自动播放</option>
                    <option value="2">仅wifi自动播放</option>
                    <option value="3">关闭自动播放</option>
                </options>
            </property>
        </properties>
        <events>
        </events>
  
        <handlers>
        <handler name="not-ios://socialSettingHandler" desc="设置延迟加载事件" receive_event="cmp://com.nd.smartcan.appfactory.demo.main_component/check_have_new_version,event_send_new_tab_count,event_setting_cache_info,event_app_language_changed,com.nd.social.appsetting.EVENT_FETCH_APP_VERSION_NAME,com.nd.social.appsetting.EVENT_APP_NEW_VERSION_BADGE,handler_app_update_event,com.nd.social.appsetting.EVENT_GET_CACHE_SIZE,event_appsettting_get_cache_info"/>
  	</handlers>
  
    <runtime>
      <properties>
        <property type="bool" name="lazy_init_android" displayName="是否开启延迟初始化" value="true"/>
      </properties>
      
        <providers>
        <provider name="com.nd.social.appsetting.GetCommonSwitchStatus" filter="" desc="设置项状态"/>
      </providers>
      <activity_screen_orientations displayName="要替换界面方向白名单,要有申明才能替换，不支持新增加">
        <activity_screen_orientation value="com.nd.setting.module.setting.view.SettingActivity"/>
		<activity_screen_orientation value="com.nd.setting.module.about.SettingAboutActivity"/>
		<activity_screen_orientation value="com.nd.setting.module.invitefriend.InvitingFriendsActivity"/>
		<activity_screen_orientation value="com.nd.setting.module.shortcut.view.ShortcutListActivity"/>
		<activity_screen_orientation value="com.nd.setting.module.shortcut.view.ShortcutBridgeActivity"/>
		<activity_screen_orientation value="com.nd.setting.module.versionhistory.VersionResumeActivity"/>
		<activity_screen_orientation value="com.nd.setting.module.lanuage.view.LanguageActivity"/>
		<activity_screen_orientation value="com.nd.setting.module.lanuage.view.LanguageActivity2"/>
		<activity_screen_orientation value="com.nd.setting.module.autoplay.view.AutoPlayConfigActivity"/>
      </activity_screen_orientations>
    </runtime>
            <android>
				<class>com.nd.setting.guide.SettingComponent</class>
			<dependency>
               compile('com.nd.android.sdp.social:module_setting:25.3.6.49ac82e') 
              compile('com.nd.android.smartcan:version-history:3.5.1-release.1@aar') {
        			transitive = true
        			changing = true
              		exclude group: 'android.support', module: 'android-support-v4'
   			  }
             compile ('com.nd.android.sdp.ucext:module_orgtree_ui:1.0.0.0.release@aar') {
              		transitive = true
              		changing = true
              }
             </dependency>
              <scenes>
               <scene name="android.permission.ACCESS_NETWORK_STATE" displayName="获取网络状态" describe="获取网络数据需要" isAsk="false" closeable="true" type="permission"/>
               <scene name="android.permission.GET_TASKS" displayName="允许一个程序获取信息有关当前或最近运行的任务" describe="" isAsk="false" closeable="true" type="permission"/>
               <scene name="android.permission.com.android.launcher.permission.INSTALL_SHORTCUT" displayName="创建快捷方式" describe="" isAsk="false" closeable="true" type="permission"/>
               <scene name="com.android.launcher.permission.INSTALL_SHORTCUT" displayName="创建快捷方式" describe="" isAsk="false" closeable="true" type="permission"/>
               <scene name="com.android.launcher.permission.UNINSTALL_SHORTCUT" displayName="创建快捷方式" describe="" isAsk="false" closeable="true" type="permission"/>
               <scene name="android.permission.READ_EXTERNAL_STORAGE" displayName="保持邀请图片后通知媒体库刷新" describe="" isAsk="true" closeable="true" type="permission"/>
               <scene name="android.permission.WRITE_EXTERNAL_STORAGE" displayName="保存邀请图片" describe="" isAsk="true" closeable="true" type="permission"/>
               <scene name="_applicationId_.com.nd.social.setting" displayName="只接收系统发出的息屏广播" describe="" isAsk="false" closeable="true" type="permission"/>
            </scenes>
			</android>

            <ios>
                <class>AppSettingComponent</class>
                <dependency>
                    <![CDATA[
                        pod 'AppSettingComponent','26.6.18'
                    ]]>
                </dependency>
                <scenes>
                	<scene name="UISupportedInterfaceOrientations"/>
                </scenes>
            </ios>
  <build>
        <android>   
            <safe_whitelist>
                <activities>
                    <activity name="com.nd.setting.module.shortcut.view.ShortcutBridgeActivity" describe="快捷方式跳转" type="activity" owner="黄永鑫（102210）"/>
                </activities>
            </safe_whitelist>
        </android>
    </build>
</component><component namespace="com.nd.sdp" name="common_skin_component" display="[AQI] 公共皮肤">
		
  <properties>
    <group name="universalOrientationHooks" displayName="iOS视图控制器横竖屏控制" max-repeat="100">
      <property type="string" name="classname" displayName="类名"/>
      <property type="bool" name="shouldAutorotate" displayName="开启旋转"/>
      <property type="combobox" name="supportedInterfaceOrientations" displayName="支持屏幕方向">
        <options multi="true">
          <option value="u">上</option>
          <option value="l">左</option>
          <option value="r">右</option>
          <option value="d">下</option>
        </options>
      </property>
      <property type="enum" name="preferredInterfaceOrientationForPresentation" displayName="偏好屏幕方向">
        <options multi="false">
          <option value="u">上</option>
          <option value="l">左</option>
          <option value="r">右</option>
          <option value="d">下</option>
        </options>
      </property>
    </group>
  </properties>
  
	<events>
	</events>

	<handlers>
	</handlers>
    <runtime>
      <!--默认要配置不要移除-->
      <properties>
        <property type="bool" name="lazy_init_android" displayName="是否开启延迟初始化" value="false"/>
      </properties>
    </runtime>
  
    <android>
        <class>
            com.nd.sdp.android.common.res.CommonResComponent
        </class>
        <dependency>
            <![CDATA[
            compile('com.nd.sdp.android.common:res-component:2.6.3') {
                exclude group: 'com.android.support'
                transitive = true
                changing = true
            }
            // skin-loader换肤实现(runtime), 这个包只在运行时使用, 编译时依赖核心包skin-loader-lib
            compile ('com.nd.sdp.android:skin-loader:2.5.1') {
                transitive = true
                changing = true
            }
            // 打包apk时处理AnnotationServiceLoader
            annotationProcessor "com.nd.sdp.android.serviceloader:service-loader-compiler-app:1.0.9"

			// svg加载库
			compile('com.nd.sdp.android:skin-loader-svg:2.5.0')


            compile('androidx.appcompat:appcompat:1.0.0')
            compile('com.google.android.material:material:1.0.0')
            compile('androidx.recyclerview:recyclerview:1.0.0')
            compile('androidx.legacy:legacy-support-v4:1.0.0')
            compile('androidx.cardview:cardview:1.0.0')
            compile('androidx.palette:palette:1.0.0')

            compile('com.afollestad.material-dialogs:commons:0.9.0.2')
			compile('com.nostra13.universalimageloader:universal-image-loader:5.0.29')
            compile('com.nd.android.monet:load-wrapper:0.1.2-rc17')
            compile('com.nd.android.monet:ext-glide:0.1.2-rc17')  // 需要添加至少一个实现

  			 android {
                packagingOptions {
                    exclude 'META-INF/module_release.kotlin_module'
					exclude 'META-INF/rxjava.properties'
                }
            }

          ]]>
        </dependency>
         <groovy>           
          <![CDATA[
				configurations {
					 all*.exclude group: 'android.support'
					 all*.exclude group: 'com.netflix.rxjava'
					 all*.exclude group:'com.nd.sdp.android.unclemock', module: 'unclemock'
                     all*.exclude group: 'com.nd.sdp.android.skin', module: 'skin-setting'
                     all*.exclude group: 'com.afollestad', module: 'material-dialogs'
                }
          ]]>
         </groovy>
	</android>
  
  <ios>
    <class>CommonSkinComponent</class>
    <dependency>
      <![CDATA[
        pod 'MUICommonSkin', '1.0.0'
        pod 'CommonSkinComponent', '1.2.26'
        pod 'MUIUniversalOrientationsSupport', '1.0.0'
      ]]>
    </dependency>
    <ruby>
      <entry>CommonSkinBuildExecutor</entry>
      <dsl>
        <pre_dependency_install>
          <![CDATA[
            require 'pathname'
            require 'json'

            # 修改 build.json 文件，将公共皮肤业务组件中横竖屏控制的配置由原来的 json 修改成单行的表达式
            current_dir = Pathname(Dir.pwd)
            xcode_projects = Dir.glob(current_dir.join('*.xcodeproj'))
            raise Informative, 'require a xcodeproj.' if xcode_projects.empty?
            raise Informative, 'too many xcodeproj.' if xcode_projects.length > 1
            project_name = File.basename(xcode_projects.first, '.xcodeproj')

            build_json_files = Dir.glob(current_dir.join("#{project_name}/Resources/app_factory/*/components/build.json"))
            return if build_json_files.empty?

            build_json_files.each do |build_json_path|
              puts "### 开始修改 build.json 文件: #{build_json_path}"

              build_json_content = File.read(build_json_path)
              build_json_array = JSON.parse(build_json_content)

              item = build_json_array.select do |item|
                item.dig("component", "namespace") == 'com.nd.sdp' &&
                item.dig("component", "name") == 'common_skin_component'
              end.first
              next if item.nil?

              properties = item['properties'] || {}
              hooks = properties['universalOrientationHooks'] || []
              next if hooks.empty?

              hooks.map! do |hook|
                segment0 = hook['classname'] || ''
                segment1 = hook['shouldAutorotate'] || ''
                segment2 = begin
                  value = hook['supportedInterfaceOrientations'] || []
                  value.empty? ? '' : value.join(',')
                end
                segment3 = hook['preferredInterfaceOrientationForPresentation'] || ''
                [segment0, segment1, segment2, segment3].join('|')
              end

              file = File.open(build_json_path, "w") { |f| f << JSON.generate(build_json_array) }

              puts "### 修改完成"
            end
          ]]>
        </pre_dependency_install>
      </dsl>
    </ruby>
  </ios>
</component><component namespace="com.nd.social" name="qr-code" display="二维码">
	<pages>
		<page type="cmp" name="CaptureActivity" display="扫描页面" toplevel="2" android_class="com.nd.qrcode.zxing.activity.CaptureActivity"/>
	</pages>
	
  	<runtime>
		<properties>
      		<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
      		<property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
		</properties>
      
        <handlers>
           <handler name="not-ios://handleImQrEventNameTest" desc="测试的" receive_event="im_qr_event_name_test"/>
          <handler name="not-ios://qrcodeStartScan" desc="点击打开扫描页面" receive_event="qrcode_scan"/>
            <handler name="not-ios://qrcodeDecodeImage" desc="点击识别图片" receive_event="qrcode_decode"/>
            <handler name="not-ios://qrcodeEncodeContent" desc="点击生成二维码" receive_event="qrcode_encode"/>
            <handler name="not-ios://qrcodeDetectImage" desc="点击识别图片是否为二维码" receive_event="qrcode_detect"/>
            <handler name="not-ios://qrcodeDynamicsCode" desc="新增动态二维码" receive_event="qrcode_dynamics_code"/>
            <handler name="not-ios://qrcodeDynamicsReset" desc="重置动态二维码" receive_event="qrcode_dynamics_reset"/>
          	<handler name="not-ios://qrcodeDynamicsUrlRestore" desc="还原动态二维码链接" receive_event="qrcode_dynamics_url_restore"/>
            <handler name="ios://startScan" desc="点击打开扫描页面" receive_event="qrcode_scan"/>
            <handler name="ios://decodeImage" desc="点击识别图片" receive_event="qrcode_decode"/>
            <handler name="ios://reStartScan" desc="重新扫描" receive_event="qrcode_rescan"/>
            <handler name="ios://encodeContent" desc="点击生成二维码" receive_event="qrcode_encode"/>
            <handler name="ios://decodeImageSync" desc="二维码图片解析" receive_event="qrcode_decode_sync"/>
            <handler name="ios://encodeContentSync" desc="生成二维码图片" receive_event="qrcode_encode_sync"/>
            <handler name="ios://dynamicsCode" desc="生成动态二维码" receive_event="qrcode_dynamics_code"/>
            <handler name="ios://dynamicsReset" desc="重置动态二维码" receive_event="qrcode_dynamics_reset"/>
        </handlers>
	</runtime>
  
	<properties>
		<property type="bool" name="qrcode_open" displayName="扫描时智能开启APP" value="true">
			<tip>扫描时智能开启APP</tip>  
		</property>
      	<property type="bool" name="rbac_support_enable" displayName="接入RBAC" value="false">
			<tip>是否接入RBAC</tip>  
		</property>
      
		<property type="string" name="rbac_intercept_url" displayName="要经过RBAC鉴权的URL" value="http://im.101.com/s/group/">
			<tip>如果有多个值，中间用空格隔开</tip>  
          	<!-- value中如果有多个值，用 空格( ) 隔开 -->
		</property>
      
		<group name="group_host_config" displayName="hosts" max-repeat="1"> 
          
			<property type="string" name="property_hosts" displayName="所有支持的hosts" value="http://im.101.com/s/">
			</property> 
          
			<property type="string" name="property_host_actions_http://im.101.com/s/" displayName="http://im.101.com/s/ 支持的动作" value="login/,friend/,group/,official/,chatRoom/,payment/,screenShare,adhoc">
				<tip>如果有多个值，中间用逗号隔开</tip>
				<!-- value 中包含多个值的话，中间用 逗号( , ) 分割 -->
			</property> 
          
			<property type="string" name="http://im.101.com/s/login/" displayName="im.101.com/s/ 二维码登录" value="com.nd.social.im"> 
			</property>
            <property type="string" name="http://im.101.com/s/friend/" displayName="im.101.com/s/ 加好友" value="com.nd.pbl.pblcomponent,com.nd.social.me">
				<tip>如果有多个值，中间用逗号隔开</tip>
				<!-- value 中包含多个值的话，中间用 逗号( , ) ���割 -->
          	</property>
          	<property type="string" name="http://im.101.com/s/group/" displayName="im.101.com/s/ 二维码加群" value="com.nd.social.im"> 
          	</property>
          	<property type="string" name="http://im.101.com/s/official/" displayName="im.101.com/s/ 二维码关注公众号" value="com.nd.social.im"> 
          	</property>
          	<property type="string" name="http://im.101.com/s/chatRoom/" displayName="im.101.com/s/ 聊天室" value="com.nd.sdp.component.imchatroom"> 
          	</property>
          	<property type="string" name="http://im.101.com/s/payment/" displayName="im.101.com/s/ 支付" value="com.nd.sdp.component.payment"> 
          	</property>
			<property type="string" name="http://im.101.com/s/screenShare" displayName="im.101.com/s/ 屏幕分享" value="com.nd.sdp.component.im-screenshare">
          	</property>
			<property type="string" name="http://im.101.com/s/adhoc" displayName="im.101.com/s/ 99互联" value="com.nd.sdp.component.adhoc">
          	</property>
     	</group> 
      
      <group name="group_keyword_config" displayName="keywords" max-repeat="1">
        
			<property type="string" name="property_url_keywords" displayName="所有拦截检测的关键字" value="CH5S=101">
              <!-- value 中包含多个值的话，中间用 逗号( , ) 分割 -->
			</property>
          
			<property type="string" name="CH5S=101" displayName="签到网关关键字" value="com.nd.sdp.component.elearning-h5"> 
              <!-- value 中包含多个值的话，中间用 逗号( , ) 分割 -->
          	</property>
          
      </group>
      
 	</properties>
	
	<events>
	</events>

    <build>
        <android>   
            <safe_whitelist>
                <activities>
                    <activity name="com.nd.qrcode.zxing.activity.CaptureQrCodeActivity" describe="需要暴露给外部应用分享启动扫一扫功能" type="activity" owner="鄢宜扬"/>
              	</activities>
            </safe_whitelist>
        </android>
	</build>  
	<android>
		<class>com.nd.qrcode.module.QRCodeComponent</class>
		<dependency>
           <![CDATA[
			compile('com.nd.android.sdp.qrcode:qrcode:1.6.1.305.release') {
				exclude group: 'com.android.support'
				transitive = true
                changing = true
          }
             ]]>
		</dependency>
      <scenes>
		<scene name="android.permission.CAMERA" displayName="相机权限" describe="二维码拍摄" isAsk="true" closeable="true" type="permission"/>
		<scene name="android.permission.VIBRATE" displayName="震动权限" describe="二维码扫描确认" isAsk="false" closeable="false" type="permission"/>
		<scene name="_applicationId_.permission.AUDIO_RECEIVE_BROADCAST" displayName="接收广播" describe="接收系统广播" isAsk="false" closeable="false" type="permission"/>
      </scenes>
	</android>

	<ios>
		<class>QRCodeComponent</class>
		<dependency>
            <![CDATA[
            pod 'QRCodeComponent', '0.3.53'
             ]]>
		</dependency>
        <meta-datas>
          <meta-data xpath="//plist/dict" key="LSApplicationQueriesSchemes" type="array" file="/ComponentAppBase/Info.plist">
            <![CDATA[
              <string>weixin</string>
              <string>imeituan</string>
              <string>taobao</string>
              <string>mqq</string>
              <string>edu101PPT</string>
              <string>ucbrowser</string>
              <string>newsapp</string>
              <string>ucbrowser</string>
            ]]>
          </meta-data>
       	</meta-datas>
	</ios>
  
</component><component namespace="com.nd.hy" name="elearning" display="教育学习中心-移动端">
	<pages>
		<page type="cmp" name="forcestudy" display="elearning学习" toplevel="1" allow_guest="true">
      	</page>
        <page type="cmp" name="forcestudy?type=community" display="社区版学习主页" toplevel="1" allow_guest="false">
      	</page>
        <page type="cmp" name="test" display="测试" toplevel="1" allow_guest="true">
      	</page>
        <page type="cmp" name="mainFragment" display="学习首页Fragment" toplevel="1" allow_guest="true">
      	</page>
	</pages>
	
    <properties>
        <property name="share_weibo" value="true" type="bool" displayName="是否接入微博分享"/>
        <property name="share_im" value="true" type="bool" displayName="是否接入IM分享"/>
      	<property name="ele_report" value="false" type="bool" displayName="首页导航栏是否开启学习报告入口"/>
        <property type="string" name="nav_right_btn_type" displayName="首页导航栏右侧按钮类型" value="menu">
         	<tip>menu(菜单)、search(搜索)；注：仅支持配置一种类型，不支持配置多个，配置错误默认显示菜单类型</tip>
        </property>
        <property type="string" name="ele_menu" displayName="首页菜单栏选项" value="search,qa,download,collection">
        <tip>search(搜索)、qa(答疑)、download(下载管理)、faq(选课说明)、collection(收藏)、mine(我)、shopping_cart(购物车)、order(订单)</tip>
        </property>
        <property type="string" name="ele_tab" displayName="首页顶部tab(已废弃，请使用下方新首页顶部Tab)" value="studymain,default|mystudy2,default">
          //强制学习：value="forcestudy2,default|studymain,default|mystudy2,default"
          //新学习任务：newstudytask,default强制学习forcestudy2,default发现课程studymain,default我的学习mystudy2,default
        <tip>新学习任务(newstudytask,default)、强制学习(forcestudy2,default)、发现课程(studymain,default)、我的学习(mystudy2,default)、我的课程（mycourse,default）、学习中心(mystudy2,learningCenter)</tip>
        </property>
      
        <property type="bool" name="ele-my-study" displayName="我的学习" value="true">
        	<dependency>
           	 <component namespace="com.nd.sdp.component" name="ele-my-study"/>
       		</dependency>
     	</property>
      
        <property type="bool" name="ele-channel" displayName="RN频道" value="true">
        	<dependency>
           	 <component namespace="com.nd.sdp.component" name="ele-channel"/>
       		</dependency>
     	</property>
      
        <property type="bool" name="ele-compulsory-learning-business" displayName="学习任务" value="true">
        	<dependency>
           	 <component namespace="com.nd.sdp.component" name="ele-compulsory-learning-business"/>
       		</dependency>
     	</property>
      
      
      
      	<group name="ele_tab_group" displayName="新首页顶部Tab（未设置时，默认显示“发现课程”和“学习中心”）" max-repeat="3">
        	<validator type="size" rule="[0,3]"/>
        	<property type="enum" name="ele_tab_enum" displayName="顶部Tab项">
       	 		<options multi="false">
         			<option value="forcestudy2,default">新学习任务(forcestudy2,default)</option>
                  	<option value="studymain,default">不建议使用RN发现课程(studymain,default)</option>
                   	<option value="studymain,native_default">原生发现课程(studymain,native_default)</option>
                  	<option value="mystudy2,default">学习中心(mystudy2,default)</option>
                  	<option value="mystudy2,XStudy">X学习(mystudy2,XStudy)</option>
                  	<option value="mystudy2,oldStudy">我的学习(mystudy2,oldStudy)</option>
                 	<option value="mycourse,default">我的课程(mycourse,default)</option>
                    <option value="studymain,community">本校课程(需要开通社区/登录)(studymain,community)</option>
                  	<option value="mystudy2,XStudyPlan">X学习学习计划(mystudy2,XStudyPlan)</option>
        		</options>
    		</property>
          	<property type="string" name="showindex" displayName="展示顺序（不传按默认顺序）"/>
            <property type="string" name="cmpname" displayName="cmp地址（目前仅支持ele_product_enum为x_study，不传按默认实现，X学习学习计划(mystudy2,XStudyPlan)无默认实现）"/>
    	</group>
         <property name="is_ink" value="false" type="bool" displayName="是否开启水墨"/>
   
        <property type="enum" name="ele_product_enum" displayName="使用的产品交互">
       	 	<options multi="false">
                <option value="default">默认</option>
         		<option value="x_study">定制版</option>
              	<option value="x_study2">定制版2</option>
        	</options>
    	</property>
        <property type="enum" name="ele_left_top_btn_style" displayName="菜单左侧按钮样式">
       	 	<options multi="false">
                <option value="default">默认不展示</option>
         		<option value="user_img">用户头像</option>
                <option value="icon_img">资源图片</option>
        	</options>
    	</property>
        <property type="image" name="ele_left_top_btn_icon" senior="true" displayName="菜单左侧按钮图标(需要菜单左侧按钮样式选为资源图片才会生效)" value="" accept="png,jpeg,jpg,webp">
                <transfer os="Android" resize="@xxhdpi"/>
                <transfer os="iOS"/>
        </property>
      	<property type="string" name="ele_login_cmp" displayName="接管登陆cmp" value="">
        </property>
      <property name="search_cmp" value="" type="string" displayName="搜索cmp"> 
         	<tip>搜索cmp，仅支持使用的产品交互为定制版或定制版2</tip>
         </property>
    </properties>
	<events>
	</events>

  <runtime>
    <properties>      
      <property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>    
    </properties>
  </runtime>

  <handlers>      
  	<handler name="not-ios://doLogInOutStuff" desc="接收事件" receive_event="uc_on_login_success,uc_on_logout,mutual_location,ele_subscription_state_callback,onEleRnCloseInterest,USERINFO_ROLE_SWITCH_EVENT,notifyAppKeyChange,EVENT_APP_UPDATE_DATA,CHANNEL_LOAD"/>      
  </handlers>
  
    <routes>
    	<route source="cmp://com.nd.hy.elearning/main" destination="cmp://com.nd.hy.elearning/forcestudy"/>
	</routes>

	<android>
		<class>com.nd.sdp.android.module.mutual.MutualComponent</class>
		<dependency>
			<![CDATA[
		 //交互框架
			 compile('com.nd.sdp.android:mutual-framework:13.1.9-rc.5')
 			 //密钥组件
             compile ("com.nd.sdp.android:e-frame:13.1.7-rc.2")
			//评价
			compile('com.nd.sdp.android:ele_appraise:5.5.8')

   
         ]]>
          
		</dependency>
      	<groovy>
		<![CDATA[
		    android {
				 configurations {
							  all*.exclude group: 'com.netflix.rxjava'
                              all*.exclude group: 'net.lingala.zip4j', module: 'zip4j'
                              all*.exclude group: 'com.nd.vrstore', module: 'signsdk'

                }
 
                defaultConfig {
                     renderscriptTargetApi 22
                     renderscriptSupportModeEnabled true

                }
				packagingOptions {
	    			exclude 'LICENSE.txt' 
					exclude 'META-INF/rxjava.properties'
	  			}

            }

		]]>
		</groovy>
       <scenes>
         <scene name="android.permission.READ_EXTERNAL_STORAGE" displayName="存储权限" describe="框架提供日志存储sd卡需要" isAsk="true" closeable="true" type="permission"/>
       </scenes>
	</android>
	<ios>
		<class>ELMUCComplexTab</class>
		<dependency>
			<![CDATA[
			pod 'elearn_mutualcomponent', '3.12.41'
			pod 'elearn_evaluation', '1.0.47'
             ]]>
		</dependency>
	</ios>
</component><component namespace="com.nd.sdp.component" name="elearning-configs" display="教育-应用密钥">
	<pages>

	</pages>
	
	<properties>
		<property type="string" name="app_key" displayName="打包密钥(32位)" value="" senior="true"/>
		<property type="string" name="pre_app_key" displayName="预生产打包密钥" value="">
          <tip>仅预生产环境下生效</tip>
          </property>
        <property type="bool" name="is_mutil_project" displayName="是否为多项目模式"/>
       <property type="bool" name="isMultiRole" value="false" displayName="是否为多角色"/>
        <property type="string" name="host_fail_over" value="" displayName="failover静态文件host"/>
         <property type="int" name="directory_count" value="0" displayName="failover目录数"/>
    </properties>
  
  	<runtime>
      <properties>
        <property type="bool" name="lazy_init_android" displayName="是否开启延迟初始化" value="false"/>
      </properties>
    </runtime>
	
	<events>
	</events>

	<handlers>
	</handlers>
  
    <sdk> 
      <js-sdk> 
        <name>ele-rn-common</name>  
        <version>1.0</version>  
        <ios/>  
        <android> 
          <react-class>com.nd.sdp.android.ele.rncommon.react.EleRnCommonProvider</react-class> 
        </android> 
      </js-sdk> 
    </sdk>

	<android>
		<class>com.nd.hy.android.configs.ConfigsComponent</class>
		<dependency>
			<![CDATA[
	            compile('com.nd.sdp.android:elearning-configs:13.1.2-rc.2@aar') {
			        transitive = true
			        changing = true
			    }
                //密钥组件
            	compile ("com.nd.sdp.android:e-frame:13.1.7-rc.2")
				compile 'com.nd.sdp.android:e101-a-rn-common:13.1.2-rc.1'
				compile 'com.nd.hy.android.hermes:hermes-rx:2.2.6-rc8-adx-beta02'
    			compile 'com.nd.sdp.android:e-uc-client:1.6'
				compile 'com.nd.sdp.android:ele-commons-view:0.0.5-rc3'
				compile 'com.nd.sdp.android:e101-eoms-sdk:0.0.1-rc7'
           
             ]]>
		</dependency>
      	<groovy>
          try{
          	apply from: 'http://git.sdp.nd/mobile/commons/raw/master/ua-ext.gradle'
          }catch(Exception e){
          }
          <![CDATA[
		    android {
              compileOptions {
                      sourceCompatibility 1.8
                      targetCompatibility 1.8
                  }
				configurations {
                   all*.exclude group: 'com.squareup.okhttp', module: 'okhttp'
                }
            }
		]]>
        </groovy>
      <scenes>
         <scene name="android.permission.READ_EXTERNAL_STORAGE" displayName="存储权限" describe="密钥组件读取外部存储" isAsk="true" closeable="true" type="permission"/>
         <scene name="android.permission.INTERNET" displayName="网络权限" describe="密钥组件hermes-rx获取网络权限请求网络" isAsk="true" closeable="true" type="permission"/> 
         <scene name="android.permission.ACCESS_NETWORK_STATE" displayName="检测网络状态" describe="密钥组件hermes-rx检测网络状态" isAsk="true" closeable="true" type="permission"/> 
         <scene name="android.permission.ACCESS_WIFI_STATE" displayName="检测wifi状态" describe="密钥组件hermes-rx检测wifi状态" isAsk="true" closeable="true" type="permission"/> 
         <scene name="android.permission.WRITE_EXTERNAL_STORAGE" displayName="写入权限" describe="密钥组件hermes-rx写入权限" isAsk="true" closeable="true" type="permission"/> 
      </scenes>
	</android>

	<ios>
		<class>ElearningConfigManager</class>
		<dependency>
          <![CDATA[
            pod 'elearningConfig', '1.0.97'
            pod 'MBCircularProgressBar', '0.3.2'
            pod 'elearning_sdp_base', '1.0.182'
            pod 'elearn_hyapi', '0.3.140'
            pod 'elearn_download_base','1.0.91'   
            pod 'ELEOfflineManager','1.1.53'
            pod 'elearn_tag', '1.1.25'
			pod 'EomsSDK', '1.0.5'
			pod 'ELECharts', '1.0.38'
			pod 'edu_rescard_sdk_ios', '1.1.17'
			pod 'edu_search_sdk_ios', '1.1.9'
			pod 'edu_media_ios', '0.2.28'
			pod 'KLVKeywordListView', '0.0.10'
			pod 'e_common_ui_ios', '0.3.7'
		  ]]>
		</dependency>
	</ios>
</component><component namespace="com.nd.social" name="mui-pullrefreshview" display="刷新公共控件" type="library">
  <runtime>
	<properties>
        <property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="false"/>
        <property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="false"/>
	</properties>
  </runtime>
  <android>
        <dependency>
            <![CDATA[
                    compile('com.nd.social.pulltorefresh:library:1.6@aar') {
                        transitive = true
                        changing = true
                    }
                    configurations {
                       all*.exclude group:'com.handmark.pulltorefresh', module: 'library'
                    }
             ]]>
        </dependency>
    </android>
	<ios>
        <dependency>
            <![CDATA[
                      pod 'MUIPullRefreshView', '0.2.19'
             ]]>
        </dependency>
    </ios>

</component><component namespace="com.nd.social" name="mui-videocontroller" display="视频公共控件" type="library">
     <properties>
        <property type="enum" name="iOSRecordMode" displayName="iOS默认的录制输出方式" value="4_3">
          <options multi="false">
             <option value="4_3">宽高比4:3</option>
             <option value="16_9">宽高比16:9</option>
             <option value="1_1">宽高比1:1</option>
            <option value="9_16">宽高比9:16(竖屏)</option>
          </options>
       </property>
       <property type="enum" name="AndroidRecordMode" displayName="Android默认的录制输出方式" value="0">
          <options multi="false">
             <option value="0">默认</option>
             <option value="1">全屏</option>
          </options>
       </property>
	 </properties>
   <runtime>
	 <properties>
        <property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="false"/>
        <property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="false"/>
	 </properties>
    </runtime>
    <ios>
        <class>MUIVideoSupportComponent</class>
        <dependency>
            <![CDATA[
                      pod 'MUIVideoController', '1.1.68'
             ]]>
        </dependency>
      
        <scenes>
           <scene name="NSCameraUsageDescription" describe="使用相机进行录制视频"/>
           <scene name="NSMicrophoneUsageDescription" describe="录制音频需要使用录音权限"/>
        </scenes>
    </ios>
	 <android>
      <class>com.nd.android.social.mediaRecorder.VideoComponent</class>
		 <dependency>
         compile('com.nd.android.sdp.social:module_recorder:13.6.9.release@aar') {
			transitive = true
  			exclude group: 'com.nd.android.sdp.im.common.widget', module: 'emotion'
		 }
		 </dependency>
         <scenes>
          <scene name="android.permission.CAMERA" displayName="拍摄照片和录制视频" describe="录制视频" isAsk="true" closeable="true" type="permission"/>
          <scene name="android.permission.RECORD_AUDIO" displayName="录制音频" describe="录制视频同时需要录音权限" isAsk="true" closeable="true" type="permission"/>
          <scene name="android.permission.WRITE_SETTINGS" displayName="修改系统设置" describe="拍摄视频是提高视频亮度，拍摄后恢复" isAsk="false" closeable="true" type="permission"/>
          <scene name="android.permission.WRITE_EXTERNAL_STORAGE" displayName="修改或删除存储卡中的内容" describe="拍摄的视频存到本地" isAsk="true" closeable="true" type="permission"/>
          <scene name="android.permission.FLASHLIGHT" displayName="访问闪光灯" describe="拍摄视频选择闪光灯的开启关闭" isAsk="false" closeable="true" type="permission"/>
          <scene name="android.permission.READ_EXTERNAL_STORAGE" displayName="读取存储卡中的内容" describe="读取存入本地的拍摄视频" isAsk="true" closeable="true" type="permission"/>
         </scenes>
	 </android>
</component><component namespace="com.nd.social" name="mui-imagecropper" display="图片裁剪公共控件" type="library">
    <ios>
        <dependency>
            <![CDATA[
                      pod 'MUIImageCropper', '0.0.12'
             ]]>
        </dependency>
    </ios>

</component><component namespace="com.nd.sdp.appfactory" name="jssdk" display="JS SDK">
	<pages>
	</pages>
	
	<properties>
      <property displayName="是否使用选图控件" name="muitiplephoto_enable" type="bool" value="true" desc_true="开启" desc_false="关闭">
      		<dependency>
				<component namespace="com.nd.sdp.component" name="imagepicker" display="使用选图控件"/>
			</dependency>
        </property>
	</properties>
	
	<events>
	</events>
  
    <runtime>
      <providers>
        <provider name="com.nd.sdp.smartcan.appfactoryjssdk.JsSdkKvProvider" filter="com.apf.element.longpress.provider.filter" desc="webview长按菜单使用"/>
      </providers>
      <properties>
        <property type="bool" name="lazy_init_android" displayName="是否开启延迟初始化" value="false"/>
      </properties>
    </runtime>
  

	<handlers>
      <handler name="ios://receive_event_handler_unified_url_updated" desc="推送域名更新事件" receive_event="handler_unified_url_update_event"/>
	</handlers>
  
	<ios>
		<class>APFJavascriptSDKComponent</class>
		<dependency>
			<![CDATA[
            pod 'APFJavascriptSDKComponent',  '1.0.93'
             ]]>
		</dependency>
        <scenes>
          	<scene name="NSPhotoLibraryUsageDescription" describe="为了实现H5图片长按保存到相册功能"/>
        </scenes>
	</ios>
    <android>
		 <class>com.nd.sdp.smartcan.appfactoryjssdk.JsSdkComponent</class>
		 <dependency>
			  <![CDATA[
				   ext.jssdk_version = "3.3.9-release.1"
				configurations.all {
    				resolutionStrategy {      
      					force "com.nd.sdp.android:appfactory-js-sdk:${jssdk_version}"
					}
				}
			    compile('com.nd.sdp.android:appfactory-js-sdk:${jssdk_version}@aar') {
			        transitive = true
			        changing = true
			    }

             ]]>
		</dependency>
  </android>
 
</component><component namespace="com.nd.sdp.component" name="inputpanel" display="输入面板" type="library">
	<pages>
	</pages>
	
	<properties>
	</properties>
	
	<events>
	</events>

	<handlers>
	</handlers>
  
    <ios>
        <class/>
        <dependency>
            <![CDATA[
              pod 'MUIInputPanel', '0.3.118'
            ]]>
        </dependency>
    </ios>
 	<runtime>
      <!--默认要配置不要移除-->
      <properties>
        <property type="bool" name="lazy_init_android" displayName="是否��启延��初始��" value="false"/>
      </properties>
    </runtime>
</component><component namespace="com.nd.sdp.component" name="muitiplephoto" display="查看大图" type="library">
  	<sdk>
    	<js-sdk>
        	<name>MUIMultiPhotoJsSdk</name>
          	<version>1.0</version>
          	<ios>
            	<js-class>MUIMultiPhotoJsBridgeSdkModuleProvider</js-class>
          	</ios>
          	<android>
              <js-class>com.nd.sdp.android.common.ui.gallery.jssdk.GalleryJsInjectorProvider</js-class>
          	</android>
        </js-sdk>
  	</sdk>
	<pages>
	</pages>
	<properties>
	</properties>
	
	<events>
	</events>

	<handlers>
	</handlers>
    <android>
		<class/>
		<dependency>
          <![CDATA[
            def photoViewVersion = "3.0.15"
    		compile("com.nd.android.sdp.common:photoview:${photoViewVersion}") {
    		   transitive = true
    		   exclude group: 'com.android.support'
               exclude group: 'pl.droidsonroids.gif',module: 'android-gif-drawable'
    		}
			compile 'com.android.support:gridlayout-v7:24.2.1'
    		compile("com.nd.android.sdp.common:photoview-iml:${photoViewVersion}") {
    		   transitive = true
    		   exclude group: 'com.android.support'
    		   exclude group: 'com.nostra13.universalimageloader'
               exclude group: 'pl.droidsonroids.gif',module: 'android-gif-drawable'
    		}
    		compile("com.nd.android.sdp.common:photoview-longclick:${photoViewVersion}") {
    		   transitive = true
    		   exclude group: 'com.android.support'
    		   exclude group: 'com.nostra13.universalimageloader'
    		}
   			ext { gallery_version = "3.0.0" }
            
            compile "com.nd.sdp.android.common.ui:gallery:$gallery_version"
            compile "com.nd.sdp.android.common.ui:gallery-loader:$gallery_version"
            compile "com.nd.sdp.android.common.ui:gallery-page-image:$gallery_version"
            compile "com.nd.sdp.android.common.ui:gallery-page-ximage:$gallery_version"
            compile "com.nd.sdp.android.common.ui:gallery-page-video:$gallery_version"
            compile "com.nd.sdp.android.common.ui:gallery-page-image-loader-glide:$gallery_version"
            compile "com.nd.sdp.android.common.ui:gallery-page-image-loader-monet:$gallery_version"
			compile "com.nd.sdp.android.common.ui:gallery-page-video-loader-okhttp:$gallery_version"
			compile "com.nd.sdp.android.common.ui.gallery.plugin:csimage:1.1.0"
            compile "com.nd.sdp.android.common.ui:gallery-jssdk:$gallery_version"
            compile "com.nd.sdp.android.common.ui.gallery.plugin:sdplongclick:1.1.27.release"
          ]]>
		 </dependency>
         <groovy>
          <![CDATA[
		    android {
				configurations {
					 all*.exclude group: 'android.support'
					 all*.exclude group: 'com.netflix.rxjava'
                }
             }
          ]]>
         </groovy>
<scenes>
    <scene name="android.permission.WRITE_EXTERNAL_STORAGE" displayName="写入存储权限" describe="视频下载" isAsk="true" closeable="true" type="permission"/>
    <scene name="android.permission.READ_EXTERNAL_STORAGE" displayName="读取存储权限" describe="视频播放" isAsk="true" closeable="true" type="permission"/>
    <scene name="android.permission.INTERNET" displayName="网络权限" describe="图片下载" isAsk="true" closeable="true" type="permission"/>
</scenes>	
	</android>
  
    <runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="false"/>
            <property type="bool" name="lazy_init_ios" displayName="是否开启IOS延迟初始化" value="false"/>
		</properties>
	</runtime>
  
    <ios>
        <class>MUIPhotosBridge</class>
        <dependency>
            <![CDATA[
              pod 'MUIMultiPhotoController', '0.2.181'
              pod 'MUIPhotosBridge', '0.0.12'
            ]]>
        </dependency>
      	<scenes>
			<scene name="NSPhotoLibraryUsageDescription" describe="为了实现H5保存图片到相册功能"/>
		</scenes>
    </ios>
  
</component><component namespace="com.nd.sdp.component" name="imagepicker" display="[AQI]选图控件" type="library">
  
  <sdk>
    <js-sdk>
      <name>ui-jssdk</name>
      <version>1.0</version>
      <android>
        <js-class>com.nd.android.sdp.common.photopicker.js.PhotoPickerJsInjectorProvider</js-class>
      </android>
    </js-sdk>
  </sdk>

  
	<pages>
	</pages>
	
	<properties>
	</properties>
	
	<events>
	</events>
  
	<handlers>
	</handlers>
  
    <runtime>
      <properties>
        <property type="bool" name="lazy_init_android" displayName="是否开启延迟初始化" value="false"/>
        <property type="bool" name="lazy_init_ios" displayName="是否开启IOS延迟初始化" value="false"/>
      </properties>
      <activity_screen_orientations displayName="要替换界面方向白名单,要有申明才能替换，不支持新增加">
        <activity_screen_orientation value="com.nd.android.sdp.common.ChooseACropImageActivity"/>
        <activity_screen_orientation value="com.nd.android.sdp.common.photopicker.PreviewActivity"/>
         <activity_screen_orientation value="com.nd.android.sdp.common.photopicker.PhotoPickerActivity"/>
        <activity_screen_orientation value="com.nd.android.sdp.common.photopicker.DragImageActivity"/>
      </activity_screen_orientations>
    </runtime>
    <android>
		<class>com.nd.sdp.android.photosbridge.PhotosbridgeComponent</class>
		<dependency>
          <![CDATA[
            compile 'com.nd.sdp.android:photosbridge:3.0.6-release.1'
            def photo_pick_version = "3.9.540.versionrelease"

configurations.all {
    resolutionStrategy {      
      force "com.nd.android.sdp.common:photopicker:${photo_pick_version}"
      force "com.nd.android.sdp.common:photopicker-js:${photo_pick_version}"

}
}
    		compile("com.nd.android.sdp.common:photopicker:${photo_pick_version}") {
        		exclude group: 'com.android.support'
                exclude group: 'com.nd.android.sdp.common'
    		}
    		compile("com.nd.android.sdp.common:photopicker-js:${photo_pick_version}") {
        		exclude group: 'com.android.support'
                exclude group: 'com.nd.android.sdp.common'
    		}
            def mediacompress_version = "1.2.2"
			compile "com.nd.sdp.android.common.ui.mediacompress:base:${mediacompress_version}"
			compile "com.nd.sdp.android.common.ui.mediacompress:image:${mediacompress_version}" // 图片压缩
			compile "com.nd.sdp.android.common.ui.mediacompress:video:${mediacompress_version}"
 			compile("com.nd.hy.component:CropImage:1.9.16") {
        			transitive = true
        			exclude group: 'android.support'
        			exclude group: 'com.afollestad.material-dialogs'
    		}
          ]]>
		 </dependency>
         <groovy>
          <![CDATA[
		    android {
				configurations {
					 all*.exclude group: 'android.support'
					 all*.exclude group: 'com.netflix.rxjava'
                }
             }
          ]]>
         </groovy>

<scenes>
    <scene name="android.permission.WRITE_EXTERNAL_STORAGE" displayName="存储权限" describe="图片缓存" isAsk="true" closeable="true" type="permission"/>
    <scene name="android.permission.READ_EXTERNAL_STORAGE" displayName="读取存储权限" describe="图片加载" isAsk="true" closeable="true" type="permission"/>
    <scene name="android.permission.CAMERA" displayName="相机权限" describe="拍摄需要的权限" isAsk="true" closeable="true" type="permission"/>
</scenes>

	</android>
  
    <ios>
        <class>MUIPhotoSelector</class>
        <dependency>
            <![CDATA[
              pod 'MUIImagePickerController', '0.2.87'
              pod 'MUIPhotoPickerController', '0.0.106'
              pod 'MUIPhotoSelector', '0.0.20'
            ]]>
        </dependency>
      	<scenes>
          	<scene name="NSCameraUsageDescription" describe="为了给予相册选图控件相机功能"/>
          	<scene name="NSPhotoLibraryUsageDescription" describe="为了给予相册选图控件相册功能"/>
          	<scene name="NSPhotoLibraryAddUsageDescription" describe="为了给予相册选图控件相册功能"/>
        </scenes>
    </ios>
  
</component><component namespace="com.nd.sdp.component" name="audiorecordingview" display="录音控件" type="library">
	<pages>
	</pages>
	
	<properties>
	</properties>
	
	<events>
	</events>
	<handlers>
	</handlers>
    <android>
		<class/>
		<dependency>
          <![CDATA[
    		compile("com.nd.android.sdp.im.common.widget.recorder:library:0.5.68.release") {
    		   transitive = true
    		   exclude group: 'com.android.support'
    		}
    		compile("com.nd.android.sdp.common:audioplayer:0.5.77.release") {
    		   transitive = true
    		   exclude group: 'com.android.support'
    		}
          ]]>
		 </dependency>
         <groovy>
          <![CDATA[
		    android {
				configurations {
					 all*.exclude group: 'android.support'
					 all*.exclude group: 'com.netflix.rxjava'
                }
             }
          ]]>
         </groovy>
    <scenes>
         <scene name="android.permission.RECORD_AUDIO" displayName="录音权限" describe="拍摄视频需要的权限" isAsk="true" closeable="true" type="permission"/>
   		 <scene name="android.permission.READ_EXTERNAL_STORAGE" displayName="读取存储权限" describe="读音频文件" isAsk="true" closeable="true" type="permission"/>
   	     <scene name="android.permission.VIBRATE" displayName="允许程序振动 " describe="开始录音前振动" isAsk="true" closeable="true" type="permission"/>
         <scene name="android.permission.WRITE_EXTERNAL_STORAGE" displayName="存储权限" describe="写音频文件" isAsk="true" closeable="true" type="permission"/>
         <scene name="android.permission.MODIFY_AUDIO_SETTINGS" displayName="修改播放模式" describe="切换是否蓝牙播放" isAsk="true" closeable="true" type="permission"/>
         <scene name="android.permission.BLUETOOTH" displayName="蓝牙连接" describe="播放到蓝牙设备" isAsk="true" closeable="true" type="permission"/>
         <scene name="_applicationId_.permission.AUDIO_RECEIVE_BROADCAST" displayName="接收广播" describe="接收系统广播" isAsk="false" closeable="false" type="permission"/>
    </scenes>
	</android>
  
    <ios>
        <class/>
        <dependency>
            <![CDATA[
               pod 'MUIAudioRecordingView', '0.2.33'
            ]]>
        </dependency>
        <scenes>
        	<scene name="NSMicrophoneUsageDescription" describe="访问您的录音是为了发送录音消息"/>
    	</scenes>
    </ios>
  <runtime>
      <!--默认要配置不要移除-->
      <properties>
        <property type="bool" name="lazy_init_android" displayName="是否��启延��初始��" value="true"/>
      </properties>
    </runtime>
</component><component namespace="com.nd.sdp.component" name="ele-my-study" display="教育-学习-我的学习" type="function_library">
	<pages>
       <page type="cmp" name="main" display="我的学习-首页" toplevel="1"/>
       <page type="cmp" name="test" display="我的学习-QA" toplevel="1"/>
       <page type="cmp" name="learningCenter" display="学习中心" toplevel="1"/>
       <page type="cmp" name="studies" display="vod学习" toplevel="1"/>
	</pages>

    <runtime>
    	<properties>      
      		<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="false"/>   
           <property type="bool" name="lazy_init_ios" displayName="是否开iOS启延迟初始化" value="true"/>
    	</properties>
        <providers>
        	<provider name="com.nd.sdp.component.ele-my-study.search" filter="com.nd.sdp.component.ele-my-study.search.filter" desc="获取搜索数据" iosClass="HYELSearchProvider"/>
    	</providers>
  	</runtime>  
  
	<properties>
      <property type="string" name="ele_menu" displayName="首页菜单栏选项" value="search,qa,download,collection,report">
        <tip>search(搜索)、qa(答疑)、download(下载管理)、faq(选课说明)、collection(收藏)、mine(我)、shopping_cart(购物车)、order(订单)、report(学习报告)</tip>
        </property>
		<property type="bool" name="hide_top_fun" displayName="隐藏头部功能区域" value="false" senior="false">
           <tip>头部功能区域</tip>
           <img src="http://wiki.sdp.nd/images/d/d3/20160808-03.jpg"/>
        </property>
        <property type="bool" name="show_task" displayName="列表以任务模式显示" value="false" senior="false">
           <tip>任务模式</tip>
           <img src="http://wiki.sdp.nd/images/b/b2/20160808-02.jpg"/>
        </property>
      <property type="bool" name="learning_delete_support" displayName="学习中列表是否可删除" value="false" senior="false">
           <tip>学习中列表是否可进行删除操作</tip>
        <img src="http://wiki.sdp.nd/images/thumb/4/48/20160822003.jpg/400px-20160822003.jpg"/> 
        </property>
      <property type="string" name="tab_title_learning" displayName="tab页标题-学习中" value="" senior="false">
           <tip>tab页标题-学习中</tip>
           <img src="http://wiki.sdp.nd/images/9/99/20161013001.jpg"/> 
        </property>

      <property type="string" name="tab_title_completed" displayName="tab页标题-已完结" value="" senior="false">
           <tip>tab页标题-已完结</tip>
           <img src="http://wiki.sdp.nd/images/9/99/20161013001.jpg"/> 
        </property>
      <property type="string" name="tab_title_obligations" displayName="tab页标题-报名中" value="" senior="false">
           <tip>tab页标题-报名中</tip>
          
        </property>
       <property type="bool" name="hide_study_statistic" displayName="是否隐藏顶部学习统计区域" value="false" senior="false">
           <tip>"是否隐藏顶部学习统计区域</tip>
           <img src="http://wiki.sdp.nd/images/7/72/20170112113501.png"/> 
        </property>
       <property type="bool" name="hide_study_exam" displayName="是否隐藏测评" value="false" senior="false">
           <tip>"是否隐藏测评</tip>
        </property>
         <property type="string" name="tab_title_require" displayName="tab页标题-必修课" value="" senior="false">
           <tip>tab页标题-必修课</tip> 
        </property>
       <property type="bool" name="show_require" displayName="是否显示必修课" value="false" senior="false">
           <tip>学习中列表是否显示必修课</tip>
        </property>
        <property type="bool" name="hide_certificate" displayName="是否隐藏证书" value="false" senior="false">
           <tip>是否隐藏证书</tip>
        </property>
       <property type="string" name="errorBook_cmp" displayName="错题本cmp" value="" senior="false">
           <tip>错题本cmp配置</tip>
        </property>
       <property type="string" name="QAcmp" displayName="答疑cmp" value="" senior="false">
           <tip>答疑cmp配置</tip>
              </property> 
      
      <property name="open_filter_button" value="true" type="bool" displayName="是否开启筛选按钮">
         	<tip>学习列表页面右上角的筛选按钮</tip>
        </property>
      
      <property name="open_search_button" value="true" type="bool" displayName="是否开启搜索按钮">
         	<tip>学习列表页面右上角的搜索按钮</tip>
        </property>
      
	</properties>
	
	<events>
	</events>


  <handlers>      
  </handlers>
	<android>
		<class>com.nd.hy.android.elearning.mystudy.EleMyStudyComponent</class>
		<dependency>
			<![CDATA[
			    compile('com.nd.sdp.android:el-my-study:13.7.8-rc.3@aar') {
                    exclude module: 'active-android'
			        transitive = true
			        changing = true
			    }
                android {
	              	packagingOptions {
	              		exclude 'LICENSE.txt'
	            	}
				}
             ]]>
		</dependency>
	</android>

	<ios>
		<class>Elearn_my_studyComponent</class>
		<dependency>
			<![CDATA[
            pod 'elearn_my_study', '8.5.90'
			pod 'el_learning_card_ios', '8.1.9'
             ]]>
		</dependency>
	</ios>
</component><component namespace="com.nd.hy.android.video" name="video" display="教育-播放-视频" type="function_library">
	<pages>
		 <page type="cmp" name="VideoPlayer" display="视频播放器" toplevel="2" android_class="com.nd.hy.android.video.player.view.VideoPlayerActivity"/> 
	</pages>
	
	<properties>
		<!-- <property type="string" name="VideoPlayer" displayName="视频播放器" value="nd"/> -->
      <!-- <property type="string" name="VideoUrl" displayName="视频地址" value=""/> -->
      <property type="bool" name="Watermark" displayName="展示水印" value="false"/>
      <property type="bool" name="DLNAProjection" displayName="DLNA投屏" value="false">
            <dependency>
                 <component namespace="com.nd.sdp.component" name="dlna-support"/>
            </dependency>
      </property>
	</properties>
	
	<events>
	</events>
    <runtime>
    <properties>      
      <property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>  
      <property type="bool" name="lazy_init_ios" displayName="是否开iOS启延迟初始化" value="true"/>
    </properties>
  </runtime>
  
    <handlers>
        <handler name="not-ios://doStuff" desc="接收事件" receive_event="sdp_event_play_video,sdp_event_stop_video,sdp_event_fullscreen_close"/>    
        <handler name="ios://triggerType" desc="接收启动播放器事件" receive_event="ELVideoPlayer"/>	
        <handler name="ios://triggerPlayerEvent" desc="接收播放器事件" receive_event="ELVideoPlayerEvent"/>
        <handler name="ios://breakPointExamEndEvent" desc="断点练习结束事件" receive_event="EXPBreakPointExamEnd"/>
        <handler name="ios://eventHandlerProgressChanged" desc="进度上报回调事件" receive_event="elearning_resource_progress_changed"/>
        <handler name="ios://smartlinkGenerateLinkResult" desc="smartLink获取成功" receive_event="smartlink_generate_link_result"/>
        <handler name="ios://smartlinkGenerateLinkFailed" desc="smartLink获取失败" receive_event="smartlink_generate_qrcode_image_result"/>
    </handlers>

	<android>
		<class>com.nd.hy.android.video.player.VideoPlayerComponent</class>
		<dependency>
			<![CDATA[
			    compile('com.nd.sdp.android:e-video-player:0.3-rc7@aar') {
			        transitive = true
			        changing = true
			    }
                //视频版本
				def videoVersion = "1.5.7-rc8"
				//视频
				compile "com.nd.sdp.ele.android.video:video:${videoVersion}"
				//视频文档
				compile "com.nd.sdp.ele.android.video.doc:video-doc:${videoVersion}"
				//视频习题
				compile "com.nd.sdp.ele.android.video.exercise:video-exercise:${videoVersion}" 			
				//原生视频引擎
				compile "com.nd.sdp.ele.android.video.engine.mp:video-engine-original:${videoVersion}" 
				//错误日志
				implementation "com.nd.hy.android.error.log:error-log:1.0.1-rc3"
				//插件
				implementation "com.nd.hy.android.plugin.frame:frame-plugin:1.4.3-rc1"

				compile 'net.lingala.zip4j:zip4j:1.3.2'
                compile 'com.nd.hy.android.hermes:hermes-rx:2.2.6-rc8'
             ]]>
		</dependency>
      <scenes>
        <scene name="android.permission.WRITE_EXTERNAL_STORAGE" displayName="写文件权限" describe="存储视频文件" isAsk="true" closeable="true" type="permission"/>
        <scene name="android.permission.ACCESS_NETWORK_STATE" displayName="获取网络状态权限" describe="判断网络状态" isAsk="true" closeable="true" type="permission"/>
        <scene name="android.permission.INTERNET" displayName="网络权限" describe="接口请求" isAsk="true" closeable="true" type="permission"/>
        <scene name="android.permission.READ_EXTERNAL_STORAGE" displayName="读取存储卡权限" describe="读取视频文件" isAsk="true" closeable="true" type="permission"/>
        <scene name="android.permission.change_wifi_multicast_state" displayName="网络权限" describe="投屏需要" isAsk="true" closeable="true" type="permission"/>
      </scenes>
      
       <groovy>
			<![CDATA[
		    	android {
					packagingOptions {
                        exclude 'META-INF/beans.xml'
	  				}
            	}
			]]>
		</groovy>
	</android>
  
 
	<ios>
		<class>ElearnVideoComponent</class>
		<dependency>
			 <![CDATA[
			pod 'elearn_video', '2.3.312'

             ]]>
		</dependency>
	</ios>
</component><component namespace="com.nd.sdp.component" name="aggregationsearchcomponent" display="聚合搜索控件" type="library">
	<pages>
	</pages>
	
	<properties>
      
        <property type="bool" name="im_search_open_net_source" displayName="是否开启云端搜索" value="true"/>
           
	</properties>
	
	<events>
	</events>

	<handlers>
	</handlers>
  
    <runtime>
      <properties>
        <property type="bool" name="lazy_init_android" displayName="是否开启延迟初始化" value="true"/>
      </properties>
    </runtime>
  
    <android>
      <class>com.nd.sdp.android.common.search_widget.SearchWidgetComponent</class>
      <dependency>
          <![CDATA[
              compile('com.nd.sdp.android.common:search-widget:1.9.412.release') {     
    				exclude group: 'com.android.support'
    				transitive = true
    				changing = true
			  }
			  annotationProcessor "com.nd.sdp.android.serviceloader:service-loader-compiler-app:1.2.2"

                compile('com.nd.sdp.im.common:utils:0.2.99.release@aar') {
                    transitive = true
                    changing = true
                }
          ]]>
		</dependency>
      
    </android>  
  
  	<ios>
        <class>AggregateSearchComponent</class>
        <dependency>
            <![CDATA[
              pod 'AggregateSearchComponent', '1.0.153'
            ]]>
        </dependency>
    </ios>

</component><component namespace="com.nd.sdp.component" name="ele-channel" display="教育-学习-频道" type="function_library">
	<pages>
      <page type="react" name="index" display="频道页面" toplevel="1"/>
      <page type="react" name="resources" display="资源列表" toplevel="1"/>
      <page type="react" name="channel" display="单频道页面" toplevel="1"/>
      
       <page type="cmp" name="nindex" display="原生频道页面" toplevel="1" allow_guest="true"/>
      <page type="cmp" name="test" display="测试页面" toplevel="1" allow_guest="true"/>

      <page type="cmp" name="newresources" display="新原生资源列表" toplevel="1" allow_guest="true"/>
      <page type="cmp" name="newchannel" display="新原生单频道页面" toplevel="1" allow_guest="true"/>
      
      <page type="cmp" name="nresources" display="原生资源列表" toplevel="1" allow_guest="true"/>
      <page type="cmp" name="nchannel" display="原生单频道页面" toplevel="1" allow_guest="true"/>
      
	</pages>
  
  <properties>
      	<property type="string" name="page_id" displayName="学习社区主页id（社区使用）" value="1516852474244">
           <tip>学习社区主页id（社区使用）</tip>
        </property>
              <property type="bool" name="is_ink" value="false" displayName="是否开启水墨"/>
    
            <property type="bool" name="is_show_search" value="false" displayName="二级页面开启搜索"/>
          <property type="string" name="search_cmp" value="" displayName="搜索跳转地址">
                 <tip>默认会替换{library_id},{custom_tags}</tip>
          </property>
             <property type="string" name="uiType" value="" displayName="ui风格">
              <tip>xUi、vodUi、tocUi，默认不填为普通ui</tip>
        </property>
         <property type="bool" name="enable_static" value="false" displayName="请求是否使用cdn形式">
              <tip>频道相关请求按CDN形式</tip>
        </property>
	</properties>
  
    <runtime>
    	<properties>      
      		<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="false"/>      
    	</properties>
      	<providers>
        	<provider name="com.nd.sdp.component.ele-channel.provider" filter="com.nd.sdp.component.ele-channel.provider.filter" desc="频道数据" anClass="com.nd.hy.ele.channel.provider.ELCHChannelDataProvider" iosClass="ELCHChannelDataProvider"/>  
        </providers>
  	</runtime>  
	
	<properties>
	</properties>
	
	<events>
	</events>

	<handlers>
       <handler name="not-ios://doStuff" desc="tab切换" receive_event="EL_CHANNEL_SWITCH_TAB"/>
       <handler name="not-ios://userinfo_event_refresh_data_source" desc="用户信息刷新" receive_event="userinfo_event_refresh_data_source"/>
	</handlers>
       <sdk> 
      <js-sdk>  
        <name>ele-rn-channel</name>  
        <version>3.0</version>  
          <!-- 注意：组件热更新不可控，暂时不使用》每次发布请使用大版本与代码中相同，并且更新大版本（x.y中的x); -->
          <!-- https://reference.doc.101.com/appfactory/userguide/#/light/js-sdk/version-rule -->
        <ios/>  
        <android> 
          <react-class>com.nd.sdp.android.ele.rncommon.react.EleRnCommonProvider</react-class> 
        </android> 
      </js-sdk> 
    </sdk>
   
    <!-- 在密钥组件中定义 -->
  	<android>
		<class>com.nd.hy.ele.channel.ChannelSpaceComponent</class>
		<dependency>
			<![CDATA[
			    compile('com.nd.sdp.android:ele-channel:13.2.0-rc.65@aar') {
			        transitive = true
			        changing = true
			    }

             ]]>
		</dependency>
	</android>
  
  	<react-android>
      <npm>"@sdp.nd/el-channel-rn":"1.2.22"</npm>
    </react-android>
  	<react-ios>
      <npm>"@sdp.nd/el-channel-rn":"1.2.22"</npm>
    </react-ios>
	
   <ios>
      <class>el_channel_ios_component</class>
		<dependency>
			<![CDATA[
			pod 'el_channel_ios', '1.0.101'
             ]]>
		</dependency>
      
	</ios>
  
</component><component namespace="com.nd.sdp.library" name="cscom" display="内容服务">
    <sdk>
      <js-sdk>
        <name>cs-jssdk</name>  <!-- 必须 -->
        <version>1.0</version>  <!-- 必须 -->
        <ios>
            <js-class/>   <!-- 可选 -->
        </ios>
        <android>
            <js-class>com.nd.sdp.cs.js.CsCommonJsInjectorProvider</js-class> <!-- 可选 -->
            <react-class>com.nd.sdp.cs.js.CsCommonJsInjectorProvider</react-class>  <!-- 仅android需要此标签， 可选 -->
        </android>
      </js-sdk>
    </sdk>
	<pages>
	</pages>
	
	<properties>
      <property type="bool" name="open_cs_uploadlog" desc_true="显示" desc_false="隐藏" displayName="开启全球化" value="false"/>
      <property type="bool" name="open_cdn_download" desc_true="开启" desc_false="关闭" displayName="开启CDN下载" value="false"/>
	</properties>
	
	<events>
	</events>

	<handlers>
	</handlers>
    <runtime>
      <properties>
        <property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="false"/>
        <property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="false"/>
      </properties>
    </runtime>
	<android>
		<class>com.nd.sdp.cs.CsComponent</class>
		<dependency>
			<![CDATA[
                compile('com.nd.sdp:cs_component:0.0.8.0.release'){
					transitive = true
					changing = true 
				}
                compile ('com.nd.android.smartcan:content:1.4.4.11.cs.release')
                compile('com.nd.android.smartcan:content-s3:0.0.6.13.s3.release')
				compile('com.nd.android.smartcan:cs-object-sdk:0.0.8.48.release')
                compile('com.nd.android.smartcan:cs-base-sdk:0.0.5.30.release')
                compile('com.nd.android.smartcan:cssdkextend:2.0.0.3.csextend@aar'){
					transitive = true 
					changing = true 
					exclude group: 'android.support', module: 'android-support-v4' 
				}
                compile('com.nostra13.universalimageloader:universal-image-loader:2.1.0.3@aar') {
                    transitive = true
                    changing = true
                }
                configurations {
                  all*.exclude group:'android.support', module: 'android-support-v4'
                }
             ]]>
		</dependency>
      	<groovy>
          <![CDATA[
android {
	compileOptions {
		sourceCompatibility 1.8
		targetCompatibility 1.8
	}
}
          ]]>
	   </groovy>
                   
	</android>
  
      <ios>
        <class>CSComponent</class>

        <dependency>
            <![CDATA[
			pod 'ContentServiceSDK', '0.2.83'
            pod 'CSComponent', '1.0.23'
            pod 'CephS3SDK','1.4.20'
            pod 'CSObjectSDK', '1.1.100'
            pod 'CSBaseSDK', '1.0.9' 
             ]]>
        </dependency>
		<ats-exceptions>
            <ats-exception domain="sl3s3.101.com" include-sub-domain="true" minimum-tls-version="TLSv1.2" require-forward-secrecy="false" require-certificate-transparency="false"/>
            <ats-exception domain="pres3.101.com" include-sub-domain="true" minimum-tls-version="TLSv1.2" require-forward-secrecy="false" require-certificate-transparency="false"/>
            <ats-exception domain="presls3.101.com" include-sub-domain="true" minimum-tls-version="TLSv1.2" require-forward-secrecy="false" require-certificate-transparency="false"/>
            <ats-exception domain="wx-s3-4.101.com" include-sub-domain="true" minimum-tls-version="TLSv1.2" require-forward-secrecy="false" require-certificate-transparency="false"/>
            <ats-exception domain="wx-ecpool-1.101.com" include-sub-domain="true" minimum-tls-version="TLSv1.2" require-forward-secrecy="false" require-certificate-transparency="false"/>
            <ats-exception domain="nds-wxcs-sec.101.com" include-sub-domain="true" minimum-tls-version="TLSv1.2" require-forward-secrecy="false" require-certificate-transparency="false"/>
            <ats-exception domain="nds-sec-1.101.com" include-sub-domain="true" minimum-tls-version="TLSv1.2" require-forward-secrecy="false" require-certificate-transparency="false"/>
            <ats-exception domain="nds-sec-2.101.com" include-sub-domain="true" minimum-tls-version="TLSv1.2" require-forward-secrecy="false" require-certificate-transparency="false"/>
            <ats-exception domain="nds-pres3-1.101.com" include-sub-domain="true" minimum-tls-version="TLSv1.2" require-forward-secrecy="false" require-certificate-transparency="false"/>
            <ats-exception domain="nds-pres3-2.101.com" include-sub-domain="true" minimum-tls-version="TLSv1.2" require-forward-secrecy="false" require-certificate-transparency="false"/>
            <ats-exception domain="nds-s3-1.101.com" include-sub-domain="true" minimum-tls-version="TLSv1.2" require-forward-secrecy="false" require-certificate-transparency="false"/>
            <ats-exception domain="nds-s3-2.101.com" include-sub-domain="true" minimum-tls-version="TLSv1.2" require-forward-secrecy="false" require-certificate-transparency="false"/>
            <ats-exception domain="nds-s3-3.101.com" include-sub-domain="true" minimum-tls-version="TLSv1.2" require-forward-secrecy="false" require-certificate-transparency="false"/>
            <ats-exception domain="nds-s3-4.101.com" include-sub-domain="true" minimum-tls-version="TLSv1.2" require-forward-secrecy="false" require-certificate-transparency="false"/>
            <ats-exception domain="nds-s3-5.101.com" include-sub-domain="true" minimum-tls-version="TLSv1.2" require-forward-secrecy="false" require-certificate-transparency="false"/>
            <ats-exception domain="nds-s3-6.101.com" include-sub-domain="true" minimum-tls-version="TLSv1.2" require-forward-secrecy="false" require-certificate-transparency="false"/>
            <ats-exception domain="nds-s3-7.101.com" include-sub-domain="true" minimum-tls-version="TLSv1.2" require-forward-secrecy="false" require-certificate-transparency="false"/>
            <ats-exception domain="nds-s3-8.101.com" include-sub-domain="true" minimum-tls-version="TLSv1.2" require-forward-secrecy="false" require-certificate-transparency="false"/>
            <ats-exception domain="nds-s3-9.101.com" include-sub-domain="true" minimum-tls-version="TLSv1.2" require-forward-secrecy="false" require-certificate-transparency="false"/>
            <ats-exception domain="nds-ecpool-1.101.com" include-sub-domain="true" minimum-tls-version="TLSv1.2" require-forward-secrecy="false" require-certificate-transparency="false"/>
            <ats-exception domain="nds-ecpool-2.101.com" include-sub-domain="true" minimum-tls-version="TLSv1.2" require-forward-secrecy="false" require-certificate-transparency="false"/>
            <ats-exception domain="nds-ecpool-3.101.com" include-sub-domain="true" minimum-tls-version="TLSv1.2" require-forward-secrecy="false" require-certificate-transparency="false"/>
            <ats-exception domain="nds-ecpool-4.101.com" include-sub-domain="true" minimum-tls-version="TLSv1.2" require-forward-secrecy="false" require-certificate-transparency="false"/>
            <ats-exception domain="nds-ecpool-5.101.com" include-sub-domain="true" minimum-tls-version="TLSv1.2" require-forward-secrecy="false" require-certificate-transparency="false"/>
            <ats-exception domain="nds-ecpool-6.101.com" include-sub-domain="true" minimum-tls-version="TLSv1.2" require-forward-secrecy="false" require-certificate-transparency="false"/>
            <ats-exception domain="nds-ecpool-7.101.com" include-sub-domain="true" minimum-tls-version="TLSv1.2" require-forward-secrecy="false" require-certificate-transparency="false"/>
            <ats-exception domain="nds-ecpool-8.101.com" include-sub-domain="true" minimum-tls-version="TLSv1.2" require-forward-secrecy="false" require-certificate-transparency="false"/>
            <ats-exception domain="nds-ecpool-9.101.com" include-sub-domain="true" minimum-tls-version="TLSv1.2" require-forward-secrecy="false" require-certificate-transparency="false"/>
        </ats-exceptions>
    </ios>

</component><component namespace="com.nd.sdp.component" name="model-app" display="个人资料（轻应用）">
	<pages>
      <page type="local" name="index.html" display="个人信息表单模板组件" toplevel="2" android_class="">
      	<params>
          <param key="name">userinfo</param>
          <param key="close">false</param>
          <param key="_maf_left_button">back</param>
          <param key="_maf_webview_title">...</param>
		</params>
      </page>
    </pages>
    <properties>
      <property type="enum" name="avatar" displayName="默认头像网络" value="color">
        <options multi="false">
          <option value="grey">灰色</option>
          <option value="color">彩色</option>
        </options>
      </property>
      <property type="string" name="name" displayName="模板名称" value="userinfo"/>
      <property type="bool" name="close" displayName="显示关闭按钮" value="false"/>
      <property type="enum" name="_maf_left_button" displayName="返回按钮响应" value="back">
        <options multi="false">
          <option value="back">回退</option>
          <option value="close">关闭</option>
          <option value="none">不显示</option>
        </options>
      </property>
      <property type="bool" name="award" displayName="开启完善奖励显示" value="false"/>
      <property type="bool" name="privacy" displayName="开启隐私入口" value="false"/>
    </properties>
	<events>
	</events>

	<handlers>
	</handlers>
  	<h5>
      <version>1.60.58</version>
      <npm>
        "@sdp.nd/model-h5":"1.60.58"
      </npm>
      <h5app>model-h5</h5app>
    </h5>
    <runtime>
      <properties>
          <property name="lazy_init_android" value="false" type="string"/>
      </properties>
    </runtime>
</component><component namespace="com.nd.social" name="flashchat" display="闪聊动画控件" type="library">
	<pages>
	</pages>
	
	<properties>
	</properties>
 
  	<runtime>
	<properties>
     	 <property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
      	 <property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
		</properties>
	</runtime>	
  
  
	<events>
	</events>

	<handlers>
	</handlers>
  
  <android>
    <class/>
    <dependency>
      <![CDATA[
        compile('com.nd.android.sdp.texteffect:module_texteffect:0.3.133.develop'){
          transitive = true
          changing = true
        }
       ]]>
    </dependency>
  </android>
  <ios>
    	<class/>
        <dependency>
            <![CDATA[
                pod 'MUIFlashChatMainPanelView', '0.0.9'
               ]]>
        </dependency>
 </ios>
</component><component namespace="com.nd.sdp.component" name="userinfo-view-single-app" display="用户信息显示" type="library">
	<pages>
      <page type="cmp" name="userview" display="用户视图test" toplevel="2" allow_guest="true"/>
	</pages>
	
	<properties>
      <property type="int" name="uv_cache_expiration_second" displayName="缓存过期时间(秒)" value=""/>
      <property type="int" name="uv_update_time_expire_second" displayName="模板缓存过期时间(秒)" value=""/>
      <property type="bool" name="uv_need_cancel_user" displayName="显示UC注销用户" desc_true="开启" desc_false="关闭" value="false"/>
	</properties>
  
  <runtime>
    <properties>
      <property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="false"/>
      <property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="false"/>
    </properties>
     <handlers>
        <handler name="not-ios://onLangChange" desc="获取活动最大id" receive_event="event_app_language_changed"/>
        <handler name="not-ios://onRefreshDataSource" desc="获取缓存" receive_event="userinfo_event_refresh_data_source"/>
      </handlers>
  </runtime>
	
	<events>
      <event name="uv_on_click_person_avatar" desc="点击个人主页头像设置个人头像"/>
	</events>

	<handlers>
	</handlers>
  <android>
		<class>com.nd.sdp.userinfoview.group.UserInfoGroupViewComponent</class>
		<dependency>
            <![CDATA[
   				 compile ('com.nd.sdp.android:userinfo-view-group-component-android:1.1.1.release'){
	                    transitive = true
	                    changing = true
	             }
				compile "com.nd.sdp.android:userinfo-view-single-component-android:3.1.358.master"
				compile "com.nd.sdp.android:avatarext:3.1.358.master"
				compile "com.nd.sdp.android:userinfo-view-sdk-android:1.1.2.5034da"
				android {
                    compileOptions {
                        sourceCompatibility 1.8
                        targetCompatibility 1.8
                    }
                }
             ]]>
		</dependency>
	</android>
  
  <ios>
    <class>UserViewGroupComponent</class>
		<dependency>
			<![CDATA[
			pod 'UserViewGroupComponent', '0.1.38'
            pod 'UserViewComponent', '0.1.25'
			pod 'UserViewSDK', '0.1.52'
             ]]>
		</dependency>

	</ios>

</component><component namespace="com.nd.sdp.component" name="ui-qrcode" display="二维码控件" type="library">
	<pages>
	</pages>
	
    <runtime>
		<properties>
      		<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
      		<property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
		</properties>
    </runtime>
	
	<events>
	</events>

	<handlers>
	</handlers>
  
	<android>
		<dependency>
			<![CDATA[
				compile('com.nd.android.sdp.qrcode:qr-core:0.3.45.develop') {
					transitive = true
                    changing = true
                }
                configurations {
                    all*.exclude group: 'com.google.zxing', module: 'core'
                }
			]]>
		</dependency>
	</android>
  
  	<ios>
		<class/>
		<dependency>
            <![CDATA[
            pod 'MUIQRCode', '0.0.26'
             ]]>
		</dependency>  
		<meta-datas>
       	 <meta-data xpath="//plist/dict" key="NSPhotoLibraryUsageDescription" type="string" file="/ComponentAppBase/Info.plist">
         	 <![CDATA[
    			App need your consent to visit the album
        	  ]]>
         </meta-data>
         <meta-data xpath="//plist/dict" key="NSCameraUsageDescription" type="string" file="/ComponentAppBase/Info.plist">
          <![CDATA[
             App need your consent to access the camera
          ]]>
          </meta-data>
   		 </meta-datas>
	</ios>

</component><component namespace="com.nd.sdp.component.common" name="nd-avatarloader" display="头像控件" type="library">
	<pages>
	</pages>
	
	<properties>
	</properties>
	
	<events>
	</events>

	<handlers>
	</handlers>
    <runtime>
      <properties>
        <property type="bool" name="lazy_init_android" displayName="是否开启延迟初始化" value="true"/>
      </properties>
    </runtime>
    <android>
		<class/>
		<dependency>
          <![CDATA[
            compile('com.nd.sdp.android.common.ui:nd-avatar-imageview:2.1.2.8.release') {
                transitive = true
                changing = true;
            }
            compile('com.nd.sdp.android.common.ui:nd-avatar-loader-iml:2.1.2.8.release') {
                transitive = true
                changing = true;
            }
          ]]>
		 </dependency>
	</android>
	<ios>
        <class>MUIAvatar</class>
        <dependency>
            <![CDATA[
   			pod 'MUIAvatar', '1.0.50'
             ]]>
        </dependency>
    </ios>
</component><component namespace="com.nd.sdp.component" name="ui-emotion-panel" display="表情面板控件" type="library">
	<pages>
	</pages>
	<runtime>
      <properties>
        <property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="false"/>
      </properties>
  	</runtime>
	<properties>
	</properties>
	
	<events>
	</events>

	<handlers>
	</handlers>
  
        <android>
          <dependency>
              <![CDATA[
                  compile('com.nd.android.sdp.im.common.widget:emotion:2.0.252.release')
				annotationProcessor "com.nd.android.sdp.im.emotion_cfg:module_build_res_di_app_processor:11.release"
                  afterEvaluate { project ->
                  new File("${rootProject.getRootDir().getAbsoluteFile()}/appConfig.tmp")
                      .write("${project.projectDir}/assets")
                  }
              ]]>
          </dependency>
      </android>
  
	<ios>
        <dependency>
            <![CDATA[
                pod 'MUISmiley','0.2.91'
            ]]>
        </dependency>
    </ios>

</component><component namespace="com.nd.sdp.component" name="catalogservice" display="目录服务">
	<pages>
	</pages>
	
	<properties>
	</properties>
	
	<events>
	</events>

	<handlers>
	</handlers>javascript:;
    <runtime>
      <!--默认要配置不要移除-->
      <properties>
        <property type="bool" name="lazy_init_android" displayName="是否开启延迟初始化" value="true"/>
        <property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
      </properties>
    </runtime>
      <android>
          <class/>
					<dependency>
             <![CDATA[
                        compile('com.nd.social.im:cscollectionui:0.2.329.release'){
                           transitive = true
                        }
       ]]>
					</dependency>
     </android> 
  
     <ios>
        <class>CACCatalogComponent</class>
        <dependency>
            <![CDATA[
                pod 'catalogComponent', '0.1.108'
				pod 'catalogSDK', '0.1.43'
               ]]>
        </dependency>
    </ios>
</component><component namespace="com.nd.sdp.component" name="groupshareplug-in" display="群共享插件">
	<pages>
	</pages>
	
	<properties>
	</properties>
	
	<handlers>
        <handler name="delete_file" desc="删除群文件" receive_event="im_event_group_share_delete_file"/>
        <handler name="group_dismissed" desc="解散群通知" receive_event="im_event_group_dismissed"/>
      <handler name="register_file" desc="登记群文件" receive_event="group_share_event_register_file"/>
	</handlers>

   
  
	 <runtime>
    	<properties>
     	 <property type="bool" name="lazy_init_android" displayName="是否开启延迟初始化" value="true"/>
         <property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
    	</properties>
       
        <providers>
  			<provider name="com.nd.sdp.component.groupshareplug-in.ServiceNameTaker" filter="Group_ServiceNameTaker" desc="ServiceName提供者"/>
    		<provider name="com.nd.sdp.component.groupshareplug-in.TokenTaker" filter="Group_TokenTaker" desc="Token提供者"/>
            <provider name="com.nd.sdp.component.groupshareplug-in.TenantInfoTaker" filter="Group_TenantInfoTaker" desc="TenantInfo提供者"/>
			<provider name="com.nd.sdp.component.groupshareplug-in.TokenTakerByCid" filter="Group_TokenTakerByCid" desc="TokenTakerByCid提供者"/>
		</providers>
     
  	</runtime>

      <android>
          <class>com.nd.anroid.im.groupshare.component.GroupShareComponent</class>
					<dependency>
             <![CDATA[
                        compile('com.nd.android.im.groupshare:groupshareui:1.2.338.release'){
                             exclude group:'com.nd.android.sdp.im',module:'imsdk'
                        }
        				compile('com.nd.social.im:cscollectionui:0.2.334.release')
       ]]>
					</dependency>
     </android> 
  
  <ios>
    <class>GroupShareComponent</class>
    <dependency>
            <![CDATA[
                pod 'GroupSharePlugin', '0.1.105'
               ]]>
     </dependency>
  </ios>
</component><component namespace="com.nd.hy.android" name="reader" display="教育-播放-文档" type="function_library">
	<pages>
		<!--<page type="cmp" name="document" display="文档" toplevel="2" android_class="com.nd.hy.android.reader.biz.ReaderActivity"></page>-->
	</pages>
  
	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="false"/>
            <property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
		</properties>
	</runtime>
  
	<properties>
		<!--<property type="string" name="org" displayName="组织名" value="nd" />-->
	</properties>
	
	<events>
	</events>

	<handlers>
        <handler name="ios://eventHandlerProgressChanged" desc="进度上报回调事件" receive_event="elearning_resource_progress_changed"/>
        <handler name="ios://smartlinkGenerateLinkResult" desc="smartLink获取成功" receive_event="smartlink_generate_link_result"/>
        <handler name="ios://smartlinkGenerateLinkFailed" desc="smartLink获取失败" receive_event="smartlink_generate_qrcode_image_result"/>
	</handlers>

	<android>
		<class>com.nd.hy.android.reader.biz.ReaderComponent</class>
		<dependency>
			<![CDATA[
			    compile('com.nd.hy.android.reader:reader-player:0.2@aar') {
                    exclude group: 'com.android.support'
                    exclude(group: "com.nd.sdp.ele.android.reader", module: "reader-pdf")
			        transitive = true
			        changing = true
			    }

                compile "com.nd.sdp.ele.android.reader:reader-image:2.0.7-rc8"
             ]]>
		</dependency>
	</android>

	<ios>
		<class>ElearnDocumentComponent</class>
        <dependency>
            <![CDATA[
            pod 'elearn_document', '2.5.81'
             ]]>
        </dependency>
	</ios>
</component><component namespace="com.nd.sdp.component" name="neworganizationcomponent" display="新组织" type="function_library">
	<pages>
	</pages>
	
	<properties>
       <property type="bool" name="orgtree_tag_filter" displayName="支持组织标签过滤(开关已迁移到IM组织树控件)" value="false"/>
      <property type="bool" name="orgtree_tag_filter_result_show_by_tree" displayName="支持组织标签过滤结果树形展示(开关已迁移到IM组织树控件)" value="false"/>
	
	</properties>
	
	<events>
	</events>

	<handlers>
	</handlers>

	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
		</properties>
	</runtime>
  
   <ios>
        <class>OrgTreeForORGSDK</class>

        <dependency>
            <![CDATA[
				pod 'OrgTreeForORGSDK', '1.0.83'
             ]]>
        </dependency>

    </ios>
  
</component><component namespace="com.nd.social" name="socialShare" display="社会化分享">
   <properties>
      <property type="string" name="umeng_sina_appkey_ios" displayName="新浪微博的appkey（iOS）" senior="true" deprecated="//component[@namespace='com.nd.social' and @name='weiboshare']">
         <tip>获取内容请点击：http://open.weibo.com/</tip>
      </property>
      <property type="string" name="umeng_sina_scheme_ios" displayName="新浪微博的scheme（iOS）" iOS_URL_Types="1" senior="true" deprecated="//component[@namespace='com.nd.social' and @name='weiboshare']">
         <tip>获取内容请点击：http://open.weibo.com/</tip>
      </property>
      <property type="bool" name="support_sina_weibo_share" displayName="支持分享到新浪微博（iOS）" senior="true" value="true">
        <dependency>
          <component namespace="com.nd.social" name="weiboshare" display="新浪微博分享"/>
        </dependency>
      </property>
     
      <property type="string" name="umeng_qq_appkey_ios" displayName="QQ/Qzone的AppId（iOS）" senior="true" deprecated="//component[@namespace='com.nd.social' and @name='qqshare']">
         <tip>获取内容请点击：http://open.qq.com/</tip>
      </property>
      <property type="string" name="umeng_qq_QQScheme_ios" displayName="QQ/Qzone的QQScheme（iOS）" iOS_URL_Types="1" senior="true" deprecated="//component[@namespace='com.nd.social' and @name='qqshare']">
         <tip>填写规则scheme=QQ+APPID（iOS）转化成十六进制后的字符，例如：scheme=QQ41E51EA3；进制转化在线工具：http://tool.lu/hexconvert/</tip>
      </property>
      <property type="string" name="umeng_qq_tencentScheme_ios" displayName="QQ/Qzone的tencentScheme（iOS）" iOS_URL_Types="1" senior="true" deprecated="//component[@namespace='com.nd.social' and @name='qqshare']">
         <tip>填写规则tencentScheme=tencent+APPID（iOS），例如tencent1105534627</tip>
      </property>
      <property type="bool" name="support_qq_share" displayName="支持分享QQ、Qzone（iOS）" senior="true" value="true">
        <dependency>
          <component namespace="com.nd.social" name="qqshare" display="QQ分享"/>
        </dependency>
      </property>
     
      <property type="string" name="umeng_wechat_appid_ios" displayName="微信的AppId（iOS）" senior="true" deprecated="//component[@namespace='com.nd.social' and @name='wechatshare']">
         <tip>获取内容请点击：https://open.weixin.qq.com/</tip>
      </property>
      <property type="string" name="umeng_wechat_scheme_ios" displayName="微信的scheme（iOS）" iOS_URL_Types="1" senior="true" deprecated="//component[@namespace='com.nd.social' and @name='wechatshare']">
         <tip>填写规则scheme=tencent+APPID(iOS)，例如tencent110553027</tip>
      </property>
      <property type="bool" name="support_wechat_share" displayName="支持分享微信（iOS）" senior="true" value="true">
        <dependency>
          <component namespace="com.nd.social" name="wechatshare" display="微信分享"/>
        </dependency>
      </property>
     
      <property type="string" name="sina_app_key_android" displayName="必填，新浪微博的appkey（Android）" senior="true">
         <tip>获取内容请点击：http://open.weibo.com/</tip>
      </property>
      <property type="string" name="sina_redirect_Url" displayName="选填，新浪微博的重定向URL（Android），默认https://api.weibo.com/oauth2/default.html" senior="true"/>
      <property type="string" name="youmen_app_key_android" displayName="友盟App KEY(Android)" senior="true">
         <tip>获取内容请点击：http://www.umeng.com/</tip>
      </property>
      <property type="string" name="weixin_app_id_android" displayName="微信App id(Android)" senior="true">
         <tip>获取内容请点击：https://open.weixin.qq.com/</tip>
      </property>
      <property type="string" name="weixin_app_secret_android" displayName="微信App Secret(Android)" senior="true">
         <tip>获取内容请点击：https://open.weixin.qq.com/</tip>
      </property>
      <property type="string" name="qq_app_id_android" displayName="QQ App ID(Android)" senior="true">
         <tip>获取内容请点击：http://open.qq.com/</tip>
      </property>
      <property type="string" name="qq_app_key_android" displayName="qq App key(Android)" senior="true">
         <tip>获取内容请点击：http://open.qq.com/</tip>
      </property>
      <property type="bool" name="showSocialShareItem" desc_true="显示" desc_false="隐藏" displayName="社会化分享" value="true"/>
      <property type="bool" name="showCmpShareItem" desc_true="显示" desc_false="隐藏" displayName="组件间分享" value="false"/>
      <property type="bool" name="showWebMenuItem_ios" desc_true="显示" desc_false="不显示" displayName="web页面弹框菜单是否显示分享（iOS有效）" value="true"/>
      <property type="bool" name="showFacebookShareItem" desc_true="显示" desc_false="隐藏" displayName="是否需要分享到Facebook（Android）" value="false"/>
      <property type="bool" name="showMessengerShareItem" desc_true="显示" desc_false="隐藏" displayName="是否需要分享到Messenger（Android）" value="false"/>
      <property type="bool" name="showTwitterShareItem" desc_true="显示" desc_false="隐藏" displayName="是否需要分享到Twitter（Android）" value="false"/>
      <property type="bool" name="support_facebook_messenger_share" displayName="支持facebook、messenger分享" value="false">
        <dependency>
          <component namespace="com.nd.sdp.facebookmessengershare" name="facebook-messenger-share" display="facebook-messenger分享插件"/>
        </dependency>
	  </property>

     <property type="bool" name="support_twitter_share" displayName="支持twitter分享（仅安卓）" value="false">
        <dependency>
          <component namespace="com.nd.social" name="twittershare" display="twitter分享插件"/>
        </dependency>
     </property>
     
     <property type="bool" name="support_line_share" desc_true="显示" desc_false="隐藏" displayName="支持line分享" value="false">
        <dependency>
          <component namespace="com.nd.social" name="lineshare" display="line分享插件"/>
        </dependency>
     </property>
     
     <property type="bool" name="showMessageShareItem" desc_true="显示" desc_false="隐藏" displayName="短信是否显示" value="false">
        <dependency>
          <component namespace="com.nd.social" name="messageshare" display="message分享插件"/>
        </dependency>
     </property>
     
     <property type="bool" name="showCopyItem" desc_true="显示" desc_false="隐藏" displayName="是否需要复制链接功能" value="false"/>
     <property type="bool" name="showWhatsAppItem" desc_true="显示" desc_false="隐藏" displayName="是否需要WhatsApp分享渠道" value="false"/>
     
      <property type="string" name="facebook_appid" displayName="Facebook的appkey（iOS）" value="" deprecated="//component[@namespace='com.nd.sdp.facebookmessengershare' and @name='facebook-messenger-share']"/>
      <property type="string" name="facebook_scheme_ios" displayName="Facebook的Scheme（iOS）" iOS_URL_Types="1" deprecated="//component[@namespace='com.nd.sdp.facebookmessengershare' and @name='facebook-messenger-share']"/>
      <property type="string" name="facebook_app_name" displayName="Facebook的应用显示名称（iOS）" deprecated="//component[@namespace='com.nd.sdp.facebookmessengershare' and @name='facebook-messenger-share']"/>
      <property type="bool" name="showSystemShareItem_ios" desc_true="显示" desc_false="不显示" displayName="是否使用系统自带分享功能（iOS）" value="false"/>
      <property type="enum" name="singleRowNum" displayName="分享弹框单行渠道数" value="5">
		<options multi="false">
			<option value="3">3</option>
			<option value="4">4</option>
          	<option value="5">5</option>
		</options>
	  </property>
      <property type="enum" name="theme" displayName="主������">
		<options multi="false">
			<option value="xstudy">x学习</option>
		</options>
 	  </property>
<property type="bool" name="forceShareDefaultCoverForOuter" desc_true="显示" desc_false="隐藏" displayName="强制默认图片作为对外分享封面（仅支持图文分享）" value="false"/>   </properties>
  
   <events>
   </events>
  
   <handlers>
   </handlers>
  
  <runtime>
      <properties>
        <property type="bool" name="lazy_init_android" displayName="是否开启延迟初始化" value="false"/>
        <property type="bool" name="lazy_init_ios" displayName="是否开启延迟初始化" value="false"/>
      </properties>
   </runtime>
  
<android>
<class>com.nd.android.socialshare.config.ShareComponent</class>
<dependency>
compile('com.nd.android.sdp.social:module_share:26.8.0.fa90b08') { 
  	transitive = true
  	exclude group: 'com.nd.android.sdp.im.common.widget', module: 'emotion'
  }
</dependency>
  <meta-datas>
               <meta-data name="socialShare" label="QQ授权配置" xpath="//manifest/application" file="/app/AndroidManifest.xml">
               <![CDATA[
                       <activity
            android:name="com.tencent.tauth.AuthActivity"
            android:launchMode="singleTask"
            android:exported="true"
            android:noHistory="true">
            <intent-filter>
                <action android:name="android.intent.action.VIEW" />

                <category android:name="android.intent.category.DEFAULT" />
                <category android:name="android.intent.category.BROWSABLE" />
                <data android:scheme="tencent${qq_app_id_android}" />
            </intent-filter>
        </activity>
               ]]>
               </meta-data>
           </meta-datas>
  <groovy>
          <![CDATA[
         
// 处理微信activity
def handleWxActivity(){
    Properties shareproperties = new Properties();
    shareproperties.load(project.rootProject.file('local.properties').newDataInputStream());
    def sharepackageName = shareproperties.getProperty('want.reset.package.name');
    String sharepackageNameData = sharepackageName.toString();
    String sharepackageDir = sharepackageNameData.replace('.', '/');

    println "---------------------1 读取包名--------------------------------";

//构建包名称
    def sharewantCreatePackage = 'src/main/java/' + sharepackageDir + '/wxapi';
    File sharedirFile = file(sharewantCreatePackage);
    File sharewant = file(sharedirFile.absolutePath);
//创建文件夹
    if (!sharewant.exists()) {
        sharewant.mkdirs();
    }

    println "---------------------2 创建文件夹--------------------------------";

//创建文件。
    def sharewantCreateFile = sharewantCreatePackage + '/WXEntryActivity.java';
    File sharewantCreateFilePath = file(sharewantCreateFile);
    sharewantCreateFilePath.delete();
    if (!sharewantCreateFilePath.exists()) {
        sharewantCreateFilePath.createNewFile();
        sharewantCreateFilePath.setWritable(true, false);
    }

    println "---------------------3 已经完成空的java 文件创建--------------------------------";

    String sharedataString = '''package com.nd.smartcan.appfactory.demo.wxapi;

import android.app.Activity;
import android.os.Bundle;

import com.nd.uc.thirdLogin.ThirdLoginManager;
import com.nd.android.socialshare.sdk.weixin.view.WXShareEventManager;

/**
 * 微信登录需要制定的包名称，最终多应用打包，通过脚本动态修改包名和AndroidTemplet实现.
 */
public class WXEntryActivity extends Activity  {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        ThirdLoginManager.getInstance().handleIntent(this);
        WXShareEventManager.getInstance().handleIntent(this);
        finish();
    }
}


''';
//替换文件中的包名称为当前app的设置的包名称。
    String shareafterData = sharedataString.replaceFirst('com.nd.smartcan.appfactory.demo.wxapi', sharepackageNameData + '.wxapi')

//把替换好的数据写入到这个类中
    def sharefilePath = sharewantCreateFile.toString();
    File sharetoFile = file(sharefilePath);
    File sharetoFileTwo = file(sharetoFile.absolutePath);
    sharetoFileTwo.write(shareafterData, 'utf-8');

    println "---------------------4 写入内容--------------------------------"

//修改AndroidManifest.xml中的Activity申明。
    File sharemyFile = file('AndroidManifest.xml');
    String sharemainfestPath = sharemyFile.absolutePath;
    String shareoldDataString = sharemyFile.getText('utf-8')
if(!shareoldDataString.contains(sharepackageNameData+".wxapi.WXEntryActivity")){
//备份一个文件
    File sharewantBakModiFile = file(sharemainfestPath + 'bak');
//删除旧的备份文件
    if (sharewantBakModiFile.exists()) {
        sharewantBakModiFile.delete();
    }
    sharemyFile.renameTo(sharemainfestPath + 'bak');
//创建一个新的清单文件
    File sharemyNewFile = file(sharemainfestPath);
    if (!sharemyNewFile.exists()) {
        sharemyNewFile.createNewFile();
        sharemyNewFile.setWritable(true, false);
    }
// 插入activity定义
	
		String wxactivity = '''<activity android:name="com.nd.smartcan.appfactory.demo.wxapi.WXEntryActivity" android:exported="true"/>'''
    wxactivity = wxactivity.replaceFirst('com.nd.smartcan.appfactory.demo', sharepackageNameData)
    String flag = "</application>";
    int index = shareoldDataString.indexOf(flag);
    String newShareDataString = shareoldDataString.substring(0,index) + "\n"+ wxactivity + "\n"+ shareoldDataString.substring(index);
    sharemyNewFile.write(newShareDataString, 'utf-8');

    println "---------------------5 manifest加WXEntryActivity--------------------------------"	
	}
    
}

handleWxActivity()
          ]]>
        </groovy>
  <scenes>
    <scene name="android.permission.ACCESS_NETWORK_STATE" displayName="获取网络状态" describe="获取网络数据需要" isAsk="false" closeable="true" type="permission"/>
    <scene name="android.permission.ACCESS_WIFI_STATE" displayName="获取WIFI网络状态" describe="获取mac地址作为用户的备用唯一标识" isAsk="false" closeable="true" type="permission"/>
    <scene name="android.permission.INTERNET" displayName="网络权限" describe="获取网络数据需要" isAsk="false" closeable="true" type="permission"/>
    <scene name="android.permission.GET_TASKS" displayName="允许一个程序获取信息有关当前或最近运行的任务" describe="QQ、QQ空间所需权限" isAsk="false" closeable="true" type="permission"/>
    <scene name="android.permission.QUERY_ALL_PACKAGES" displayName="查询所有应用" describe="查询所有应用" isAsk="false" closeable="true" type="permission"/>
  </scenes>
</android>
  
<ios>
<class>SocialShareComponent</class>
<dependency>
<![CDATA[
  pod 'SocialShareComponent', '26.9.21'
  pod 'SocialShareSDK', '1.0.4'
]]>
</dependency>

<meta-datas>
  <meta-data xpath="//plist/dict" key="LSApplicationQueriesSchemes" type="array" file="/ComponentAppBase/Info.plist">
  <![CDATA[
<string>sinaweibohd</string> <string>sinaweibo</string> <string>weibosdk</string> <string>weibosdk2.5</string> <string>wechat</string> <string>weixin</string> <string>weixinULAPI</string> <string>mqq</string> <string>mqzone</string> <string>wtloginmqq2</string> <string>mqqopensdkapiV3</string> <string>mqqopensdkapiV2</string> <string>mqqwpa</string> <string>mqqOpensdkSSoLogin</string><string>mqqapi</string><string>mqqbrowser</string><string>mttbrowser</string>
<string>fbapi</string> <string>fb-messenger-share-api</string> <string>fbauth2</string> <string>fbshareextension</string> <string>line</string> <string>whatsapp</string>
]]>
  </meta-data>  
</meta-datas>
  
</ios>
   <build>
    <android>   
      <safe_whitelist>
        <activities>
          <activity name="com.nd.android.socialshare.wxapi.WXEntryActivity" describe="微信第三方分享" type="activity" owner="黄永鑫（102210）"/>
          <activity name="com.nd.android.socialshare.activity.TransferActivity" describe="用于网页启动app，不修改" type="activity" owner="黄永鑫（102210）"/>
          <activity name="com.tencent.tauth.AuthActivity" describe="QQ登录" type="activity" owner="黄永鑫（102210）"/>
          <activity name="com.sina.weibo.sdk.share.WbShareResultActivity" describe="新浪微博第三方分享" type="activity" owner="黄永鑫（102210）"/>
          <activity name="_applicationId_.wxapi.WXEntryActivity" describe="微信第三方分享" type="activity" owner="黄永鑫（102210）"/>
        </activities>
      </safe_whitelist>
    </android>
  </build>
</component><component namespace="com.nd.sdp.component" name="nd-gallery-pagerplugin" display="查看大图长按菜单" type="library">
	<pages>
	</pages>
	
	<properties>
	</properties>
	
	<events>
	</events>

	<handlers>
	</handlers>

	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
		</properties>
	</runtime>
    <android>
		<class/>
		<dependency>
          <![CDATA[
    		compile("com.nd.sdp.android.common.ui.gallery.plugin:sdplongclick:1.2.48.develop")
          ]]>
		 </dependency>
	</android>
</component><component namespace="com.nd.sdp.component" name="rbaccmp" display="RBAC控件" type="library">
	<pages>
	</pages>
	
	<properties>
      <property type="bool" name="enable" displayName="是否启用RBAC功能" value="false"/>
      <category name="接口降级策略">
        <property name="degrade_strategy_count" displayName="触发降级错误次数" type="string" value="1">
          <tip>
            获取resource/role出现超时或5xx错误达到该配置的错误数，则对接口进行降级。
          </tip>
        </property>
        <property name="degrade_strategy_duration" displayName="降级时长" type="string" value="300">
          <tip>
            降级时长，单位为秒，默认300秒。
          </tip>
        </property>
      </category>
	</properties>
	
	<events>
	</events>

	<handlers>
	</handlers>
  
  <runtime>
      <properties>
        <property type="bool" name="lazy_init_android" displayName="是否开启延迟初始化" value="false"/>
        <property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="false"/>
      </properties>
        
	  <handlers>
		<handler name="not-ios://rbacHandler" desc="商城延迟加载事件" receive_event="event_send_open_tab_activity"/>
      </handlers>
   </runtime>
  
    <android>    
      <class>com.nd.social.rbac.RBACComponent</class>
		<dependency>
			<![CDATA[
			    compile('com.nd.android.sdp.social:module_rbac:20.0.1.0.release') {
			        transitive = true
			        changing = true
					exclude group: 'com.nd.android.sdp.im.common.widget', module: 'emotion'
			    }
                compile('com.nd.android.sdp.social:module_rbacsdk:17.3.6.rbacsdk.release')
             ]]>
		</dependency>
    </android>  
  
  	<ios>
        <class>RbacComponent</class>
        <dependency>
            <![CDATA[
              pod 'RbacComponent', '1.0.52'
            ]]>
        </dependency>
    </ios>

</component><component namespace="com.nd.sdp.component.elsearch" name="ele-search" display="教育-辅助-搜索" type="function_library">
    <pages>
        <page name="search_test" display="搜索测试" toplevel="1" type="cmp" allow_guest="true"/>
        <page name="el_search" display="搜索页面" toplevel="1" type="cmp"/>
        <page name="config" display="搜索配置" toplevel="2" type="cmp"/>
        <page name="edu_x_search_simple" display="X学习搜索" toplevel="2" type="cmp" allow_guest="true"/>
        <page name="search_library" display="内容库搜索" toplevel="2" type="cmp" allow_guest="true"/>
    </pages>
    <properties>
        <property name="search_type" type="string" value="auxo-train,auxo-open-course,auxo-exam-center" displayName="搜索类型">
            <tip>搜索类型,目前仅支持所有类型(默认配置),以及只搜索公开课("auxo-open-course")配置</tip>
            <img src="http://wiki.sdp.nd/images/9/9b/Aa.jpg"/>
        </property>
        <property name="show_task" type="bool" value="false" displayName="列表是否以任务模式显示">
            <tip>任务模式</tip>
            <img src="http://wiki.sdp.nd/images/a/a4/Bb.jpg"/>
        </property>
        <property name="search_support" type="string" value="elearning_channel" displayName="支持的业务组件类别，主要分为ele和Vr语言学习">
            <tip>支持的业务组件类别，主要分为ele和Vr语言学习,取值有：vr-language、elearning、elearning_channel</tip>
        </property>
        <property name="course_cmp_domain" value="" type="string" displayName="课程组件cmp域名(请确保兼容已有课程组件cmp及参数)"/>
      	<property name="static_library_config_mode" value="true" type="bool" displayName="静态库搜索采用配置模式"/>
    </properties>
    <events/>
    <runtime>
        <properties>
            <property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="false"/>
            <property type="bool" name="lazy_init_ios" displayName="是否开启ios延迟初始化" value="false"/>
        </properties>
        <providers>
            <provider name="com.nd.sdp.component.elsearch.ele-search.library" filter="com.nd.sdp.component.elsearch.ele-search.library.filter" desc="获取内容库的搜索数据" iosClass="ELESLibraryDataProvider"/>
        </providers>
    </runtime>
    <handlers>
        <handler name="not-ios://edu_search_offline_config" desc="接收X学习静态搜索事件" receive_event="edu_search_offline_config"/>
         <handler name="not-ios://edu_search_offline_config_url" desc="接收X学习静态搜索事件" receive_event="edu_search_offline_config_url"/>
 
  
  </handlers>
    <android>
        <class>com.nd.hy.ele.android.search.EleSearchComponent</class>
        <dependency>
            <![CDATA[
                // 搜索组件
			    compile('com.nd.sdp.android:el-search:13.1.7-rc.18')
             ]]>
        </dependency>
        <scenes/>
    </android>
    <ios>
        <class>ElearningSearchComponent</class>
        <dependency>
            <![CDATA[
            pod 'elearning_search', '1.1.22-statis' 
             ]]>
        </dependency>
    </ios>
</component><component namespace="com.nd.sdp.component" name="im-orgtree-plugin" display="IM组织树控件">
  
	<pages>
	</pages>
  
  	<properties>
      
      <property type="bool" name="org_support_new" displayName="支持新组织" value="true">
            <dependency>
                <component namespace="com.nd.sdp.component" name="neworganizationcomponent" display="新组织树"/>
            </dependency>
        </property>  
       <property type="bool" name="org_support_old" displayName="支持旧组织（已废弃）" value="false" deprecated="">
         	<tip>仅供关闭旧组织使用，请打包新组织</tip>
            <dependency>
                <component namespace="com.nd.sdp.component" name="oldorganizationcomponent" display="旧组织树"/>
            </dependency>
        </property>
      
        <property type="bool" name="orgtree_tag_filter" displayName="支持标签" value="false"/>
      
        <property type="bool" name="orgtree_show_current_user_org" displayName="显示当前登录用户所在的组织" value="false"/>
      
      	<property type="bool" name="show_node_type" displayName="组织选择器显示组织类型的名称" value="false"/>
      
      	<property type="bool" name="show_join_type" displayName="组织选择器显示加入组织的方式" value="false"/>
      
      	<property type="bool" name="my_org_as_root" displayName="只显示当前登录用户所在的组织" value="false"/>
      
      	<property type="bool" name="show_orgs_under_org" displayName="递归展示组织" value="false"/>
      	
      	<property os="all" type="page" name="orgtree_search_clicked_page" displayName="搜索框点击跳转页" value=""/>
	</properties>
  
	
	<events>
	</events>

	<handlers>
	</handlers>
  
    <runtime>
      <properties>
        <property type="bool" name="lazy_init_android" displayName="是否开启延迟初始化" value="true"/>
      </properties>
    </runtime>    
  
    <android>
        <class>com.nd.sdp.uc.OrgTreeComponent</class>
        <dependency>
            <![CDATA[
                compile('com.nd.sdp.uc:orgtree_component:0.1.398.release') {     
                    transitive = true
                    changing = true
                }

                compile('com.nd.android.im:orgtree_adapter:0.1.398.release') {     
                    transitive = true
                    changing = true
                }

                compile('com.nd.android.im:userinfo_extend:0.1.398.release') {
                    transitive = true
                    changing = true
                }
				
				compile('com.nd.android.im.orgtree_adapter:orgtree_adapter_impl:0.1.398.release') {
                    transitive = true
                    changing = true
                }

                compile('com.nd.android.im:orgtree_ui:0.1.398.release') {
                    transitive = true
                    changing = true
                }
            ]]>
        </dependency>      
	</android>  
  
  <ios>
        <class>OrgTreeComponent</class>
        <dependency>
            <![CDATA[
                pod 'OrgTreeComponent', '1.0.28'
               ]]>
        </dependency>
       
    </ios>
</component><component namespace="com.nd.social3" name="orgs" display="组织服务">
	<pages>
	</pages>
  
  <properties>
        <property type="bool" name="sync_on_start" displayName="同步组织数据" value="true"/>
    	<property type="bool" name="support_tags_search" displayName="支持标签搜索(组织人数大于2000或者组织下节点数超过200，勿开)" value="false"/>
    </properties>
	
	<events>
	</events>

	<handlers>
	</handlers>
  
  <runtime>
    <properties>
      <property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="false"/>
      <property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="false"/>
    </properties>
  </runtime>
    <sdk>
        <js-sdk>
            <name>org-jssdk</name>
            <version>1.0</version>
            <ios>
            </ios>
            <android>
                <js-class>com.nd.social3.org.internal.js.OrgJsInjectorProvider</js-class>
            </android>
        </js-sdk>
    </sdk>
  <android>
        <class>com.nd.social3.org.internal.OrgComponent</class>
        <dependency>
            <![CDATA[
              compile "com.nd.social3:org-implement:0.8.5.2.orgsdk.release"
			  implementation "com.nd.ent:util:1.0.5.entutil"
              configurations.all {
                  exclude group: 'com.nd.social3', module: 'org-adapter'
                  resolutionStrategy {
                      force "com.nd.social3:org-implement:0.8.5.2.orgsdk.release"
                  }
              }
            ]]>
        </dependency>
    </android>
  
  <ios>
        <class>OrgComponent</class>
        <dependency>
            <![CDATA[
			    pod 'OrgSDK', '1.0.81'
			    pod 'OrgComponent', '1.0.18'
             ]]>
        </dependency>
    </ios>

</component><component namespace="com.nd.sdp.sensitivewordfilter" name="sensitivewordfilter" display="敏感词移动端SDK业务组件" type="library">
	<pages/>
	<properties/>
	<events/>
	<handlers/>
	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="false"/>
		</properties>
	</runtime>
   <android>
    	<class>com.nd.android.censorsdk.CensorComponent</class>
    	<dependency>
      		<![CDATA[
                compile('com.nd.sdp.android:censor-sdk:19.0.6.ad9bce5')
                compile('com.nd.android.sdp.social:module_commonResource:17.0.0.andriodx') {
				    exclude group: 'com.android.support'
                }
          ]]>
     	</dependency>
     	<scenes>
          <scene name="android.permission.INTERNET" displayName="网络权限" describe="" isAsk="false" closeable="true" type="permission"/>
          <scene name="android.permission.WRITE_EXTERNAL_STORAGE" displayName="修改或删除存储卡中的内容" describe="下载词库" isAsk="true" closeable="true" type="permission"/>
          <scene name="android.permission.READ_EXTERNAL_STORAGE" displayName="读取存储卡中的内容" describe="读取词库" isAsk="true" closeable="true" type="permission"/>
     	</scenes>
  	</android>
  	<ios>
		<class>SensitiveWordComponent</class>
		<dependency>
			<![CDATA[pod 'SensitiveWordFilterSDK', '1.0.53']]>
		</dependency>
	</ios>
</component><component namespace="com.nd.sdp.component" name="h5-social-biz" display="H5-Social业务组件">
	<pages>
	</pages>
	
	<properties>
	</properties>
	
	<events>
	</events>

	<handlers>
	</handlers>
    <h5>
      <version>12.9.32</version>
      <npm>"@sdp.nd/h5-social":"12.9.32"</npm>
    </h5>
    <widgets>
      <widget type="h5" name="pack" display="底部送花">
        <img src="http://cdncs.101.com/v0.1/download?dentryId=65e526dc-fd07-4029-9ab0-21402531ee4f&amp;session=084871ce-6f08-423e-9c79-10d33c46a289&amp;attachment=true&amp;serviceName=production_pbl_user"/>
      </widget>
      <widget type="h5" name="microblog" display="microblog"/>
      <widget type="h5" name="microblog-choice" display="精选微博（限群空间使用）"/>
      <widget type="h5" name="microblog-heartsign" display="群空间心签到"/>
      <widget type="h5" name="microblog-recent" display="最近微博">
        <img src="http://cdncs.101.com/v0.1/download?dentryId=44c558dc-c2f4-445d-8ad8-0527cbc1217b&amp;session=084871ce-6f08-423e-9c79-10d33c46a289&amp;attachment=true&amp;serviceName=production_pbl_user"/>
      </widget>
      <widget type="h5" name="microblog-others" display="他人微博">
        <img src="http://cdncs.101.com/v0.1/download?dentryId=ab514eb9-96d0-4f83-9987-aea1de37af93&amp;session=084871ce-6f08-423e-9c79-10d33c46a289&amp;attachment=true&amp;serviceName=production_pbl_user"/>
      </widget>
      <widget type="h5" name="activity" display="活动"/>
      <widget type="h5" name="news" display="新闻"/>
      <widget type="h5" name="forum" display="论坛">
        <img src="http://cdncs.101.com/v0.1/download?dentryId=85f439d2-6ff8-47e9-9dec-bb05066e9e5f&amp;session=084871ce-6f08-423e-9c79-10d33c46a289&amp;attachment=true&amp;serviceName=production_pbl_user"/>
      </widget>
    </widgets>
   	<runtime>
      <properties>
        <property type="bool" name="lazy_init_android" displayName="是否开启延迟初始化" value="true"/>
      </properties>
    </runtime>
</component><component namespace="com.nd.sdp.component" name="video-player-sdk" display="教育-视频控件SDK">
	<pages>
      <page type="cmp" name="test" display="测试" toplevel="1"/>
	</pages>
	
	<properties>
	</properties>
	
	<events>
	</events>

	<handlers>
	</handlers>

	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
			<property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
		</properties>
	</runtime>
  	<android>
		<class>com.nd.ele.android.exp.main.ExamPlayerComponent</class>
		<dependency>
			<![CDATA[
              compile('com.nd.sdp.ele.android.video:video:1.3.7-rc7') 
             ]]>
		</dependency>
	</android>
  <ios>
		<class>ELMediaSDKComponent</class>
		<dependency>
			 <![CDATA[
			pod 'ElearningVideoSDK', '1.0.159'
             ]]>
		</dependency>
	</ios>
</component><component namespace="com.nd.sdp.component" name="el-load-lib" display="教育-加载管理库" type="library">
	<pages>
      <page name="test" display="测试" toplevel="1" type="cmp"/>
	</pages>
	
	<properties>
	</properties>
	
	<events>
	</events>

	<handlers>
	</handlers>

	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
			<property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
		</properties>
	</runtime>
  
  	<android>
		<dependency>
			<![CDATA[
                // 状态库
			    compile 'com.nd.sdp.android:e-state-view:0.3.1-rc7'
                // 通用组件统一异常处理
                compile 'com.nd.sdp.android:ele_common_widget:0.3-rc8'
             ]]>
		</dependency>
	</android>
    <ios>
		<class> </class>
		<dependency>
			<![CDATA[
			pod 'elearn_loading_interaction', '1.0.17'
             ]]>
		</dependency>
	</ios>
</component><component namespace="com.nd.sdp.component" name="ui-universal-popup" display="通用弹窗控件" type="library">
	  <pages>
    </pages>
	
	<properties>
	</properties>
	
	<events>
	</events>

	<handlers>
	</handlers>

	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
		</properties>
	</runtime>
  
  	<android>
        <class>com.nd.module_popup.CommonPopupComponent</class>
        <dependency>
            <![CDATA[
                compile('com.nd.sdp.component:ui-universal-popup:0.2.6.9@aar') {
        			exclude group: 'android.support', module: 'android-support-v4'
        			exclude group: 'com.android.support', module: 'support-v4'
        			transitive = true
        			changing = true
				}
       	]]>
        </dependency>
    </android>
  
      <ios>
        <class>BirthdayWishesComponent</class>
        <dependency>
            <![CDATA[
                pod 'MUIUniversalPopup', '0.0.4'
               ]]>
        </dependency>
    </ios>
  
</component><component namespace="com.nd.sdp.android.org.server.adapter" name="orgserveradapter" display="新组织服务适配" type="library">
	<pages>
	</pages>
	
	<properties>
	</properties>
	
	<events>
	</events>

	<handlers>
	</handlers>

	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
			<property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
		</properties>
	</runtime>
  
    <android>
        <class>com.nd.sdp.cq.commonres.UserAdapterComponent</class>
        <dependency>
            <![CDATA[
                compile('com.nd.sdp.android:org.server.adapter:1.0.28.androidx')
                compile('com.nd.android.im:userinfo_extend:0.1.208.release')
             ]]>
        </dependency>
    </android>
</component><component namespace="com.nd.sdp.component" name="e101-exam" display="教育-测评">
	<pages>
	</pages>
	
	<properties>
      
         <property type="bool" name="elearning-exam-player" displayName="测评V3" value="true">
            <dependency>
                <component namespace="com.nd.sdp.component" name="elearning-exam-player"/>
            </dependency>
         </property>
      
         <property type="bool" name="barrierV2" displayName="闯关V2" value="true">
            <dependency>
                <component namespace="com.nd.sdp.component" name="elearning-barrier"/>
            </dependency>
         </property>
      
       <property type="bool" name="e101-mark" displayName="人工批改" value="false">
            <dependency>
                <component namespace="com.nd.sdp.component" name="e101-mark"/>
            </dependency>
         </property>

      

      
	</properties>
	
	<events>
	</events>

	<handlers>
	</handlers>

	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
			<property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
		</properties>
	</runtime>
</component><component namespace="com.nd.sdp.component" name="e101-assist" display="教育-辅助">
	<pages>
	</pages>
	
	<properties>
      
         <property type="bool" name="ele-qa" displayName="问答" value="true">
            <dependency>
                 <component namespace="com.nd.sdp.component" name="ele-qa"/>
            </dependency>
        </property>
      
        <property type="bool" name="e101-collection" displayName="收藏" value="true">
            <dependency>
                 <component namespace="com.nd.sdp.component" name="e101-collection"/>
            </dependency>
         </property>
      
         <property type="bool" name="elearning-share" displayName="分享" value="true">
             <dependency>
                 <component namespace="com.nd.sdp.component" name="elearning-share"/>
             </dependency>
          </property>
        
       <property type="bool" name="ele-note" displayName="笔记" value="true">
        <dependency>
            <component namespace="com.nd.sdp.component" name="ele-note"/>
       </dependency>
         </property>
         
       <property type="bool" name="ele-search" displayName="搜索" value="true">
            <dependency>
                <component namespace="com.nd.sdp.component.elsearch" name="ele-search"/>
           </dependency>
        </property>
      
        <property type="bool" name="ele-certificate" displayName="证书" value="true">
            <dependency>
                 <component namespace="com.nd.sdp.component" name="ele-certificate"/>
            </dependency>
        </property>  
      
        <property type="bool" name="feedback-comp" displayName="用户反馈" value="true">
            <dependency>
                 <component namespace="com.nd.sdp.component" name="elearning-feedback-comp"/>
            </dependency>
        </property>  
      
        <property type="bool" name="elearning-act" displayName="活动（旧）" value="false">
            <dependency>
                 <component namespace="com.nd.sdp.component" name="elearning-act"/>
            </dependency>
        </property> 
         
           
       <property type="bool" name="ele-students-report" displayName="学习统计报告" value="false">
            <dependency>
                 <component namespace="com.nd.sdp.component" name="ele-students-report"/>
            </dependency>
        </property>  
     
         <property type="bool" name="ele-create-community" displayName="学习社区" value="false">
            <dependency>
                 <component namespace="com.nd.sdp.component" name="ele-create-community"/>
            </dependency>
        </property> 
      
        <property type="bool" name="ele-rank" displayName="RN排行榜" value="true">
            <dependency>
                 <component namespace="com.nd.sdp.component" name="ele-rank"/>
            </dependency>
        </property>  
      
         <property type="bool" name="ele-discovery" displayName="发现" value="false">
            <dependency>
                 <component namespace="com.nd.sdp.component" name="ele-discovery"/>
            </dependency>
        </property>   
      
         <property type="bool" name="ele-subscription" displayName="订阅" value="true">
            <dependency>
                 <component namespace="com.nd.sdp.component" name="ele-subscription"/>
            </dependency>
        </property>  
      
        <property type="bool" name="e101-subject-analysis" displayName="学科学情分析" value="false">
            <dependency>
                 <component namespace="com.nd.sdp.component" name="e101-subject-analysis"/>
            </dependency>
        </property> 
      
         <property type="bool" name="e101-stu-analysis" displayName="学生学情分析" value="false">
            <dependency>
                 <component namespace="com.nd.sdp.component" name="e101-stu-analysis"/>
            </dependency>
        </property> 
      
        <property type="bool" name="ele-classroom-assessment" displayName="课堂评价" value="false">
            <dependency>
                 <component namespace="com.nd.sdp.component" name="ele-classroom-assessment"/>
            </dependency>
        </property> 
      
        <property type="bool" name="elearning-appraise-pro" displayName="评价（新）" value="true">
            <dependency>
                 <component namespace="com.nd.sdp.component" name="elearning-appraise-pro"/>
            </dependency>
        </property> 
      
      	<property type="bool" name="el-smartlink" displayName="教育-二维码" value="true">
            <dependency>
                 <component namespace="com.nd.sdp.component" name="el-smartlink"/>
            </dependency>
         </property> 
      
        <property type="bool" name="wjtuc" displayName="网教通登录" value="false">
             <tip>用户登录组件的新版界面与旧版界面必须都关闭，才能开启网教通登录，否则会冲突。</tip>
             <dependency>
                <component namespace="com.nd.sdp.component" name="wjt-uc-biz" display="网教通登录"/>
             </dependency>
        </property>
      

      
	</properties>
	
	<events>
	</events>

	<handlers>
	</handlers>

  
	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
			<property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
		</properties>
	</runtime>
</component><component namespace="com.nd.sdp.component" name="e101-extend" display="教育-扩展">
	<pages>
	</pages>
	
	<properties>
      
        <property type="bool" name="elearn-enroll" displayName="报名组件" value="true">
            <dependency>
                 <component namespace="com.nd.sdp.component" name="elearn-enroll"/>
            </dependency>
        </property>
      
        <property type="bool" name="ele-pay-component" displayName="付费组件" value="true">
            <dependency>
                 <component namespace="com.nd.sdp.component" name="ele-pay-component"/>
            </dependency>
        </property>
      
        <property type="bool" name="custom-form" displayName="自定义表单" value="true">
            <dependency>
                 <component namespace="com.nd.sdp.component" name="custom-form"/>
            </dependency>
        </property>
      
        <property type="bool" name="elearning-h5" displayName="H5(线下签到)" value="true">
            <dependency>
                 <component namespace="com.nd.sdp.component" name="elearning-h5"/>
            </dependency>
        </property>
    
        <property type="bool" name="ele-assist" displayName="网教通辅助" value="false">
            <dependency>
                 <component namespace="com.nd.sdp.component" name="ele-assist"/>
            </dependency>
        </property>
      
        <property type="bool" name="e101-reward" displayName="学习打赏" value="false">
            <dependency>
                 <component namespace="com.nd.sdp.component" name="e101-reward"/>
            </dependency>
        </property>
      
        <property type="bool" name="e101-invitation" displayName="邀请函" value="false">
            <dependency>
                 <component namespace="com.nd.sdp.component" name="e101-invitation"/>
            </dependency>
        </property>     
        <property type="bool" name="ele-res-distribute" displayName="资源分发" value="false">
            <dependency>
                 <component namespace="com.nd.sdp.component" name="ele-res-distribute"/>
            </dependency>
        </property>  
      
        <property type="bool" name="e101-new-resdist" displayName="资源分发V2" value="false">
            <dependency>
                 <component namespace="com.nd.sdp.component" name="e101-new-resdist"/>
            </dependency>
        </property>
      
        <property type="bool" name="el-resmall" displayName="资源超市" value="false">
            <dependency>
                 <component namespace="com.nd.sdp.component" name="el-resmall"/>
            </dependency>
        </property> 
      
        <property type="bool" name="e101-new-resmall" displayName="资源超市V2" value="false">
            <dependency>
                 <component namespace="com.nd.sdp.component" name="e101-new-resmall"/>
            </dependency>
        </property> 
      
         <property type="bool" name="e101-promotion" displayName="推广分成" value="false">
            <dependency>
                 <component namespace="com.nd.sdp.component" name="e101-promotion"/>
            </dependency>
        </property>
      
        <property type="bool" name="app-market-biz" displayName="应用超市" value="true">
            <dependency>
                 <component namespace="com.nd.sdp.component" name="app-market-biz"/>
            </dependency>
        </property>
      
        <property type="bool" name="ele-classmember" displayName="班级管理" value="false">
            <dependency>
                 <component namespace="com.nd.sdp.component" name="ele-classmember"/>
            </dependency>
        </property>  
      
        <property type="bool" name="local-data-managemen" displayName="本地数据管理" value="true">
            <dependency>
                 <component namespace="com.nd.sdp.component" name="local-data-management"/>
            </dependency>
        </property> 
      
        <property type="bool" name="lecture-management2" displayName="讲师" value="true">
            <dependency>
                 <component namespace="com.nd.sdp.component" name="lecture-management2"/>
            </dependency>
        </property>
      
	</properties>
	
	<events>
	</events>

	<handlers>
	</handlers>
 
  
	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
			<property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
		</properties>
	</runtime>
</component><component namespace="com.nd.sdp.component" name="e101-player" display="教育-播放">
	<pages>
	</pages>
	
	<properties>
        <property type="bool" name="video" displayName="音视频播放器" value="true">
            <dependency>
                 <component namespace="com.nd.hy.android.video" name="video"/>
            </dependency>
        </property>
      
        <property type="bool" name="reader" displayName="文档阅读器" value="true">
            <dependency>
                 <component namespace="com.nd.hy.android" name="reader"/>
            </dependency>
        </property>
      
        <property type="bool" name="ele-fullscreen-video" displayName="旧版课程V5全屏播放器" value="true">
            <dependency>
                 <component namespace="com.nd.sdp.component" name="ele-fullscreen-video"/>
            </dependency>
        </property>
      
        <property type="bool" name="cect-video-active" displayName="v5视频活动" value="true">
            <dependency>
                 <component namespace="com.nd.sdp.component" name="cect-video-active"/>
            </dependency>
        </property>
      
        <property type="bool" name="cect-document-active" displayName="v5文档活动" value="true">
            <dependency>
                 <component namespace="com.nd.sdp.component" name="cect-document-active"/>
            </dependency>
        </property>
      
      
        <property type="bool" name="vr360" displayName="Android VR 播放器" value="false">
            <dependency>
                 <component namespace="com.nd.sdp.component.el" name="vr360"/>
            </dependency>
        </property>
      
      
      
      
	</properties>
	
	<events>
	</events>

	<handlers>
	</handlers>

  
	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
			<property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
		</properties>
	</runtime>
</component><component namespace="com.nd.sdp.component" name="e101-teach" display="教育-教学">
	<pages>
	</pages>
	
	<properties>
      
        <property type="bool" name="train" displayName="培训认证" value="true">
        	<dependency>
           	 <component namespace="com.nd.elearning" name="train"/>
       		</dependency>
     	</property>
      
        <property type="bool" name="elearning_courseV2" displayName="课程组件V2" value="true">
        	<dependency>
           	 <component namespace="com.nd.sdp.component" name="elearning-course"/>
       		</dependency>
     	</property>
      
        <property type="bool" name="elearning-businesscourse" displayName="课程组件V3" value="true">
        	<dependency>
           	 <component namespace="com.nd.sdp.component" name="elearning-businesscourse"/>
       		</dependency>
     	</property>
      
        <property type="bool" name="elearning_courseV5" displayName="课程组件V5" value="true">
        	<dependency>
           	 <component namespace="com.nd.sdp.component" name="cect-course-v5"/>
       		</dependency>
     	</property>
      
        <property type="bool" name="e-exercise-course" displayName="练习课" value="true">
        	<dependency>
           	 <component namespace="com.nd.sdp.component" name="e-exercise-course"/>
       		</dependency>
     	</property>
      
        <property type="bool" name="resources-activity" displayName="资源活动" value="true">
        	<dependency>
           	 <component namespace="com.nd.sdp.component" name="ele-resources-activity"/>
       		</dependency>
     	</property>
      
        <property type="bool" name="ele-fine" displayName="精品推荐_old" value="false">
        	<dependency>
           	 <component namespace="com.nd.sdp.component.fine" name="ele-fine"/>
       		</dependency>
     	</property>
      
        <property type="bool" name="ele-specialty-course" displayName="培养计划" value="false">
        	<dependency>
           	 <component namespace="com.nd.sdp.component" name="ele-specialty-course"/>
       		</dependency>
     	</property>
      
        <property type="bool" name="recommend-course" displayName="推荐课" value="true">
        	<dependency>
           	 <component namespace="com.nd.sdp.component" name="e-recommend-course"/>
       		</dependency>
     	</property>
      
               <property type="bool" name="e101-job-standard-exam" displayName="达标作业" value="false">
            <dependency>
                <component namespace="com.nd.sdp.component" name="e101-job-standard-exam"/>
            </dependency>
         </property>
      
      
	</properties>
	
	<events>
	</events>

	<handlers>
	</handlers>

  
	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
			<property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
		</properties>
	</runtime>
</component><component namespace="com.nd.social" name="mypagesdk" display="我页面sdk" type="library">
	<pages>
	</pages>
	
	<properties>
	</properties>
	
	<events>
	</events>

	<handlers>
	</handlers>

	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
			<property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
		</properties>
	</runtime>
    <android>
             <class>com.nd.android.pagesdk.MypageSdkComponent</class>
             <dependency>
              <![CDATA[
				    compile('com.nd.android.sdp.social:module_pagesdk:13.0.0@aar') {
                        transitive = true
                        changing = true
                    }
             ]]>
             </dependency>
         </android>
</component><component namespace="com.nd.sdp.component" name="demo-rn" display="RN公共控件">
	
	<properties>
	</properties>
	
	<events>
	</events>

	<handlers>
	</handlers>
  
    <runtime>
      <properties>
        <property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
      </properties>
    </runtime>
  
  	<sdk> 
      <js-sdk> 
        <name>rn-common</name>  
        <version>1.1</version>  
        <ios>  
          <js-class>RnCommonJsBridgeProvider</js-class>
        </ios>
        <android> 
          <js-class>com.nd.sdp.android.rncommon.RnCommonJsSdkProvider</js-class>
          <react-class>com.nd.sdp.android.rncommon.RnCommonProvider</react-class> 
        </android> 
      </js-sdk> 
    </sdk>
  
    <android>
      <class>com.nd.sdp.android.rncommon.demo.RNCommonComponent</class>
      <dependency>
        <![CDATA[
			compile 'com.nd.sdp.android:rn-common-native:2.1.0'
		]]>
      </dependency>
    </android>
    <ios>
      <class>RNCommonComponent</class>
      <dependency>
		<![CDATA[
			pod 'rn_common_native', '0.0.12'
            pod 'APFWebView', '0.0.3'
        ]]>
	  </dependency>
    </ios>
</component><component namespace="com.nd.social.component" name="score" display="应用市场评分组件">
	<pages>
         <page type="cmp" name="gotoScore" display="去评分" allow_guest="true"/>
	</pages>
	
	<properties>
      <property type="enum" name="jump_type" displayName="跳转到详情/评分" value="comment">
        <options multi="false">
          <option value="detail">跳转到详情界面</option>
          <option value="comment">跳转到评分界面</option>
        </options>
    </property>
    <property type="string" name="app_id" displayName="AppStore的应用ID">
    </property>
  </properties>
	
	<events>
	</events>

	<handlers>
	</handlers>

	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
            <property type="bool" name="lazy_init_ios" displayName="是否开启IOS延迟初始化" value="true"/>
		</properties>
	</runtime>
  <android>
		<class>com.nd.sdp.android.score.ScoreComponent</class>
		<dependency>
			<![CDATA[
			    compile('com.nd.sdp.android:score-component:16.9.2.f4f95b5@aar') {
			        transitive = true
			        changing = true
                    exclude group: 'com.nd.android.sdp.im.common.widget', module: 'emotion'
			    }    
             ]]>
		</dependency>
    </android>
  	<ios>
		<class>ScoreComponent</class>
		<dependency>
			<![CDATA[
            pod 'ScoreComponent', '1.0.0'
            ]]>
		</dependency>
	</ios>
</component><component namespace="com.nd.sdp" name="uc_component" display="用户登录">
  <runtime>
    <properties>
      <property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="false"/>
      <property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="false"/>
    </properties>
    <activity_screen_orientations displayName="要替换界面方向白名单,要有申明才能替换，不支持新增加">
            <activity_screen_orientation value="com.nd.sdp.nduc.base.container.NdUcContainerActivity"/>
    </activity_screen_orientations>
  </runtime>
    <pages>
        <page type="cmp" name="login" display="登录" toplevel="2" android_class="com.nd.sdp.uc.ui.UcLoginActivity" allow_guest="true">
            <properties>
                <property type="string" name="user_name" displayName="用户名" value="" oldProperty="user_name" deprecated=""/>
                <property type="string" name="password" displayName="密码" value="" oldProperty="password" deprecated=""/>
                <property type="bool" name="auto_login" desc_true="开启" desc_false="关闭" displayName="自动登录" value="false" oldProperty="auto_login" deprecated=""/>
                <property type="string" name="account_hint" displayName="登录名提示文字" value="" oldProperty="account_hint" i18n="true">
                    <tip>登录名提示文字</tip>
                    <img src="http://cdncs.101.com/v0.1/static/app_portal/component/uc/login_hint.jpg"/>
                </property>
                <property type="string" name="psw_hint" displayName="密码提示文字" value="" oldProperty="psw_hint" i18n="true">
                    <tip>密码提示文字</tip>
                    <img src="http://cdncs.101.com/v0.1/static/app_portal/component/uc/password_hint.jpg"/>
                </property>
                <property type="bool" name="open_forget_password" displayName="忘记密码" oldProperty="open_forget_password">
                    <tip>是否开启忘记密码功能</tip>
                    <img src="http://cdncs.101.com/v0.1/static/app_portal/component/uc/password2.jpg"/>
                    <img src="http://cdncs.101.com/v0.1/static/app_portal/component/uc/password.jpg"/>
                </property>
                <property type="int" name="password_level" displayName="密码强度等级(数字越大，密码强度越高)" value="0">
                    <tip>0表示6位单字符，1表示8位双字符，2表示8位三字符</tip>
                </property>
                <property type="bool" name="open_register_account" displayName="注册功能" oldProperty="open_register_account">
                    <tip>是否开启注册帐号功能</tip>
                    <img src="http://cdncs.101.com/v0.1/static/app_portal/component/uc/register2.jpg"/>
                    <img src="http://cdncs.101.com/v0.1/static/app_portal/component/uc/register.jpg"/>
                </property>
                <property type="bool" name="open_register_account_by_email" displayName="邮箱相关功能" desc_true="开启" desc_false="关闭" value="false">
                    <tip>是否开启邮箱注册帐号及找回密码功能</tip>
                </property>
                <property type="bool" name="open_need_complete_userinfo" displayName="完善用户信息" oldProperty="open_need_complete_userinfo" deprecated="">
                    <tip>是否开启完善用户信息入口</tip>
                    <img src="http://cdncs.101.com/v0.1/static/app_portal/component/uc/complete.jpg"/>
                </property>
                <property type="bool" name="open_sms_login" desc_true="开启" desc_false="关闭" displayName="是否开启短信登录" value=""/>
                <property type="bool" name="open_third_login" desc_true="开启" desc_false="关闭" displayName="是否开启第三方登录" value="" oldProperty="open_third_login"/>
                <property type="bool" name="open_third_login_text" desc_true="开启" desc_false="关闭" displayName="是否开启第三方登录文字提示" value="" oldProperty="open_third_login_text"/>
                <property type="bool" name="open_third_bind" desc_true="开启" desc_false="关闭" displayName="是否开启第三方绑定（需要先开启第三方登录）" value="false"/>
                <property name="third_login_bind_mobile" desc_false="关闭" desc_true="开启" displayName="第三方登录绑定手机" type="bool"/>
                <property name="third_login_bind_mobile_can_ignore" desc_false="否" desc_true="是" displayName="第三方登录绑定手机允许跳过" type="bool"/>
                <property name="redirect_to_third_login" displayName="重定向到第三方登录" type="string">
                    <tip>重定向到第三方登录，填写的第三方平台名（区分大小写）正确且开启时，进行登录页会自动打开该第三方登录。
                        目前支持：qq weixin sinawb nd99
                        facebook twitter google UNT
                        LINE DROPBOX EBOOK
                    </tip>
                </property>
                <property type="page" name="on_reset_password_button_click" os="all" displayName="点击忘记密码按钮跳转" oldProperty="on_reset_password_button_click">
                    <tip>允许配置忘记密码页面，如果不配置则默认跳转组件内部的重置密码页面</tip>
                </property>
                <property type="page" name="on_account_register_button_click" os="all" displayName="点击注册帐号按钮跳转" oldProperty="on_account_register_button_click">
                    <tip>允许配置注册帐号页面，如果不配置则默认跳转到组件内部的注册帐号面</tip>
                </property>
                <property type="bool" name="show_password_switch" desc_true="开启" desc_false="关闭" displayName="登录页显示明暗文切换按钮" value="false" oldProperty="show_password_switch"/>

                <property type="string" name="customer_service_phone" displayName="客服电话,为空则不显示" value="" oldProperty="customer_service_phone"/>
                <property type="page" name="login_success_page" os="all" displayName="登录成功后跳转页面" oldProperty="login_success_page"/>
                <property type="image" name="logo" displayName="引导图标" value="" senior="true" template="true" oldProperty="logo">
                    <tip>图标要求png格式，大小32*32</tip>
                    <img src="http://cdncs.101.com/v0.1/static/app_portal/component/uc/guide.jpg"/>
                </property>
                <property type="bool" name="uc_is_landscape" desc_true="开启" desc_false="关闭" displayName="横屏显示，默认为竖屏" value=""/>
                <property type="string" name="take_over_login_url_android" displayName="接管登录接口地址（Android）" value=""/>
                <property type="string" name="take_over_app_key_android" displayName="接管登录app_key（Android）" value=""/>
                <property type="string" name="take_over_app_secret_android" displayName="接管登录app_secret（Android）" value=""/>
                <property type="string" name="take_over_login_url_ios" displayName="接管登录接口地址（iOS）" value=""/>
                <property type="string" name="take_over_app_key_ios" displayName="接管登录app_key（iOS）" value=""/>
                <property type="string" name="take_over_app_secret_ios" displayName="接管登录app_secret（iOS）" value=""/>
                <property type="page" name="login_uri" os="all" displayName="接管登录页面">
                    <tip>允许配置登录页面，如果不配置则默认跳转到组件内部的登录页面</tip>
                </property>
                <property type="bool" name="open_guide_login" desc_true="开启" desc_false="关闭" displayName="是否开启引导登录" value="false"/>
                <property type="string" name="email_suffix_list" os="all" displayName="邮箱后缀列表" value="@qq.com,@163.com,@126.com,@sina.com,@139.com,@sohu.com,@263.net,@vip.sina.com,@vip.163.com,@21cn.com,@tom.com,@foxmail.com,@189.cn,@yeah.net,@outlook.com,@yahoo.com,@hotmail.com,@gmail.com,@gmx.com,@aol.com,@zoho.com,@lycos.com,@inbox.com,@hushmail.com">
                    <tip>
                        邮箱后缀列表，用于邮箱自动补齐。以","分隔
                    </tip>
                </property>
                <property type="page" name="register_success_page" os="all" displayName="注册成功后跳转页面">
                    <tip>
                        注册成功后跳转页面
                    </tip>
                </property>
                <property type="page" name="agreement_success_page" os="all" displayName="用户协议同意后跳转页面">
                    <tip>
                       用户协议同意后跳转页面
                    </tip>
                </property>
                <property type="bool" name="open_sms_login" desc_true="开启" desc_false="关闭" displayName="是否开启短信登录" value=""/>
                <property type="bool" name="open_change_user" desc_true="开启" desc_false="关闭" displayName="登录后有多个组织帐号弹出组织选择界面（只在新认证有效）" value=""/>
                <property name="bind_mobile_prompt" desc_false="关闭" desc_true="开启" displayName="绑定手机提示" type="bool"/>
                <property name="bind_mobile_prompt_interval" displayName="绑定手机提示间隔（天） " type="int"/>
                <property type="bool" name="show_wechat_jayme_migration" desc_true="开启" desc_false="关闭" displayName="是否开启微信迁移" value="false" oldProperty="show_user_agreement">
                    <tip>只给JayMe使用，其他应用配置请勿开启</tip>
                </property>
                <property type="bool" name="open_user_filter" desc_true="开启" desc_false="关闭" displayName="是否开启用户筛选" value="false">
                    <tip>是否开启用户筛选</tip>
                </property>
            </properties>
        </page>
      <page type="cmp" name="logout" display="登出（无界面）" toplevel="0" allow_guest="true"/>
      <page type="cmp" name="register" display="注册界面" toplevel="2" allow_guest="true"/>
      <page type="cmp" name="third_login_success" display="第三方登录成功" toplevel="2" allow_guest="true"/>
      <page type="cmp" name="setting" display="设置(andriod,只用于测试)" toplevel="1"/>  
      <page type="cmp" name="bind_mobile" display="绑定手机" toplevel="1" allow_guest="true"/>
      <page type="cmp" name="setup_password" display="设置密码" toplevel="2" allow_guest="true"/>
      <page type="cmp" name="user_agreement" display="用户协议" toplevel="2" allow_guest="true"/>
    </pages>
    <properties>
      <property type="string" name="org" displayName="组织名" value="nd" os="all"/>
      <property type="string" name="v_org" displayName="虚拟组织名" value=""/>
      <property type="bool" name="open_choose_identity" displayName="启用身份选择，默认不启用（启用后，如果用户节点不为空，会弹出身份选择界面）" value=""/>        
      <property type="int" name="choose_identity_org_name_level" displayName="身份选择-组织名称显示层级(数字越大，显示层级越少。0表示显示全部层级)" value="0"/>
      <property type="string" name="uc_app_group_id" displayName="给 UC 用的 App Group ID（唯一）" value="" iOS_URL_Types="2"/>
      <property type="bool" name="open_guest_mode" desc_true="开启" desc_false="关闭" displayName="启用游客模式，允许未登录直接进入主页面" value="false"/>
      <property type="string" name="org_node_id" displayName="组织节点ID" value="" os="all">
           <tip>用户注册到的父节点ID，必须是配置组织内的。包括手机注册、邮件注册和第三方登录</tip>
      </property>
      <property type="bool" name="use_orgname_in_vorg_login" desc_true="开启" desc_false="关闭" displayName="是否在虚拟组织登录时传入组织名" value="false"/>
      <property type="bool" name="use_sdp_token" desc_true="开启" desc_false="关闭" displayName="是否使用带sdp的签名算法" value="false"/>
      <property type="bool" name="use_default_search_sort" desc_true="开启" desc_false="关闭" displayName="是否使用默认搜索策略" value="false"/>
      <property type="bool" name="open_login_device_manage" desc_true="开启" desc_false="关闭" displayName="是否开启登录设备管理" value="">
      </property>
      <property type="bool" name="open_login_records" desc_true="开启" desc_false="关闭" displayName="登录记录" value="">
      </property>
      <category name="界面及流程(新版界面需配置基础属性-&gt;UC版本为1.1)">
            <property type="bool" name="old_uc" displayName="旧版界面" value="true">
                <tip>旧版界面，与新版界面只能选一个。只支持UC0.93</tip>
            	<dependency>
                	<component namespace="com.nd.sdp.component" name="adaptercomponent" display="用户登录适配组件"/>
            	</dependency>
        	</property>
        	<property type="bool" name="nduc" displayName="新版界面" value="false">
                 <tip>新版界面，与旧版界面只能选一个。只支持UC1.1</tip>
            	<dependency>
                	<component namespace="com.nd.sdp.component" name="nduccomponent" display="用户登录1.1组件"/>
            	</dependency>
        	</property>
      </category>
      <property type="bool" name="uc-avatar-edit" displayName="开启修改头像" value="true">
           <tip>UC修改头像控件</tip>
           <dependency>
               <component namespace="com.nd.sdp.component" name="uc-avatar-edit" display="UC修改头像控件"/>
           </dependency>
      </property>
  </properties>

    <events>
    </events>
    
    <handlers>
    </handlers>
	<sdk>
        <js-sdk>
            <name>uc-jssdk</name>
            <version>1.1</version>
            <ios>
            </ios>
            <android>
                <js-class>com.nd.sdp.uc.js.UcJsInjectorProvider</js-class>
            </android>
        </js-sdk>
    </sdk>
    <android>
        <network-security-config>
            <debug-overrides>
                <trust-anchors>
                    <certificates src="system"/>
                    <certificates src="user"/>
                </trust-anchors>
            </debug-overrides>
        </network-security-config>
        <class>com.nd.sdp.uc.UcComponent</class>
        <dependency>
          	<![CDATA[
			def ucComponentVersion = "0.8.8.7.uccom.release"
			def ndUcSdkVersion = "0.1.5.0.nducsdk.release"
			def ucSdkVersion = "1.3.1.9.ucsdk.release"

			implementation "com.nd.sdp:uc_component:${ucComponentVersion}"
			implementation "com.nd.sdp.uc:nducsdk_implenment:${ndUcSdkVersion}"
			implementation "com.nd.sdp.uc:nducsdk:${ndUcSdkVersion}"
			implementation "com.nd.sdp.uc:nduc_base:${ndUcSdkVersion}"
			
            implementation "com.nd.android.smartcan:smartcan-accountclient-aar:${ucSdkVersion}"
            implementation "com.nd.android.smartcan:virtualorgsdk:0.0.6.8.vorgsdk.release"
			
            implementation "com.nd.uc:auth2:1.0.0.2.ucauth2sdk.release"
            implementation "com.nd.uc:auth2_password_impl:1.0.0.2.ucauth2sdk.release"
            implementation "com.nd.uc:auth2_device_impl:1.0.0.2.ucauth2sdk.release"
			implementation "com.nd.uc:uc-sdk-adapter:0.0.0.7.ucsdkadapter.release"
			implementation "com.nd.sdp.android:ucx-sdk:0.0.0.9.ucxsdk.release"
            implementation "com.nd.uc:thirdlogin:1.0.1.8.release"
            implementation "com.nd.sdp.android.common.ui:uc-user-textview:0.0.1.2.release"
            configurations.all {
                  resolutionStrategy {
                      force "com.nd.sdp:uc_component:${ucComponentVersion}"
					  force "com.nd.sdp.uc:nducsdk_implenment:${ndUcSdkVersion}"
				      force "com.nd.sdp.uc:nducsdk:${ndUcSdkVersion}"
				      force "com.nd.sdp.uc:nduc_base:${ndUcSdkVersion}"
					  force "com.nd.android.smartcan:smartcan-accountclient-aar:${ucSdkVersion}"
					  force "com.nd.android.smartcan:virtualorgsdk:0.0.6.7.vorgsdk.release"
                      force "com.nd.uc:auth2:1.0.0.2.ucauth2sdk.release"
                      force "com.nd.uc:auth2_password_impl:1.0.0.2.ucauth2sdk.release"
                      force "com.nd.uc:auth2_device_impl:1.0.0.2.ucauth2sdk.release"
				      force "com.nd.sdp.android:ucx-sdk:0.0.0.9.ucxsdk.release"
                      force "com.nd.uc:thirdlogin:1.0.1.8.release"
                      force "com.nd.sdp.android.common.ui:uc-user-textview:0.0.1.2.release"
                  }
              }
            ]]>
        </dependency>      
        <groovy>
          <![CDATA[
				android {
                  dataBinding {
                      enabled true
                  }
			}
          ]]>
	    </groovy>
    </android>

    <ios>
        <class>UCComponent</class>

        <dependency>
            <![CDATA[
pod 'UCComponent', '0.2.299'
pod 'UCSDK','0.10.247'
pod 'VirtualOrgSDK','1.0.50'
pod 'UCExtend', '0.2.81'
pod 'UCThirdPartySDK','0.0.17'
pod 'UCAuth2SDK','0.0.12'
pod 'UCCoreSDK', '1.0.173'
             ]]>
        </dependency>

    </ios>
</component><component namespace="com.nd.sdp.component" name="appfontcomponent" display="字体大小设置">
  <sdk>
      <js-sdk>
          <name>imAppSettingFontSize</name>  <!-- 必须 -->
          <version>1.0</version>  <!-- 必须 -->
          <android>
              <js-class>com.nd.appfont.component.im.js_module.GetCurFontInfosProvider</js-class> <!-- 可选 -->
          </android>
      </js-sdk>
      <android-plugin>
          <version>1.1</version>
      </android-plugin>
  </sdk>  
  
	<pages>
	</pages>
	<routes>
      <route source="cmp://com.nd.social.im/fontsize_setting" destination="cmp://com.nd.sdp.component.appfontcomponent/fontsize_setting"/>
    </routes>
	<properties>
	</properties>
	
	<events>
	</events>

	<handlers>
	</handlers>

	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
			<property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
		</properties>
	</runtime>
  
    <runtime>
        <providers>
            <provider name="com.nd.sdp.component.appfontcomponent.ComponentLaunched" filter="com.nd.sdp.component.appfontcomponent.ComponentLaunched" desc=""/>
        </providers>
    </runtime>
  
 	<android>
      <class>com.nd.appfont.component.FontSizeComponent</class>
      <dependency>
            <![CDATA[
              compile('com.nd.sdp.android:im-app-font:1.2.17.develop') {     
    				exclude group: 'com.android.support'
    				transitive = true
    				changing = true
			  }
            ]]>
      </dependency>
    </android>
  
    <ios>
		<class>MUPAppFontComponent</class>
		<dependency>
            <![CDATA[
            pod 'MUPAppFontComponent', '0.0.11'
            pod 'MUPAppFontSDK', '0.0.7'
              ]]>
		</dependency>
	</ios>
  
</component><component namespace="com.nd.sdp.component" name="monet-glide" display="公共图片加载库">
	<pages>
	</pages>
	
	<properties>
	</properties>
	
	<events>
	</events>

	<handlers>
	</handlers>

	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
		</properties>
	</runtime>
  	<android>
		<dependency>
			<![CDATA[
			    compile 'com.nd.android.monet:load-wrapper:0.2.0-rc01'
				compile 'com.nd.android.monet:ext-glide:0.2.0-rc01'
             ]]>
		</dependency>
	</android>
</component><component namespace="com.nd.sdp.component" name="ele-data-collection" display="教育-辅助-数据采集">
	<pages>
	</pages>
	
	<properties>
      <property type="enum" name="data_collect_platform" value="1" displayName="上报平台：">
                    <options multi="false">
                    <option value="1">云图</option>
                    <option value="1">云图</option>
                 
                    </options>
                </property>
	</properties>
	
	<events>
	</events>

	<handlers>
      	<handler name="not-ios://receiveEvent" desc="数据采集打点事件" receive_event="ele_data_collect_event"/>  
	</handlers>

	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
			<property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
		</properties>
	</runtime>
  <android>
		<class>com.nd.hy.android.sdp.data.collect.sdk.EleDataCollectComponent</class>
		<dependency>
			<![CDATA[
			    compile('com.nd.sdp.android:ele_data_collect:0.1-rc9-ax@aar') {
                    exclude module: 'active-android'
			        transitive = true
			        changing = true
			    }
                android {
	              packagingOptions {
	              exclude 'LICENSE.txt'
	            }
	}

             ]]>
		</dependency>
	</android>

</component><component namespace="com.nd.sdp.app.factory.build" name="apf-ci" display="脚本工具">
	<pages>
	</pages>
	
	<properties>
      <!--只有variables_ 开头的属性才会 移除 variables_ 头部后 保存到target/variables.json，正常不配置，使用默认的全局配置-->
      <property type="string" name="config_tip" displayName="请勿随意修改配置，仅作为开发调试"/>
      <property type="bool" name="variables_is_apf_ci_debug" desc_true="是" desc_false="否" displayName="是否开启调试"/>
       <property type="bool" name="variables_react_builder_close_cache" desc_true="是" desc_false="否" displayName="关闭react缓存构建"/>
       <property type="bool" name="variables_react_widget_builder_close_cache" desc_true="是" desc_false="否" displayName="关闭react颗粒缓存构建"/>
	   <property type="bool" name="variables_android_plugin_build_close_cache" desc_true="是" desc_false="否" displayName="关闭android插件缓存构建"/>	
       <property type="bool" name="variables_local_h5_close_cache" desc_true="是" desc_false="否" displayName="关闭离线H5插件缓存构建"/>
  </properties>
	
	<events>
	</events>

	<handlers>
	</handlers>
	<build>
		<properties>
          	 <group name="apf-ci" displayName="apf-ci脚本库" max-repeat="1">
          		<property type="string" name="lib_version" displayName="apf-ci版本" value="1.2.168"/>
          				
              <property type="string" name="android_AppBuildInit" displayName="Android AppBuildInit" value="${PYTHON_LIB_DIR}/${LIB_NAME}/${LIB_VERSION}/bin/${LIB_NAME} app-init ${factoryId} ${envtarget} android ${versionId} ${resourceCacheSwitch} -e 2"/>         
              <property type="string" name="ios_AppBuildInit" displayName="iOS AppBuildInit" value="${PYTHON_LIB_DIR}/${LIB_NAME}/${LIB_VERSION}/bin/${LIB_NAME} app-init ${factoryId} ${envtarget} ios ${versionId} ${resourceCacheSwitch} -e 2"/>
          	  <property type="string" name="all_DynamicTabBuilder" displayName="all DynamicTabBuilder" value="${PYTHON_LIB_DIR}/${LIB_NAME}/${LIB_VERSION}/bin/${LIB_NAME} dynamic-tab ${factoryId} ${appName} ${packageName} ${appType} ${appVersionId} ${tabVersionId} ${versionCode} ${versionName} ${versionDesc} ${envtarget} -e 8 -l false"/>
			  <property type="string" name="all_AppCompare" displayName="all AppCompare" value="${PYTHON_LIB_DIR}/${LIB_NAME}/${LIB_VERSION}/bin/${LIB_NAME} app-compare ${appCompareId} ${appType} ${packageOld} ${packageNew} -e 8 -l false"/>
			<property type="string" name="all_AppFactoryFlutterBuilder" displayName="all AppFactoryFlutterBuilder" value="${PYTHON_LIB_DIR}/${LIB_NAME}/${LIB_VERSION}/bin/${LIB_NAME} app-factory-flutter"/>
          </group> 	
      			
      			<group name="apf-ci-android" displayName="apf-ci-android" max-repeat="1">
          		<property type="string" name="lib_version" displayName="apf-ci-android版本" value="0.0.146"/>
          		
          		<property type="string" name="android_AndroidBuildInit" displayName="Android AndroidBuildInit" value="${PYTHON_LIB_DIR}/${LIB_NAME}/${LIB_VERSION}/bin/${LIB_NAME} build-init"/>
              <property type="string" name="android_AndroidBuildBefore" displayName="Android AndroidBuildBefore" value="${PYTHON_LIB_DIR}/${LIB_NAME}/${LIB_VERSION}/bin/${LIB_NAME} build-before"/>
			  <property type="string" name="android_AndroidBuilder" displayName="Android AndroidBuilder" value="${PYTHON_LIB_DIR}/${LIB_NAME}/${LIB_VERSION}/bin/${LIB_NAME} build"/>
              <property type="string" name="android_AndroidBuildAfter" displayName="Android AndroidBuildAfter" value="${PYTHON_LIB_DIR}/${LIB_NAME}/${LIB_VERSION}/bin/${LIB_NAME} build-after"/>
              <property type="string" name="guard_application_git" displayName="壳工程git地址" value="git@git.sdp.nd:android-security/DexGuardApplication.git"/>
              <property type="string" name="guard_application_tag" displayName="壳工程tag" value="v1.4.0"/>
          	</group>
          	<group name="apf-ci-ios" displayName="apf-ci-ios" max-repeat="1">
          		<property type="string" name="lib_version" displayName="apf-ci-ios版本" value="0.0.73"/>

                <property type="string" name="ios_IosSetup" displayName="iOS 构建环境设置" value="${PYTHON_LIB_DIR}/${LIB_NAME}/${LIB_VERSION}/bin/${LIB_NAME} setup"/>
          		<property type="string" name="ios_IosBuildInit" displayName="iOS IosBuildInit" value="${PYTHON_LIB_DIR}/${LIB_NAME}/${LIB_VERSION}/bin/${LIB_NAME} build-init"/>
              	<property type="string" name="ios_IosBuildBefore" displayName="iOS IosBuildBefore" value="${PYTHON_LIB_DIR}/${LIB_NAME}/${LIB_VERSION}/bin/${LIB_NAME} build-before"/>
                <property type="string" name="ios_IosBuilder" displayName="iOS IosBuilder" value="${PYTHON_LIB_DIR}/${LIB_NAME}/${LIB_VERSION}/bin/${LIB_NAME} build"/>	
                <property type="string" name="ios_IosBuildAfter" displayName="iOS IosBuildAfter" value="${PYTHON_LIB_DIR}/${LIB_NAME}/${LIB_VERSION}/bin/${LIB_NAME} build-after"/>
          	</group>
          	<group name="apf-ci-light" displayName="apf-ci轻应用" max-repeat="1">
          		<property type="string" name="lib_version" displayName="apf-ci轻应用版本" value="0.0.52"/>
          		
          		<property type="string" name="all_LightBuildInit" displayName="all LightBuildInit" value="${PYTHON_LIB_DIR}/${LIB_NAME}/${LIB_VERSION}/bin/${LIB_NAME} build-init ${factoryId} ${envtarget} ${appType} ${appName} ${componentType} ${appVersionId} ${packageName} ${versionCode} ${buildVersion} ${liteAppUpdateTime} -e 8 -l false"/>
							<property type="string" name="all_LocalH5Builder" displayName="Android LocalH5Builder" value="${PYTHON_LIB_DIR}/${LIB_NAME}/${LIB_VERSION}/bin/${LIB_NAME} local-h5 -l false"/>
          		<property type="string" name="all_H5WidgetBuilder" displayName="Android H5WidgetBuilder" value="${PYTHON_LIB_DIR}/${LIB_NAME}/${LIB_VERSION}/bin/${LIB_NAME} h5-widget -l false"/>
							<property type="string" name="all_ReactWidgetResourceBuilder" displayName="Android ReactWidgetResourceBuilder" value="${PYTHON_LIB_DIR}/${LIB_NAME}/${LIB_VERSION}/bin/${LIB_NAME} react-widget-resource"/>		
         			<property type="string" name="all_H5WidgetResourceBuilder" displayName="Android H5WidgetResourceBuilder" value="${PYTHON_LIB_DIR}/${LIB_NAME}/${LIB_VERSION}/bin/${LIB_NAME} h5-widget-resource"/>
         			
          		<property type="string" name="android_ReactBuilder" displayName="Android ReactBuilder" value="${PYTHON_LIB_DIR}/${LIB_NAME}/${LIB_VERSION}/bin/${LIB_NAME} rn ${factoryId} ${envtarget} android -l false"/>
          		<property type="string" name="android_ReactWidgetBuilder" displayName="Android ReactWidgetBuilder" value="${PYTHON_LIB_DIR}/${LIB_NAME}/${LIB_VERSION}/bin/${LIB_NAME} rn-widget ${factoryId} ${envtarget} android  -l false"/>           
              
        		  <property type="string" name="ios_ReactBuilder" displayName="iOS ReactBuilder" value="${PYTHON_LIB_DIR}/${LIB_NAME}/${LIB_VERSION}/bin/${LIB_NAME} rn ${factoryId} ${envtarget} ios -l false"/>
          		<property type="string" name="ios_ReactWidgetBuilder" displayName="iOS ReactWidgetBuilder" value="${PYTHON_LIB_DIR}/${LIB_NAME}/${LIB_VERSION}/bin/${LIB_NAME} rn-widget ${factoryId} ${envtarget} ios -l false"/>
          	</group> 	
          	<group name="apf-ci-subapp" displayName="apf-ci子应用" max-repeat="1">
          		<property type="string" name="lib_version" displayName="apf-ci子应用版本" value="0.0.5"/>
          		
          		<property type="string" name="android_SubAppBuildInit" displayName="Android SubAppBuildInit" value="${PYTHON_LIB_DIR}/${LIB_NAME}/${LIB_VERSION}/bin/${LIB_NAME} build-init ${factoryId} ${envtarget} android ${appName} ${appVersionId} ${callbackQueue} ${versionId} -e 8 -l false"/>
    			    <property type="string" name="ios_SubAppBuildInit" displayName="iOS SubAppBuildInit" value="${PYTHON_LIB_DIR}/${LIB_NAME}/${LIB_VERSION}/bin/${LIB_NAME} build-init ${factoryId} ${envtarget} ios ${appName} ${appVersionId} ${callbackQueue} ${versionId} -e 8 -l false"/>         

          	</group>          		         		           		  
      </properties>
	</build>
	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
			<property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
         		         		           		  
      </properties>
	</runtime>
  <templates>
    <android>
      <git>
        <source>git@git.sdp.nd:component-android/android-template-project.git</source>
        <commit-id>b6816a49</commit-id>
      </git>
    </android>
    <ios>
      <git>
        <source>git@git.sdp.nd:app-factory/template/componentappbase.git</source>
        <commit-id>1278a7a</commit-id>
      </git>
    </ios>
    <h5-widget>
      <git>
        <source>git@git.sdp.nd:h5/build-template.git</source>
        <commit-id>a96b2e89</commit-id>
      </git>
    </h5-widget>
    <react-widget>
      <git>
        <source>git@git.sdp.nd:app-factory/react-native-main-template.git</source>
        <commit-id>v1.0.19</commit-id>
      </git>
      <build-tool>@sdp.nd/react-native-widget-builder@0.0.45</build-tool>
    </react-widget>
    <react>
      <git>
        <source>git@git.sdp.nd:app-factory/react-native-main-module.git</source>
        <commit-id>v0.0.10</commit-id>
      </git>
      <build-tool>@sdp.nd/react-native-component-builder@0.0.13</build-tool>
    </react>
    <flutter>
      <git>
        <source>git@git.sdp.nd:app-factory/template/flutter-module-template-project.git</source>
        <commit-id>2b0cc53</commit-id>
      </git>
    </flutter>
  </templates>
</component><component namespace="com.nd.sdp.app.factory.build" name="js-build-tool" display="ReactNative运行框架">
    <pages/>
    <properties/>
    <events/>
    <handlers/>
    <build>
        <properties>

            <property type="string" name="react-widget_git" displayName="react-widget的git地址" value="git@git.sdp.nd:app-factory/react-native-main-template.git"/>

            <property type="string" name="react-widget_git_commitid" displayName="react-widget的git commit-id" value="v1.0.37"/>

            <property type="string" name="react-widget_build_tool" displayName="react-widget的构建工具" value="@sdp.nd/react-native-widget-builder@0.0.68"/>

            <property type="string" name="react_git" displayName="react的git地址" value="git@git.sdp.nd:app-factory/react-native-main-module.git"/>

            <property type="string" name="react_git_commitid" displayName="react的git commit-id" value="v0.0.19"/>

            <property type="string" name="react_build_tool" displayName="react的构建工具" value="@sdp.nd/react-native-component-builder@0.0.37"/>
        </properties>

    </build>
    <runtime>
        <properties>
            <property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="false"/>

            <property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
        </properties>
    </runtime>
  <android>
    <class/>
    <dependency><![CDATA[
        configurations.all {
         resolutionStrategy {
           force "com.facebook.soloader:soloader:0.6.1-nd"
           force "com.nd.sdp.android:react-wrapper:0.9.0"
           force "com.facebook.react:react-native:0.59.9-nd-hermes-androidx.1"
         }
        }
        compile('com.facebook.soloader:soloader:0.6.1-nd@aar') {
          transitive = true
          changing = true
          exclude group: 'android.support', module: 'android-support-v4'
        }
        compile('com.nd.sdp.android:react-wrapper:0.9.0@aar') {
          transitive = true
          changing = true
          exclude group: 'android.support', module: 'android-support-v4'
        }
        compile('com.nd.sdp.android:rn-implement:1.0.0@aar') {
          transitive = true
          changing = true
          exclude group: 'android.support', module: 'android-support-v4'
        }
        compile('com.nd.sdp.android:plugin-implement:2.1.0@aar') {
          transitive = true
          changing = true
          exclude group: 'android.support', module: 'android-support-v4'
        }
       
afterEvaluate {
    def isAndroidLibrary = plugins.hasPlugin("com.android.library")
    def variants = isAndroidLibrary ? android.libraryVariants : android.applicationVariants
    variants.all { def variant ->
        // Create variant and target names
        def targetName = variant.name.capitalize()
        def targetPath = variant.dirName
        // Delete the VM related libraries that this build doesn't need.
        def libDir = "$buildDir/intermediates/transforms/"
        def vmSelectionAction = {
            fileTree(libDir).matching {
                // For Hermes, delete all the libjsc* files
                include "**/libjsc*.so"
            }.visit { details ->
                def targetVariant = ".*/transforms/[^/]*/${targetPath}/.*"
                def path = details.file.getAbsolutePath().replace(File.separatorChar, '/' as char)
                if (path.matches(targetVariant) && details.file.isFile()) {
                    details.file.delete()
                }
            }
        }

        def task = tasks.findByName("package${targetName}")
        task.doFirst(vmSelectionAction)
    }
}

      ]]></dependency>
    </android>
    <ios>  
      <dependency> <![CDATA[
              pod 'APFReactNativeImplement', '1.0.8'
              pod 'APFReactNativeKit', '1.2.25'
               ]]> </dependency> 
    </ios>
</component><component namespace="com.nd.sdp.component" name="download-manager" display="IM公共下载库">
 	<sdk>
      <js-sdk>
          <name>downloader-jssdk</name>  <!-- 必须 -->
          <version>0.1</version>  <!-- 必须 -->
          <android>
              <js-class>com.nd.sdp.android.common.downloader.jswrapper.DownloaderJsInjectorProvider</js-class> <!-- 可选 -->
          </android>
      </js-sdk>
    </sdk>  
    <pages>
	</pages>
	
	<properties>
	</properties>
	
	<events>
	</events>

	<handlers>
	</handlers>

	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
			<property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
		</properties>
	</runtime>
    <android>
        <class/>
      
<scenes>
    <scene name="android.permission.INTERNET" displayName="网络权限" describe="文件下载" isAsk="false" closeable="false" type="permission"/>
    <scene name="android.permission.ACCESS_NETWORK_STATE" displayName="网络状态变化权限" describe="下载中自动暂停" isAsk="true" closeable="true" type="permission"/>
    <scene name="android.permission.WRITE_EXTERNAL_STORAGE" displayName="存储权限" describe="文件下载" isAsk="true" closeable="true" type="permission"/>  
    <scene name="android.permission.FOREGROUND_SERVICE" displayName="前台服务权限" describe="下载文件使用前台服务" isAsk="false" closeable="false" type="permission"/>  
</scenes>

        <dependency>
            <![CDATA[
              compile('com.nd.sdp.android:downloader-jswrapper:0.2.7')
              compile('com.nd.android.sdp.common:downloadmanager:1.8.233.release')
              compile('com.nd.android.file:file_provider:1.8.101.release')
       ]]>
        </dependency>
    </android>
</component><component namespace="com.nd.edu.component" name="el-router" display="教育-页面路由">
	<pages>
        <page type="cmp" name="test" display="页面路由-QA" toplevel="1" allow_guest="true"/>
        <page type="cmp" name="router" display="路由容器页面" toplevel="1" allow_guest="true"/>
        <page type="cmp" name="h5Address" display="H5页面" toplevel="1" allow_guest="true"/>
      
    
	</pages>
	
	<properties>
        <property type="bool" name="router_switch" displayName="路由中间页开关" value="false" senior="false">
           <tip>是否开启路由中间页，开启时需要确认是否使用到租户化相关组件；如使用学习社区组件时，必须开启。</tip>
        </property>
       <property type="bool" name="is_open_limit_flow" displayName="是否启用限流" value="false" senior="false">
           <tip>是否启用限流。</tip>
        </property>
	</properties>
	
	<events>
	</events>

	<handlers>
	</handlers>

	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
			<property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
		</properties>
	</runtime>
  
  <android>
		<class>com.nd.edu.router.sdk.EleRouterComponent</class>
		<dependency>
			<![CDATA[
			    compile('com.nd.edu.router:el-router-sdk:0.0.9-ax.3@aar') {
                    exclude module: 'active-android'
			        transitive = true
			        changing = true
			    }
                android {

	              packagingOptions {
	              exclude 'LICENSE.txt'
	            }
	}

             ]]>
		</dependency>
	</android>
  	<ios>
		<class>ELERouterComponent</class>
		<dependency>
			<![CDATA[
            pod 'el_router_ios', '0.0.24'
             ]]>
		</dependency>

	</ios>
</component><component namespace="com.nd.sdp.component" name="muicontentfilterpanellibrary" display="[AQI] 内容过滤控件" type="library">
		
	<properties>
	</properties>
	
	<events>
	</events>

	<handlers>
	</handlers>

	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
		</properties>
	</runtime>
  <android>    
    <scenes>
   <scene name="_applicationId_.permission.SORTFILTER_RECEIVE_BROADCAST" displayName="自定义动态注册广播" describe="自定义动态注册广播" isAsk="false" closeable="true" type="permission"/>
   
      </scenes>
		<dependency>
			<![CDATA[
            compile 'com.nd.sdp.android:nd-sort-filter-view:3.0.3-release.1'
            compile 'com.nd.sdp.android.common.ui:nd-button:1.3.3'
             ]]>
		</dependency>    
</android>
  
  <ios>
        
        <dependency>
            <![CDATA[
                pod 'MUIContentFilterPanel', '1.0.50'
               ]]>
        </dependency>
    </ios>
  
</component><component namespace="com.nd.sdp.component" name="imcommonjsbridge" display="IM桥接JS库">
	<sdk>
    	<js-sdk>
        	<name>IMJsBridgeSdk</name>
          	<version>1.0</version>
          	<ios>
            	<js-class>IMJsBridgeSdkModuleProvider</js-class>
          	</ios>
          	<android>
              <js-class>com.nd.sdp.android.jssdk.common.ImJssdkJsInjectorProvider</js-class>
              <react-class>com.nd.sdp.android.jssdk.common.ImJssdkReactInjectorProvider</react-class>
          	</android>
        </js-sdk>
  	</sdk>
  	<pages>
	</pages>
	
	<properties>
	</properties>
	
	<events>
	</events>

	<handlers>
	</handlers>
  
    <android>
    	<class/>
		<dependency>
			<![CDATA[
			  compile('com.nd.sdp.android:im-jssdk:1.1.3.develop')
			]]>
		</dependency>    
 	</android>
  
    <ios>
      <class>IMJSBridgeComponent</class>
        <dependency>
          <![CDATA[
             		pod 'IMJSBridge', '1.0.0'
          ]]>
        </dependency>
      <privacies>
      </privacies>
    </ios>

	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
			<property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
		</properties>
	</runtime>
</component><component namespace="com.nd.sdp.component" name="e-omc" display="教育-辅助-组织管理">
	<pages>
      <page type="cmp" name="testPage" display="测试页" toplevel="1"/>
      <page type="cmp" name="main" display="主页" toplevel="2"/>
      <page type="cmp" name="join" display="加入" toplevel="2"/>
	</pages>
	
	<properties>
      <property type="string" name="tenantId" displayName="租户ID配置" value=""/>
	</properties>
	
	<events>
	</events>

	<handlers>
	</handlers>

	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
            <property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
		</properties>
	</runtime>
   
     <android>
		<class>com.nd.hy.android.org.manager.OrgManagerComponent</class>
		<dependency>
			<![CDATA[
			    compile('com.nd.sdp.android:e101-org-manager:0.1.4.0.release') {
			        transitive = true
			        changing = true
			    }
             ]]>
		</dependency>
        <groovy>
		<![CDATA[
		    android {
				packagingOptions {
					exclude 'META-INF/rxjava.properties'
	  			}
            }
		]]>
		</groovy>
     </android>  
  
  	<ios>
		<class>EomcComponent</class>
		<dependency>
            <![CDATA[
             pod 'e_omc_ios', '0.0.9'
             ]]>
		</dependency>
	</ios>
</component><component namespace="com.nd.sdp.component" name="filesystem-plugin" display="应用文件系统" type="function_library">
	<pages>
	</pages>
	
	<properties>
	</properties>
	
	<events>
	</events>

	<handlers>
	</handlers>

	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
			<property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
		</properties>
      
      <providers>
            <provider name="com.nd.social.im.GetChatInputMenuItem" filter="com.nd.social.im.GetChatInputMenuItem" desc="往群聊页面的输入面板注入按钮"/>
          <provider name="com.nd.sdp.im.assignment.BottomFuncProvider" filter="com.nd.social.im.GetChatInputMenuItem2" desc="注入按钮2"/>
        </providers>
	</runtime>
  
  <ios>
    <class>FileSystemComponent</class>
    <dependency>
            <![CDATA[
                pod 'FileSystemPlugin', '1.0.15'
               ]]>
     </dependency>
  </ios>
</component><component namespace="com.nd.sdp.component" name="text-editor-censor-plugin" display="text-editor-censor-plugin">
	<pages>
	</pages>
	
	<properties>
	</properties>
	
	<events>
	</events>

	<handlers>
	</handlers>

	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
			<property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
		</properties>
	</runtime>
  
  	<android>
		<class>com.nd.module_texteditor_censor_plugin.TextEditorCensorPluginComponent</class>
      	<dependency>
            	<![CDATA[
					compile('com.nd.sdp.android:text-editor-censor-plugin:1.0.4.androidx@aar') {
        				transitive = true
        				changing = true
                	}
             	]]>
		</dependency>
	</android>
</component><component namespace="com.nd.sdp.component.im" name="ndpush" display="推送组件">
	<pages>
	</pages>
	
	<properties>
      <property type="bool" name="push_start_after_agreement" displayName="用户同意隐私协议后才启动push" value="true">  </property>
      <property type="string" name="push_app_id" displayName="推送appid" value="">  </property>    
      <property type="string" name="push_app_key" displayName="推送appkey" value="">  </property>    
      <property type="bool" name="huawei_push_switch" displayName="支持华为推送" value="false">
			<dependency>
				<component namespace="com.nd.sdp.component" name="im-push-manufacturer-huawei" display="华为推送组件"/>
			</dependency>
      </property>
      <property type="bool" name="xiaomi_push_switch" displayName="支持小米推送" value="false">
			<dependency>
				<component namespace="com.nd.sdp.component" name="im-push-manufacturer-xiaomi" display="小米推送组件"/>
			</dependency>
      </property>      
      <property type="bool" name="oppo_push_switch" displayName="支持OPPO推送" value="false">
			<dependency>
				<component namespace="com.nd.sdp.component" name="im-push-manufacturer-oppo" display="OPPO推送组件"/>
			</dependency>
      </property>
            
      <property type="bool" name="vivo_push_switch" displayName="支持vivo推送" value="false">
			<dependency>
				<component namespace="com.nd.sdp.component" name="im-push-manufacturer-vivo" display="vivo推送组件"/>
			</dependency>
      </property>
      <!--
      <property type="bool" name="meizu_push_switch" displayName="支持魅族推送" value="false">
			<dependency>
				<component namespace="com.nd.sdp.component" name="im-push-manufacturer-meizhu" display="魅族推送组件"/>
			</dependency>
      </property>
      
      <property type="bool" name="fcm_push_switch" displayName="支持FCM推送" value="false">
			<dependency>
				<component namespace="com.nd.sdp.component" name="im-push-fcm-plugin" display="FCM推送组件"/>
			</dependency>
      </property>
		-->
	</properties>
	
	<events>
	</events>

	<handlers>
	</handlers>

    <runtime>
      <properties>
        <property type="bool" name="lazy_init_android" displayName="是否开启延迟初始化" value="false"/>
        <property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="false"/>
        
      </properties>
  
		<gradles name="HyacinthPush 推送组件">
          	<android-project-gradle-classpaths displayName="HyacinthPush 推送组件 plugin">
				<classpath value="com.nd.sdp.android.im:gradle-hyacinth-push:3.7.189.4d85b1d"/>      
			</android-project-gradle-classpaths>
			<android-app-gradle-applys displayName="推送组件 plugin id">
				<apply value="hyacinth-push"/>
			</android-app-gradle-applys>  
      		<android-app-gradle-appends displayName="HyacinthPush defaultConfig 配置">
                HyacinthPush {
                    defaultConfig {
                        autoMetaData = false           //使用工厂配置为false
                        androidManifestPath = "AndroidManifest.xml"
                    }
              		children {
        				huawei {
        				}
        				fcm {
        				}
    				}
                }
              	Configuration compilePush = project.configurations.getByName(JavaPlugin.COMPILE_CONFIGURATION_NAME)
				def pushConfiguration = project.configurations.create("ndHyacinthPush").setTransitive(true).setVisible(true).setDescription("Plugin")
				compilePush.extendsFrom(pushConfiguration)

				def huaweiPush = compileConf.allDependencies.find { dep -&gt;
    				return dep.name.equals("push4huawei")
				}
				println("华为推送集成脚本" + huaweiPush)
				if (huaweiPush) {
    				apply plugin: 'com.huawei.agconnect'
				}

				def fcmPush = compileConf.allDependencies.find { dep -&gt;
   					return dep.name.equals("push4fcm")
				}
				println("FCM推送集成脚本" + fcmPush)
				if (fcmPush) {
    				apply plugin: 'com.google.gms.google-services'
				}
			</android-app-gradle-appends>
		</gradles>     
    </runtime>
  
    <android>
      <class>com.nd.sdp.android.im.push.IMPushComponent</class>
      <dependency>
              <![CDATA[
              compile('com.nd.sdp.android.im:im-push-component:3.7.191.f89167c') {     
                  exclude group: 'com.android.support'
              }
              compile('com.nd.sdp.android:adhoc-push-util:0.3.52') {     
                  exclude group: 'com.android.support'
              }
       ]]>
		</dependency>
        <scenes>
          <!--compile('com.nd.sdp.android:adhoc-push-util:0.3.28')-->
          <scene name="android.permission.ACCESS_NETWORK_STATE" displayName="网络状态权限" describe="断开重连" isAsk="false" closeable="true" type="permission"/>
          <scene name="android.permission.ACCESS_WIFI_STATE" displayName="WIFI状态权限" describe="断开重连" isAsk="false" closeable="true" type="permission"/>
          <scene name="${applicationid}.permission.process_push_msg" displayName="推送权限" describe="推送" isAsk="false" closeable="true" type="permission"/>
          <scene name="com.huawei.appmarket.service.commondata.permission.get_common_data" displayName="获取数据" describe="推送" isAsk="false" closeable="true" type="permission"/>
          <scene name="${applicationid}.permission.push_provider" displayName="推送权限" describe="推送" isAsk="false" closeable="true" type="permission"/>
          <scene name="com.google.android.c2dm.permission.receive" displayName="推送权限" describe="推送" isAsk="false" closeable="true" type="permission"/>
          <scene name="android.permission.wake_lock" displayName="推送权限" describe="推送" isAsk="false" closeable="true" type="permission"/>
          <!--scene name="android.permission.CHANGE_WIFI_STATE" displayName="WIFI状态变化" describe="推送监听wifi状态变化"  isAsk="false" closeable="true" type="permission"/-->
        </scenes>      
    </android>  
    <ios>
        <class>XPushComponent</class>
        <dependency>
            <![CDATA[
				pod 'XPushComponent', '1.3.3'
                pod 'XPush', '1.2.10'
               ]]>
        </dependency>
    </ios>
    <build>
		<android>   
			<safe_whitelist>
              <activities>
				<activity name="com.nd.sdp.hyacinthpush.proxy.PushProxyActivity" describe="厂商推送，需要暴露给对应厂商系统调用" type="activity" owner="黄艺凯"/>
              </activities>
              <services>
                <service name="com.xiaomi.mipush.sdk.PushMessageHandler" describe="厂商推送，需要暴露给对应厂商系统调用" type="service" owner="黄艺凯"/>
                <service name="com.vivo.push.sdk.service.CommandClientService" describe="厂商推送，需要暴露给对应厂商系统调用" type="service" owner="黄艺凯"/>
                <service name="com.huawei.hms.support.api.push.service.HmsMsgService" describe="厂商推送，需要暴露给对应厂商系统调用" type="service" owner="黄艺凯"/>
                <service name="com.nd.sdp.push.oppo.PushMessageService" describe="厂商推送，需要暴露给对应厂商系统调用" type="service" owner="黄艺凯"/>
                <service name="com.nd.sdp.push.oppo.AppPushMessageService" describe="厂商推送，需要暴露给对应厂商系统调用" type="service" owner="黄艺凯"/>
                <service name="com.huawei.hms.support.api.push.PushMsgReceiver" describe="厂商推送，需要暴露给对应厂商系统调用" type="service" owner="黄艺凯"/>
              </services>
              <receivers>
                <receiver name="com.nd.sdp.push.xiaomi.XiaoMiPushMessageReceiver" describe="厂商推送，需要暴露给对应厂商系统调用" type="receiver" owner="黄艺凯"/>
                <receiver name="com.xiaomi.push.service.receivers.NetworkStatusReceiver" describe="厂商推送，需要暴露给对应厂商系统调用" type="receiver" owner="黄艺凯"/>
                <receiver name="com.nd.sdp.push.vivo.VivoPushMessageReceiver" describe="厂商推送，需要暴露给对应厂商系统调用" type="receiver" owner="黄艺凯"/>
                <receiver name="com.xiaomi.mipush.sdk.PushMessageReceiver" describe="厂商推送，需要暴露给对应厂商系统调用" type="receiver" owner="黄艺凯"/>
                <receiver name="com.huawei.hms.support.api.push.PushReceiver" describe="厂商推送，需要暴露给对应厂商系统调用" type="receiver" owner="黄艺凯"/>
              </receivers>
          </safe_whitelist>
      </android>
    </build>
</component><component namespace="com.nd.sdp.component" name="el-rescard" display="教育-学习内容卡片">
	<pages>
             <page type="cmp" name="test" display="测试" toplevel="1"/>
	</pages>
	
	<properties>
	</properties>
	
	<events>
	</events>

  <handlers>      
  	<handler name="not-ios://doLogInOutStuff" desc="接收事件" receive_event="uc_on_login_success,uc_on_logout,event_app_language_changed,event_start_ele_appkey,event_ele_reinit_card_data"/>
    <handler name="ios://doLogInOutStuff" desc="接收事件" receive_event="uc_on_login_success,uc_on_logout,event_app_language_changed,event_start_ele_appkey,event_ele_reinit_card_data"/> 
  </handlers>

	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
			<property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
		</properties>
	</runtime>
  
  	<android>
		<class>com.nd.hy.android.refactor.elearning.carlibrary.ElCardComponent</class>
		<dependency>
			<![CDATA[
			    compile('com.nd.sdp.android:el-rescard-android:13.1.8-rc.3@aar') {
			        transitive = true
			        changing = true
			    }

             ]]>
		</dependency>
	</android>
  	<ios>
    	<class>el_rescard_ios_Component</class>
			<dependency>
				<![CDATA[
	            pod 'el_rescard_ios', '1.0.41'
    	         ]]>
			</dependency>
    </ios>
</component><component namespace="com.nd.sdp.component" name="nd-calender2" display="[AQI] 日历控件" type="library">
	<pages>
	</pages>
	
	<properties>
	</properties>
	
	<events>
	</events>

	<handlers>
	</handlers>

	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
			<property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
		</properties>
	</runtime>
  <android>    
    <scenes>
   <scene name="_applicationId_.permission.CALENDAR_RECEIVE_BROADCAST" displayName="自定义动态注册广播" describe="自定义动态注册广播" isAsk="false" closeable="true" type="permission"/>
   
      </scenes>
		<dependency>
			<![CDATA[
            compile 'com.nd.sdp.android.common.ui:nd-calendar2:3.0.3-release.1'
             ]]>
		</dependency>    
</android>
   <ios>       
        <dependency>
             <![CDATA[
                pod 'MUICalendar','0.0.6'
				pod 'MUIV2Calendar', '1.0.13'
             ]]>
        </dependency>
    </ios>
</component><component namespace="com.nd.sdp.component" name="configure" display="产品配置">
	<pages>
	</pages>
	
	<properties>
	</properties>
	
	<events>
	</events>

	<handlers>
	</handlers>

	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="false"/>
          	<property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="false"/>
		</properties>
	</runtime>
    <android>    
      <class>com.nd.sdp.android.centralsdk.ConfigCentralComponent</class>
		<dependency>
			<![CDATA[
            compile 'com.nd.sdp.android.centralsdk:configuration-central-sdk:3.0.0.13.release'
             ]]>
		</dependency>    
    </android>
    <ios>
		<class>CCCConfigurationCentralComponent</class>
		<dependency>
            <![CDATA[
             pod 'ConfigurationCentralComponent', '1.0.0'
             pod 'ConfigurationCentralSDK', '1.0.2'
             ]]>
		</dependency>
	</ios>
    
</component><component namespace="com.nd.sdp.component" name="uc-avatar-edit" display="UC修改头像控件" type="function_library">
	<pages>
	</pages>
	
	<properties>
	</properties>
	
	<events>
	</events>

	<handlers>
      <handler name="changeAvatar" desc="修改头像" receive_event="changeAvatar"/>
	</handlers>

	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
			<property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
		</properties>
	</runtime>
    <android>
        <class>com.nd.sdp.uc.avataredit.UcAvatarEditComponent</class>
        <dependency>
            <![CDATA[            	
                compile('com.nd.sdp.uc:avataredit:2.1.1.6.release')
            ]]>
        </dependency>
        <scenes>
           <scene name="android.permission.READ_EXTERNAL_STORAGE" displayName="读取存储卡中的内容" describe="上传和编辑头像需要读写存储卡" isAsk="true" closeable="true" type="permission"/>
           <scene name="android.permission.WRITE_EXTERNAL_STORAGE" displayName="修改或删除存储卡中的内容" describe="上传和编辑头像需要读写存储卡" isAsk="true" closeable="true" type="permission"/>
           <scene name="android.permission.CAMERA" displayName="拍摄照片和录制视频" describe="头像拍照功能" isAsk="true" closeable="true" type="permission"/>
           <scene name="android.permission.INTERNET" displayName="网络权限" describe="网络请求能力需要" isAsk="true" closeable="true" type="permission"/>
           <scene name="android.permission.ACCESS_WIFI_STATE" displayName="WIFI状态" describe="网络请求能力需要" isAsk="true" closeable="true" type="permission"/>
           <scene name="android.permission.ACCESS_NETWORK_STATE" displayName="网络状态" describe="网络请求能力需要" isAsk="true" closeable="true" type="permission"/>
        </scenes>
    </android>
  	<ios>
        <scenes>
          <!-- UsageDescription 的 scene 必须加上 describe 属性 -->
          <scene name="NSPhotoLibraryAddUsageDescription" describe="请允许APP保存图片到相册"/>
          <scene name="NSPhotoLibraryUsageDescription" describe="请允许APP访问您的相册"/>
          <scene name="NSCameraUsageDescription" describe="请允许APP访问您的相机"/>
      	</scenes>
        <class>MUIAvatarEditor</class>
        <dependency>
            <![CDATA[
				pod 'MUIAvatarEditor', '1.0.2'
             ]]>
        </dependency>
    </ios>
</component><component namespace="com.nd.sdp.component" name="model-source-app" display="个人信息聚合-本地数据源">
	<pages>
      <page type="local" name="index.html" display="个人信息数据查询组件" toplevel="2" android_class=""/>
	</pages>
	
	<properties>
	</properties>
	
	<events>
	</events>

	<handlers>
	</handlers>
	<h5>
      <version>1.0.0</version>
      <npm>
        "@sdp.nd/model-source-h5":"1.0.38"
      </npm>
      <h5app>model-source-h5</h5app>
    </h5>
  <runtime>
  	<properties>
  		<property name="lazy_init_android" value="false" type="string"/>
  	</properties>
  </runtime>

</component><component namespace="com.nd.sdp.component.im" name="im-coresdk" display="IM核心SDK">
    <pages/>
    <runtime>
        <properties>
            <property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="false"/>
            <property type="bool" name="lazy_init_ios" displayName="是否开启ios延迟初始化" value="false"/>
        </properties>
    </runtime>
    <build>
        <android>
            <safe_whitelist>
                <receivers>
                    <receiver name="com.nd.sdp.im.transportlayer.core.TransportReceiver" describe="用来接收开机启动广播" type="receiver" owner="鄢宜扬"/>
                </receivers>
            </safe_whitelist>
        </android>
    </build>
    <events/>
    <handlers/>
    <properties>
        <property type="bool" name="im_support_msg_encrypt" displayName="支持本地消息存储加密" value="false">
            <dependency>
                <component namespace="com.nd.sdp.component" name="im-msg-encrypt" display="本地消息存储加密功能是否开启"/>
            </dependency>
        </property>
    </properties>
    <android>
        <class>com.nd.android.coresdk.component.IMCoreComponent</class>
        <dependency>
            <![CDATA[ 
            def im_coresdk_version = "1.9.739.release" 
            compile("com.nd.sdp.component.im:im-coresdk-impl:${im_coresdk_version}") 
            compile("com.nd.sdp.component.im:im-coresdk-impl-databiz:${im_coresdk_version}") 
            compile("com.nd.sdp.component.im:im-coresdk-impl-upload:${im_coresdk_version}") 
            compile("com.nd.sdp.component.im:im-coresdk-impl-appfactory:${im_coresdk_version}") 
            compile("com.nd.sdp.component.im:core-cs-support-impl:${im_coresdk_version}") 
            compile('com.nd.sdp.im.common:im_proxy_impl_appfactory:3.0.178.release')
             compile('com.nd.android.sdp.im:TransportLayer:3.2.820.product')
              compile('org.greenrobot:greendao:3.3.0') 
            ]]>
        </dependency>
        <scenes>
            <!--  com.nd.sdp.component.im:im-coresdk-impl:0.5.554.release  -->
            <scene name="android.permission.CHANGE_WIFI_STATE" displayName="" describe="" isAsk="true" closeable="true" type="permission"/>
            <scene name="android.permission.ACCESS_NETWORK_STATE" displayName="网络状态权限" describe="断开重连" isAsk="true" closeable="true" type="permission"/>
            <scene name="android.permission.ACCESS_WIFI_STATE" displayName="WIFI状态权限" describe="断开重连" isAsk="true" closeable="true" type="permission"/>
        </scenes>
    </android>
    <ios>
        <class>IMSDKComponent</class>
        <dependency>
            <![CDATA[ 
            pod 'IMSDK' , '21.12.25' 
            pod 'IMCoreSDK' , '1.5.56' 
            pod 'IMCoreLayer' , '1.9.23'
            pod 'GPBGeneratedCode', '1.1.1' 
            ]]>
        </dependency>
    </ios>
</component><component namespace="com.nd.sdp.component" name="tag-sdk" display="标签sdk">
	<pages>
	</pages>
	
	<properties>
	</properties>
	
	<events>
	</events>

	<handlers>
	</handlers>

	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
			<property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
		</properties>
	</runtime>
 
      <android>
        
        <dependency>
            <![CDATA[
              compile('com.nd.sdp.component:tag_sdk:0.1.21.release@aar') {
                  transitive = true
                  changing = true
              }               
            ]]>
        </dependency>
     </android>    
  
   <ios>
        <class>TagsManager</class>

        <dependency>
            <![CDATA[
				pod 'tag_ios_sdk', '1.0.8'
             ]]>
        </dependency>

    </ios>
</component><component namespace="com.nd.sdp" name="friend" display="好友组件">
	<pages>
        <page type="cmp" name="friend_list" display="好友列表">
        
            <properties>
            
                <property type="bool" name="im_close_friend" displayName="关闭好友功能" value="false"/>
                
                <property type="bool" name="im_friend_display_follow" displayName="好友关系显示关注" value="true"/>
                
                <property type="page" name="im_add_friend_page" displayName="点击添加好友跳转界面">
                    <tip>点击添加好友跳转界面</tip>
                </property>   
                
            </properties>
            
        </page>
        <page type="cmp" name="ToC_Add_Friend" display="ToC场景添加好友"/>
	</pages>
	
	<properties>
      <property type="bool" name="im_visible_add_or_remove_friend_btn" displayName="显示添加好友" value="true"/>  
	</properties>
	
	<events>
	</events>

	<handlers>
      
      <!-- 
        <handler name="dealOpenTab" desc="打开主界面" receive_event="event_send_open_tab_activity"/>
        <handler name="dealAddFriend" desc="添加好友event" receive_event="im_friend_event_add_friend"/>
        <handler name="opFriend" desc="好友操作" receive_event="im_event_operate_friend_request"/>
        <handler name="blacklist_event_all_black_list_notify" desc="黑名单通知" receive_event="blacklist_event_all_black_list_notify"/>
	  -->
	</handlers>
<routes>
    <route source="cmp://com.nd.social.im/friend_list" destination="cmp://com.nd.sdp.friend/friend_list"/>
    <route source="cmp://com.nd.social.im/friend_remark_name" destination="cmp://com.nd.sdp.friend/friend_remark_name"/>
</routes>
	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="false"/>
			<property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="false"/>
		</properties>
	</runtime>
  
    <runtime>
        <providers>
            <provider name="com.nd.sdp.component.IMFriend.ComponentLaunched" filter="com.nd.sdp.component.IMFriend.ComponentLaunched" desc=""/>
        	<!-- 
            <provider name="com.nd.social.im.GetFriendInfo" filter="com.nd.social.im.GetFriendInfo" desc="好友信息" anClass="com.nd.im.friend.ui.FriendProvider"/>
            <provider name="com.sdp.im.queryP2PChatState" filter="com.sdp.im.queryP2PChatState" desc="好友信息" anClass="com.nd.im.friend.ui.P2PChatStatusProvider"/>
			-->      
		</providers>
    </runtime>
  
    <android>
    
        <class>com.nd.im.friend.ui.FriendComponent</class>
        
     	<dependency>
        <![CDATA[
            compile("com.nd.sdp.im:im_friend_ui:0.6.83.release")
  			compile('com.nd.sdp.android:im-follow-res:0.0.5.14.release')
        ]]>
        </dependency>
      
        <groovy>
            <![CDATA[

                import groovy.json.JsonSlurper

                def im_friend_display_follow = getFriendDisplayFollow();
                
                // 删除模板资源，避免冲突
                if (!im_friend_display_follow) {
                    def resFiles = new FileNameFinder().getFileNames(new File(getProjectDir(),"res").absolutePath, '**/im-follow-res_error_friend_com_nd_social_im.xml,**/im-follow-res_strings_com_nd_social_im.xml' /* includes */)
                    resFiles.each {
                        new File(it).delete()
                    }
                }else{
                    def resFiles = new FileNameFinder().getFileNames(new File(getProjectDir(),"res").absolutePath, '**/im-friend-res_error_friend_com_nd_social_im.xml,**/im-friend-res_strings_com_nd_social_im.xml' /* includes */)
                    resFiles.each {
                        new File(it).delete()
                    }
                }
                
                // 删除模板资源，避免冲突
                dependencies {

                    if (!im_friend_display_follow) {
                        compile('com.nd.sdp.android:im-friend-res:0.0.5.12.release')
                        configurations {
                            all*.exclude group: 'com.nd.sdp.android' , module: 'im-follow-res'
                        }
                    }
                }

                def getFriendDisplayFollow(){

                    def inputFile = getPagesJsonFile()
                    def pages = new JsonSlurper().parse(inputFile)

                    def im_friend_display_follow = null;

                    def friendListPage = pages.getAt("cmp://com.nd.sdp.friend/friend_list");
                    if(friendListPage != null){
                        im_friend_display_follow = friendListPage.properties.im_friend_display_follow
                    }

                    if(im_friend_display_follow == null){
                        def imFriendListPage = pages.getAt("cmp://com.nd.social.im/friend_list");
                        if(imFriendListPage != null){
                            im_friend_display_follow = imFriendListPage.properties.im_friend_display_follow
                        }
                    }

                    if(im_friend_display_follow == "" || im_friend_display_follow == null){

                        inputFile = getBuildJsonFile();

                        def list = new JsonSlurper().parse(inputFile)
                        list.each {
                            if (it.component.namespace == 'com.nd.social'
                                    && it.component.name == 'im') {
                                im_friend_display_follow = it.properties.im_friend_display_follow
                            }
                        }
                    }

                    if(im_friend_display_follow == "" || im_friend_display_follow == null){
                        im_friend_display_follow = "true"
                    }

                    //这里要转成boolean
                    return im_friend_display_follow == "true"
                }
               
                def getPagesJsonFile(){

                    def inputFile = new File(new File("app").absolutePath, "assets/app_factory/zh-CN/pages/pages.json")
                    if(!inputFile.exists()){
                        inputFile = new File(new File("app").absolutePath, "assets/app_factory/en/pages/pages.json")
                    }
                    inputFile
                }

                def getBuildJsonFile(){

                    def inputFile = new File(new File("app").absolutePath, "assets/app_factory/zh-CN/components/build.json")
                    // 这里获取群广告的配置
                    if(!inputFile.exists()){
                        inputFile = new File(new File("app").absolutePath, "assets/app_factory/en/components/build.json")
                    }
                    if(!inputFile.exists()){
                        inputFile = new File(new File("app/src/main").absolutePath, "assets/app_factory/en/components/build.json")
                    }
                    if(!inputFile.exists()){
                        inputFile = new File(new File("app/src/main").absolutePath, "assets/app_factory/zh-CN/components/build.json")
                    }

                    inputFile
                }
            ]]>              
      	</groovy>      
      
    </android>
  
    <ios>
      <class>IMFriendComponent</class>
     	<dependency>
            <![CDATA[
 				pod 'IMFriendComponent', '1.0.101'
                pod 'IMFriendSDK', '1.0.55'
               ]]>
      </dependency>
    </ios>
</component><component namespace="com.nd.sdp.component" name="ndtimepicker2" display="[AQI]时间选择控件" type="library">
	<pages>
	</pages>
	
	<properties>
	</properties>
	
	<events>
	</events>

	<handlers>
	</handlers>
<android>    
		<dependency>
			<![CDATA[
            compile 'com.nd.sdp.android.common:nd-timepicker2:0.2.7'
            compile 'com.nd.sdp.android:time-picker-jssdk:0.0.4'
             ]]>
		</dependency>    
</android>
  <ios>       
        <dependency>
             <![CDATA[
                pod 'MUIV2TimePicker','0.0.19'
				pod 'MUIV2TimePickerComponent','0.0.3'
             ]]>
        </dependency>
    </ios>
	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
			<property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
		</properties>
	</runtime>
  	<sdk>
    <js-sdk>
        <name>time-picker-jssdk</name>  
        <version>1.0</version>  
        <ios>
            <js-class>MUIV2TimePickerJsBridgeProvider</js-class>  
        </ios>
        <android>
            <js-class>com.nd.sdp.android.timepickerjssdk.TimePickerJsSdkProvider</js-class>
        </android>
    </js-sdk>
  </sdk>
</component><component namespace="com.nd.sdp.component" name="edu-studycontent" display="教育-学习内容库">
	<pages>
       <page type="cmp" name="test" display="测试" toplevel="1"/>
	</pages>
	
	<properties>
	</properties>
	
	<events>
	</events>

	<handlers>
       <handler name="not-ios://doStuff" desc="直播创建成功" receive_event="broadcast_apply_success"/>
       <handler name="ios://handleBroadcastApply" desc="直播创建成功" receive_event="broadcast_apply_success"/>
	</handlers>


	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
			<property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
		</properties>
	</runtime>
  <android>
		<class>com.nd.hy.android.content.lib.player.ContentLibPlayerComponent</class>
		<dependency>
             <![CDATA[
			    compile('com.nd.sdp.android:edu-contentlib-android:13.1.2-rc.1@aar') {
                    exclude module: 'active-android'
			        transitive = true
			        changing = true
			    }
                android {
	              packagingOptions {
	              exclude 'LICENSE.txt'
	            }
	}

             ]]>
		</dependency>
	</android>
   <ios>
    	<class>edu_contentlib_component</class>
			<dependency>
				<![CDATA[
	            pod 'edu_contentlib_ios', '1.0.10'
    	         ]]>
			</dependency>
    </ios>
</component><component namespace="com.nd.sdp.component" name="el-smartlink" display="教育-二维码">
	<pages>
         <page type="cmp" name="test" display="二维码测试入口" toplevel="1" allow_guest="true"/>
         <page type="cmp" name="opensmartlink" display="打开smartlink页面" toplevel="2" allow_guest="true"/>
	</pages>
	
	<properties>
       <property type="bool" name="is_load_gif" displayName="启用gif加载动画" value="false"/>
	</properties>
	
	<events>
	</events>

	<handlers>
            <handler name="qrcodeShare" desc="分享二维码" receive_event="smartlink_qrcode_share"/>
            <handler name="qrcodeScan" desc="通过smartlink扫描二维码" receive_event="smartlink_qrcode_scan"/>
            <handler name="generateQrcodeBitmap" desc="生成二维码图片" receive_event="smartlink_generate_qrcode_image"/>
            <handler name="smartLink" desc="应用内扫码事件" receive_event="smartlink"/>
            <handler name="qrcodeShareItem" desc="获取二维码分享item信息" receive_event="smartlink_qrcode_share_item"/>
      		<handler name="generateLink" desc="生成链接" receive_event="smartlink_generate_link"/>
            <handler name="registerFlowControl" desc="注册限流页面代理" receive_event="register_flow_control"/>
	</handlers>

    <android>
		<class>com.nd.sdp.android.ele.smartlink.SmartLinkComponent</class>
		<dependency>
			<![CDATA[
              compile 'com.nd.sdp.android:ele-smart-link:13.0.12-rc.10'
         ]]>
          
		</dependency>
	</android>
  
    <scenes>
        <scene name="android.permission.WRITE_EXTERNAL_STORAGE" displayName="允许写入外部存储" describe="" isAsk="true" closeable="true" type="permission"/>
    </scenes>
  
  
	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
			<property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
		</properties>
	</runtime>
  
   <ios>
     <class>ELSmartLComponent</class>
		<dependency>
			<![CDATA[
            	pod 'el_smartlink_ios', '1.2.9'
             ]]>
		</dependency>
	</ios>
</component><component name="nduccomponent" display="用户登录1.1组件" namespace="com.nd.sdp.component" type="function_library">

    <runtime>
        <properties>
            <property name="lazy_init_android" displayName="是否开启Android延迟初始化" type="bool" value="true"/>
            <property name="lazy_init_ios" displayName="是否开启iOS延迟初始化" type="bool" value="true"/>
        </properties>
        <providers>
            <provider name="com.nd.sdp.component.uc" anClass="com.nd.sdp.uc.nduc.NdUcDataProvider" desc="组件id的provider" filter="com.nd.sdp.uc.provider.filter.SUBCOMPONENT" iosClass="NDUCComponentIdProvider"/>
        </providers>
        <activity_screen_orientations displayName="要替换界面方向白名单,要有申明才能替换，不支持新增加">
            <activity_screen_orientation value="com.nd.sdp.uc.nduc.view.agreement.NdUcAgreementPageActivity"/>
            <activity_screen_orientation value="com.nd.sdp.uc.nduc.view.container.NdUcContainerActivity"/>
           <activity_screen_orientation value="com.nd.sdp.uc.agreement.NdUcAgreementActivity"/>
          <activity_screen_orientation value="com.nd.sdp.uc.agreement.NdUcProtocolActivity"/>

            <activity_screen_orientation value="com.nd.sdp.uc.nduc.view.activity.NdUcListActivity"/>
            <activity_screen_orientation value="com.nd.sdp.uc.nduc.view.login.NdUcThirdLoginActivity"/>
            <activity_screen_orientation value="com.nd.sdp.uc.nduc.view.check.NdUcBindMobileActivity"/>
            <activity_screen_orientation value="com.nd.sdp.uc.nduc.view.check.NdUcBindPersonAccountActivity"/>
            <activity_screen_orientation value="com.nd.sdp.uc.nduc.view.check.NdUcCheckActivity"/>
            <activity_screen_orientation value="com.nd.sdp.uc.nduc.view.verificationcode.NdUcIdentifyCodeActivity"/>
            <activity_screen_orientation value="com.nd.sdp.uc.nduc.view.login.NdUcLoginActivity"/>
            <activity_screen_orientation value="com.nd.sdp.uc.nduc.view.register.NdUcRegisterActivity"/>
            <activity_screen_orientation value="com.nd.sdp.uc.nduc.view.resetpassword.NdUcResetPasswordActivity"/>
            <activity_screen_orientation value="com.nd.sdp.uc.nduc.view.check.NdUcModifyWeakPasswordActivity"/>
            <activity_screen_orientation value="com.nd.sdp.uc.nduc.view.check.NdUcModifyOriginPasswordActivity"/>
            <activity_screen_orientation value="com.nd.sdp.uc.nduc.view.activity.NdUcChooseOrgActivity"/>
            <activity_screen_orientation value="com.nd.sdp.uc.nduc.view.agreement.NdUcAgreementDialogActivity"/>
            <activity_screen_orientation value="com.nd.sdp.uc.nduc.ui.activity.UcChooseRegionCodeActivity"/>
            <activity_screen_orientation value="com.nd.sdp.uc.nduc.ui.activity.UcSettingActivity"/>
        </activity_screen_orientations>
    </runtime>

    <!-- 基础属性 -->
    <properties>
        <property name="business_type" displayName="业务类型" type="enum" value="0">
            <options multi="false">
                <option value="0">toB</option>
                <option value="1">toC</option>
            </options>
        </property>
		<property name="cloud_config_version" displayName="云端配置版本号" type="string" value="1.0.0" editorable="false">
        </property>
        <category name="功能">
            <property name="register" desc_false="关闭" desc_true="开启" displayName="注册功能" type="bool" value="false">
                <tip>开启，可以使用忘记密码功能；关闭，不可以使用；默认关闭。</tip>
            </property>
          	<property name="register_mode" displayName="注册模式" type="enum" value="">
                <options multi="true">
                        <option value="entrance">注册入口</option>
                        <option value="implicit">登录即注册</option>
              	</options>
            </property>
            <property name="forget_password" desc_false="关闭" desc_true="开启" displayName="忘记��码功能(将废弃)" type="bool" value="false">
                <tip>开启，可以使用忘记密码功能；关闭，不可以使用；默认关闭。(即将废弃,该功能配置移至:1.1组件-&gt;忘记密码，可配置找回密码支持方式)</tip>
            </property>
            <property name="show_customs_tips" desc_false="关闭" desc_true="开启" displayName="登录、注册页开启客服提示语" type="bool" value="false">
                <tip>开启，登录、注册页显示客服提示语；关闭，不可以使用；默认关闭。</tip>
            </property>
            <property name="email" desc_false="关闭" desc_true="开启" displayName="邮箱功能" type="bool" value="false">
                <tip>开启，可以使用邮箱注册、找回密码等；关闭，无法使用邮箱注册，找回密码。默认关闭。使用邮箱注册和忘记密码功能的前提是开启了对应功能。</tip>
            </property>
          	<property name="username" desc_false="关闭" desc_true="开启" displayName="未成年人功能" type="bool" value="false">
                <tip>开启，可以使用未成年人注册、找回密码等；关闭，无法使用未成年人注册，找回密码。默认关闭。使用未成年人注册和忘记密码功能的前提是开启了对应功能。</tip>
            </property>
          	<property name="reg_mode" desc_false="关闭" desc_true="开启" displayName="注册方式" type="enum" value="mobile">
                <options multi="true">
                        <option value="mobile">手机号注册</option>
                        <option value="email">邮箱注册</option>
                  		<option value="username">学生号注册</option>
              	</options>
            </property>
            <property name="mobile_region" desc_false="关闭" desc_true="开启" displayName="区号选择功能" type="bool" value="true">
                <tip>开启，可以使用其他地区的手机；关闭，只能使用大陆地区的手机。默认开启。</tip>
            </property>
          	<property type="bool" name="sms_login_fast" displayName="快速登录功能" desc_false="关闭" desc_true="开启" value="false">
              	<tip>允许配置快速登录页面</tip>
            </property>
            <property type="bool" name="auto_login" displayName="自动登录功能" desc_false="关闭" desc_true="开启" value="true">
              	<tip>开启，自动登录；关闭，每次关闭App，都需要再次登录。默认开启。</tip>
            </property>
        </category>
        <category name="游客模式">
          	<property type="bool" name="open_guest_mode" desc_true="开启" desc_false="关闭" displayName="游客模式" value="false">
              	<tip>开启，允许未登录直接进入主页面。</tip>
            </property>
            <property type="bool" name="open_token_guest_mode" desc_true="开启" desc_false="关闭" displayName="带token的游客模式" value="false"/>
            <property type="bool" name="skip_login_page_in_guest_mode" desc_true="开启" desc_false="关闭" displayName="跳过登录页" value="true"/>
            <property name="guest_mode_login_success_page" displayName="二次登录成功后跳转页面" type="page" os="all"/>
        </category>
		<category name="接口降级策略">
            <property name="degrade_strategy_count" displayName="触发降级错误次数" type="string" value="10">
                <tip>
                    获取userinfo/orginfo/nodeinfo出现超时或5xx错误达到该配置的错误数，则对接口进行降级。
                </tip>
            </property>
          	<property name="degrade_strategy_duration" displayName="降级时长（秒）" type="string" value="300">
                <tip>
                    降级时长，单位为秒，默认300秒。
                </tip>
            </property>
        </category>
        <category name="其他">
            <property name="virtual_org_code" displayName="虚拟组织编码" type="string" value="">
                <tip>
                    虚拟组织编码。兼容0.93的虚拟组织。如果App对应的机构是由虚拟组织转换而来，需要配置该属性，用于保证其他组件能正常使用。
                </tip>
            </property>
            <property type="bool" name="skip_login" desc_true="开启" desc_false="关闭" displayName="免登录（慎开）" value="false">
              	<tip>开启，免登录直接进入主页面。要开启此开关，请先咨询1.1小助手。</tip>
            </property>
          	<property name="default_mobile_region_code" displayName="默认手机归属地号码" type="string" value="">
                <tip>
                    如中国：+86。默认使用手机语言所在归属地。
                </tip>
            </property>
          	<property name="default_avatar_url" displayName="默认头像地址" type="string" value=""/>
        </category>

    </properties>

    <pages>
        <!-- 登录相关属性 -->
        <page name="login" allow_guest="true" display="登录" toplevel="2" type="cmp">
            <properties>
                <property name="login_mode" displayName="登录方式" type="enum" value="sms_login||mobile_login||email_login||org_login">
                    <options multi="true">
                        <option value="sms_login">短信登录</option>
                        <option value="mobile_or_email_login">手机号邮箱登录(已废弃)</option>
                        <option value="org_login">工号登录</option>
                        <option value="account_101_login">网教通号登录</option>
                        <option value="mobile_login">手机号登录</option>
                        <option value="email_login">邮箱登录</option>
                        <option value="email_verify_login">邮箱验证登录</option>
                      	<option value="mixed_login">密码登录</option>
                      	<option value="mobile_login_fusion">手机一键登录</option>
                    </options>
                    <tip>默认排序为：短信登录、手机号登录、邮箱登录、工号登录。可通过勾选先后顺序，自定义排序。</tip>
                </property>
              	<property name="show_area" displayName="组织归属地显示类型" type="enum" value="country||area">
                    <options multi="true">
                        <option value="country">国家</option>
                        <option value="area">行政区域</option>
                    </options>
                </property>

                <property name="email_suffix_list" displayName="邮箱后缀列表" os="all" type="string" value="@qq.com,@163.com,@126.com,@sina.com,@139.com,@sohu.com,@263.net,@vip.sina.com,@vip.163.com,@21cn.com,@tom.com,@foxmail.com,@189.cn,@yeah.net,@outlook.com,@yahoo.com,@hotmail.com,@gmail.com,@gmx.com,@aol.com,@zoho.com,@lycos.com,@inbox.com,@hushmail.com">
                    <tip>
                        邮箱后缀列表，用于邮箱自动补齐。以","分隔
                    </tip>
                </property>

                <property name="login_success_page" displayName="登录成功后跳转页面" os="all" type="page"/>

                <property name="only_org_code" displayName="工号登录唯一组织" type="string" value="">
                    <tip>
                        组织编码。如果配置，工号登录页面只能使用该组织下的工号登录；未配置，则跳转组织树选择组织。
                    </tip>
                </property>
              
              	<property name="agreement_success_page" displayName="用户协议同意后跳转页面" type="page" os="all">
                    <tip>
                        用户协议同意后跳转页面
                    </tip>
                </property>
              	<property name="agreement_refuse_page" displayName="用户协议不同意后跳转页面" type="page" os="all">
                	<tip>
                  		用户协议不同意后跳转页面
                  	</tip>
                </property>
				<property type="page" name="login_uri" os="all" displayName="接管登录页面">
                    <tip>允许配置自定义登录页面，如果不配置则默认跳转到组件内部的登录页面</tip>
                </property>
              	<property type="string" name="report_uri" value="" displayName="申诉跳转页面URL">
                    <tip>格式：http[s]://{host}/{path}?account_id={account_id}</tip>
                </property>
              
                <category name="登录后检测">
                    <property name="person_account_bind" displayName="101帐户强制绑定" type="enum" value="mobile">
                        <options multi="true">
                            <option value="mobile">手机</option>
                            <option value="email">邮箱</option>
                        </options>
                    </property>
                    <property name="org_bind_person_account" desc_false="关闭" desc_true="开启" displayName="组织帐户强制绑定101帐户" type="bool" value="false"/>
                    <property name="bind_person_account_mode" displayName="允许绑定101帐户的方式" type="enum" value="mobile">
                        <options multi="true">
                            <option value="mobile">手机</option>
                            <option value="email">邮箱</option>
                        </options>
                    </property>
                    <property name="third_automatically_generate_person_account" desc_false="关闭" desc_true="开启" displayName="第三方帐户自动生成101帐户" type="bool" value="false"/>
                    <property name="bind_org_account_mode" displayName="允许绑定组织帐户的方式" type="enum" value="org_user_code">
                        <options multi="true">
                            <option value="org_user_code">工号</option>
                            <option value="account_101">网教通号</option>
                        </options>
                    </property>
                    <property name="switch_org_account_mode" displayName="切换组织帐户方式" type="enum" value="1">
                        <options multi="false">
                            <option value="0">手动切换</option>
                            <option value="1">自动切换</option>
                        </options>
                    </property>
                  	<property name="auto_switch_org_account_tip" desc_false="关闭" desc_true="开启" displayName="自动切换组织帐户提示" type="bool" value="true"/>
              		<property name="force_org_account_before_login" desc_false="关闭" desc_true="开启" displayName="进入产品前强制绑定/加入组织" type="bool" value="true"/>
                    <property name="adding_org_account_mode" displayName="允许添加组织帐户的方式" type="enum" value="with_org_account||without_org_account">
                        <options multi="true">
                            <option value="with_org_account">已有组织帐号</option>
                            <option value="without_org_account">没有组织帐号</option>
                        </options>
                    </property>
                  	<property name="minor_account_mandatory_binding_guardianship" desc_false="关闭" desc_true="开启" displayName="未成年帐户强制绑定监护关系" type="bool" value="false"/>
              		<property name="allowed_join_node" desc_false="关闭" desc_true="开启" displayName="允许加入组织节点" type="bool" value="false"/>
              		<property name="real_name_auth" desc_false="关闭" desc_true="开启" displayName="实名认证" type="bool" value="true"/>
                    <property name="allowed_skip_change_psw_on_time" desc_false="关闭" desc_true="开启" displayName="允许跳过定期改密" type="bool" value="true"/>
                    <property name="allowed_skip_check_password" desc_false="关闭" desc_true="开启" displayName="允许跳过弱密码检测" type="bool" value="false"/>
                    <property name="allowed_skip_days" type="int" displayName="允许跳过弱密码提示天数" value="7">  
		   				<tip>请填写天数，范围为2-30天</tip>
        			</property>
                  	<property name="allowed_skip_bind_mobile_and_email" desc_false="关闭" desc_true="开启" displayName="允��跳过绑定邮箱/手机" type="bool" value="false"/>
                    <property name="allowed_skip_bind_personal_account" desc_false="关闭" desc_true="开启" displayName="允许跳过绑定101帐户" type="bool" value="false"/>
                    <property name="allowed_skip_update_original_password" desc_false="关闭" desc_true="开启" displayName="允许跳过修改初始密码" type="bool" value="false"/>
              </category>
            </properties>
        </page>

        <!-- 安全中心相关属性 -->
        <page name="account_security" allow_guest="false" display="安全中心" type="cmp">
            <properties>
                <property name="third_bind" desc_false="关闭" desc_true="开启" displayName="允许第三方绑定" type="bool" value="false"/>

                <property name="login_records" desc_false="关闭" desc_true="开启" displayName="登录记录" type="bool" value="false"/>

                <property name="login_devices" desc_false="关闭" desc_true="开启" displayName="登录设备" type="bool" value="false"/>
            </properties>
        </page>

        <!-- 忘记密码相关属性 -->
        <page name="forget_password" allow_guest="true" display="忘记密码" type="cmp">
            <properties>
                <property name="hotline" displayName="人工申诉电话号码" type="string" value="">
                    <tip>配置人工申诉电话号码，开启人工申诉功能</tip>
                </property>
                <property name="find_org_account_password_mode" displayName="允许找回组织帐户密码的方式" type="enum" value="org_user_code">
              	    <options multi="true">
                	    <option value="org_user_code">工号</option>
                	    <option value="account_101">网教通号</option>
              	    </options>
                </property>
               	<property name="find_password_account_type" displayName="允许找回密码的帐户类型" type="enum" value="personal||org">
              	    <options multi="true">
                	    <option value="personal">101帐户</option>
                	    <option value="org">组织帐户</option>
              	    </options>
                </property>
            </properties>
        </page>

        <!-- 注册 -->
        <page name="register" allow_guest="true" display="注册" type="cmp"/>
        <!-- 登出 -->
        <page name="logout" allow_guest="true" display="登出" type="cmp"/>
        <!-- Web登录页 -->
        <page type="cmp" name="web_login" display="Web登录页" toplevel="0" allow_guest="true"/>
      	<!-- 第三方登录实名页 -->
      	<page name="third_login_binding_account" allow_guest="true" display="第三方登录实名页" type="cmp"/>
      	<!-- 登录后检测 -->
      	<page name="check_process" allow_guest="true" display="登录后检测页" type="cmp"/>
    </pages>
  
    <events>
    </events>
    
    <handlers>
        <handler name="init" desc="初始化" receive_event="event_adapter_uc_init"/>
    </handlers>
    <android>

        <class>com.nd.sdp.uc.nduc.NdUcComponent</class>
        <dependency>
          	<![CDATA[
			def nducComponent = "0.2.3.1.nduc.release"
            def ucAgree = "3.0.4-release.2"

			implementation "com.nd.sdp.uc:nduc_agreement:${ucAgree}"
			implementation "com.nd.sdp.uc:nduc_agreement_net:${ucAgree}"
            implementation "com.nd.sdp.uc:nd_uc_component:${nducComponent}"
            configurations.all {
                  resolutionStrategy {
                      force "com.nd.sdp.uc:nd_uc_component:${nducComponent}"
                  }
              }
            ]]>
        </dependency>  
      <groovy>
          <![CDATA[
				android {
                  dataBinding {
                      enabled true
                  }
			}
          ]]>
	   </groovy>
       <scenes>
           <scene name="android.permission.INTERNET" displayName="网络权限" describe="用户登录网络请求能力需要" isAsk="true" closeable="true" type="permission"/>
           <scene name="android.permission.ACCESS_WIFI_STATE" displayName="WIFI状态" describe="用户登录网络请求能力需要" isAsk="true" closeable="true" type="permission"/>
           <scene name="android.permission.ACCESS_NETWORK_STATE" displayName="网络状态" describe="用户登录网络请求能力需要" isAsk="true" closeable="true" type="permission"/>
        </scenes>
    </android>

    <ios>
        <class>NDUCCComponent</class>

        <dependency>
            <![CDATA[
				pod 'NDUCCComponent', '1.0.359'
             ]]>
        </dependency>

    </ios>
</component><component namespace="com.nd.sdp.component" name="common-gradle" display="公共脚本">
    <pages/>
    <properties/>
    <events/>
    <handlers/>
    <runtime>
        <properties>
            <property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
            <property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
        </properties>
        <gradles name="library-analysis-plugin">
            <android-project-gradle-classpaths displayName="plugin for dependencies tree">
                <classpath value="com.github.znyang:library-analysis:0.2.3-rc8"/>
            </android-project-gradle-classpaths>
            <android-app-gradle-applys displayName="plugin for dependencies tree">
                <apply value="com.zen.lib.analysis"/>
            </android-app-gradle-applys>
            <android-app-gradle-appends displayName="plugin for dependencies tree">
                libReport {
                    rtlFix = project.hasProperty("isUseFixRtl") ? (project.property("isUseFixRtl") as String).toBoolean() : false
                    output = [ "txt" ]
                    outputPath = "reports/zen/analysis/library/compile"
                }
                // tree.txt -&gt; assets 工厂构建过程需要
                task apfCopyDependsLibReport(type: Copy) {
                    from "${buildDir}/reports/zen/analysis/library/compile/Tree.txt"
                    into 'assets'
                }
                // 建立task关联，libReport -&gt; copyReport -&gt; preBuild
                afterEvaluate {
                    def keyWord = "ReleaseCompileClasspath"
                    def compileTask = this.tasks.find { it.name.endsWith(keyWord) }
                    if (compileTask) {
                        preBuild.dependsOn apfCopyDependsLibReport
                        apfCopyDependsLibReport.dependsOn compileTask
                    } else {
                        println("ERROR: Not found task which contains ${keyWord}.")
                    }
                }
            </android-app-gradle-appends>
        </gradles>
        <gradles name="replugin">
       
			<android-app-gradle-before-dependency-appends displayName="plugin for 360 replugin">
				Configuration compileConf = project.configurations.getByName(JavaPlugin.COMPILE_CONFIGURATION_NAME)
				def ndPluginConfiguration = project.configurations.create("ndPlugin")
						.setTransitive(true)
						.setVisible(true)
						.setDescription("Plugin")
				compileConf.extendsFrom(ndPluginConfiguration)
			</android-app-gradle-before-dependency-appends>
          
        </gradles>
      
      	<gradles name="dependClassAnalysis">
            <android-project-gradle-classpaths displayName="plugin for depend analysis">
                <classpath value="com.nd.sdp.android:apf-android-plugin-tool:2.0.5-master.1"/>
            </android-project-gradle-classpaths>
            <android-app-gradle-applys displayName="plugin for depend analysis">
                <apply value="com.nd.apf.tool"/>
            </android-app-gradle-applys>
            <android-app-gradle-appends displayName="plugin for depend analysis">
                    //rootProject.isComponentTest是模板工程的定义的变量，true 表示是功能或集成测试，false表示应用
					apfPluginTool{
						dest = "应用工厂类方法扫描插件"
						enableScanRef = rootProject.isComponentTest
                        enableSearchDevTool = rootProject.isComponentTest
						debugScanRef = false
                        debugSearchDevTool = false
						openPrintNoScan = false
						openPrintScan = false
						excludeBeginAarName = ["com.jakewharton","com.nineoldandroids","com.afollestad","com.github","com.jakewharton","commons-io","com.nostra13.universalimageloader","com.alibaba:fastjson","com.github.bumptech.glide","log4j:log4j","io.reactivex:rxjava","com.fasterxml.jackson","com.squareup","org.","com.j256","com.facebook","com.google.android","androidx"]
						excludeBeginClassSampleName = []
						excludeContainClassPath = ["com/jakewharton","com/nineoldandroids","com/afollestad","com/github","com/jakewharton","commons-io","com/nostra13/universalimageloader","com/alibaba/fastjson","com/github/bumptech/glide","com.fasterxml.jackson","com/squareup","org/","com/j256","com/facebook","log4j/","io.reactivex/rxjava","android/databinding","com/handmark/pulltorefresh","com/iflytek","com/amap/api","com/airbnb/lottie","pl/droidsonroids/gif"]
						lookupMethod = ["invokevirtual\tcom.nd.smartcan.permission.FuncsNeedPermision.call","invokevirtual\tcom.nd.smartcan.permission.FuncsNeedPermision.dial","invokevirtual\tcom.nd.smartcan.commons.util.system.dial","invokevirtual\tcom.nd.smartcan.commons.util.system.call","invokevirtual\tcom.nd.component.MainContainerActivityHelper.requestPermission","invokevirtual\tcom.nd.smartcan.appfactory.script.webkit.WebViewActivity","invokevirtual\tcom.nd.smartcan.appfactory.AppFactory.addReactPackage","invokevirtual\tcom.nd.smartcan.appfactory.AppFactory.addReactViewManagerCreator","invokestatic\tcom.nd.smartcan.commons.util.helper.Tools.calculateUniqueDeviceId","invokestatic\tcom.nd.smartcan.commons.util.helper.Tools.getPhoneIMEIorESN","invokestatic\tcom.nd.smartcan.commons.util.security.AES.encrypt","invokestatic\tcom.nd.smartcan.commons.util.security.AES.decrypt","invokestatic\tcom.nd.smartcan.datalayer.tools.SdkEnvironment.getUUID","invokestatic\tcom.nd.smartcan.commons.util.helper.Tools.getUniqueIdentification","invokestatic\tcom.nd.smartcan.commons.util.system.getUniqueIdentification","invokestatic\tcom.nd.smartcan.commons.util.system.getUniqueIdHaveMd5","invokestatic\tcom.nd.android.smartcan.network.util.HttpsConnectionHelper.getAllHostsValidVerifier"]
					}
            </android-app-gradle-appends>
        </gradles>
    </runtime>
  
  <android> 
    <groovy>
       <![CDATA[
// StrandHogg漏洞修复配置--开始
def appFile = new File(new File("app").absolutePath, "assets/app_factory/app/app.json")

if (appFile.exists()) {
    def config = new JsonSlurper().parse(appFile)
    if (!config) {
        println "文件" + appFile + "解析到的数据为空"
        return
    }
    println "=======开始检测android:taskAffinity属性风险配置（StrandHogg漏洞修复配置）======"
    if (!config.containsKey("is_open_task_affinity")) {
        println "app.json 不包含is_open_task_affinity标签，无需配置"
        return
    }
    def taskOpen = config.getAt("is_open_task_affinity")
    if (taskOpen == null){
        println "is_open_task_affinity为空，无需配置"
        return
    }
    println "===是否开启修复漏洞： === "+ taskOpen

    if (taskOpen.equals("true") || taskOpen==true){
        // 目前没有开发自定义的口，这里都是为空
        def taskValue = config.getAt("task_affinity_value")
        if (taskValue == null){
            taskValue = ""
        }
        println "===自定义task_affinity值 为：=== "+ taskValue
        modifyActivityTaskAffinity(taskValue)
    }else {
        println "StrandHogg漏洞修复没有开启，无需配置"
    }

}

def modifyActivityTaskAffinity(taskValue){
    println "=====StrandHogg安全漏洞修复====="
    android.applicationVariants.all { variant ->

        variant.outputs.each { output ->
            output.processResources.doFirst { pm ->

                println "=====StrandHogg安全漏洞修复，android:taskAffinity属性修改=====taskValue="+taskValue
                String manifestPath = output.processResources.manifestFile;
                def manifestContent = file(manifestPath).getText()
                def android = new groovy.xml.Namespace('http://schemas.android.com/apk/res/android', 'android')

                def parser = new XmlParser(false, true)
                def manifest = parser.parseText(manifestContent)
                def app = manifest.'application'[0]

                if (app == null){
                    println "=====application节点为空，退出====="
                    return
                }

                // StrandHogg安全漏洞解决方案
                // ① application下新增taskAffinity属性，并置空，且activity无须设置taskAffinity属性，若设置，也置空
                // ② 或者将所有activity的taskAffinity属性置空，若无属性，新增置空属性
                // 这里选择方案①（这里预留属性值配置，之后规则可能会修改，所以taskValue预留）
                String applicationTask = app.attribute(android.taskAffinity)
                if (applicationTask == null){
                    println "application下无属性taskAffinity，新增属性"
                    app.attributes().put("android:taskAffinity",taskValue)
                }else {
                    println "application下已定义属性taskAffinity，且值为： "+ value + ",需修改"
                    app.attributes().put(android.taskAffinity,taskValue)
                }

                app.'activity'.each{act->
                    String name = act.attribute(android.name)
                    String value = act.attribute(android.taskAffinity)
                    if (value != null){
                        println "activit类 "+name + " 已定义属性taskAffinity，且值为： "+ value + ",需修改"
                        act.attributes().put(android.taskAffinity,taskValue)
                    }

                }

                def serialize = groovy.xml.XmlUtil.serialize(manifest)
                file(manifestPath).write(serialize)
            }
        }
    }
}

// StrandHogg漏洞修复配置--结束


// 已删除组件功能开发--开始
import groovy.json.JsonSlurper
gradle.buildFinished {
    println "============buildFinished 构建结束============="

    println "----------业务组件构建--已删除移动组件构建警告---------"
    println "====开始查询组件依赖列表===="
    try {
        def aarFile = new File(new File("app").absolutePath, "build/reports/zen/analysis/library/compile/AarInfo.json")
//        def aarFile = new File(new File("outputs").absolutePath, "AarInfo.json")
        if (!aarFile.exists()){
            println "===已删除组件依赖分析AarInfo.json 不存在============"
            return
        }
        if (aarFile.length() == 0){
            println "aarinfo.json 文件数据为空"
            return
        }
        def aarjson = new JsonSlurper().parse(aarFile)
        if (aarjson == null){
            println "aarinfo.json 数据为空"
            return
        }
        def module = aarjson['module-name']
        if (module == null){
            println "aarinfo.json module-name 字段数据为空"
            return
        }

        def aarMap = [:]
        module.each {key, value ->
            String aar = key
            String[] str = aar.split(":")
            if (str != null && str.size() > 1) {
                String aarName = str[0] + ":" + str[1]
                String version = ''
                if (str.size() > 2){
                    version = str[2]
                }else {
                    println aarName+"没有对应的版本号"
                }
                aarMap.put(aarName, version)
            }
        }

        println "====依赖列表查询结束，解析列表==="
        println "====依赖列表如下====：\n"+ aarMap
        // 需要查询的aar列表（查询是否有已删除的aar）
        List<String> tempRequestList = new ArrayList<>()

        // 第三方或者不在白名单的aar
        List<String> otherList = new ArrayList<>()

        // aar白名单，如果是以这些字符开头，则为公司的aar，如果不在白名单内，则有可能是第三方aar或者其他，需要继续筛选
        def whiteList = ['nd.sdp.','com.nd','com.eln.','com.zen.']
        // 所有依赖的aar
        List<String> allDependencyList = new ArrayList<>()
        println "====过滤白名单aar和非白名单aar===="
        // 筛选过滤
        aarMap.each {key, value ->
            String name = key
            allDependencyList.add(name)
            // 筛选出公司的aar
            whiteList.each {white->
                if (name.startsWith(white) && !tempRequestList.contains(key)){
                    tempRequestList.add(key)
                }
            }
        }

        // 筛选出剩余的aar
        def commons = allDependencyList.intersect(tempRequestList)
        otherList = allDependencyList.plus(tempRequestList)
        otherList.removeAll(commons)

        println "====非白名单遗漏数据过滤===="
        def componentUrl = "https://app-factory-dependency-service.sdp.101.com"

        // 筛选出非白名单的依赖需要再和服务端请求的总的aar列表做比较，看是否有遗漏的aar
        // 存储在服务端中的aar列表
        def allAarList = getAllAarComponent(componentUrl)
        // 所有的aar和之前筛选出来的非白名单组件的交集
        def third = allAarList.intersect(otherList)
        println "剩余的aar列表遗漏数据如下：\n"+ third
        // 如果有遗漏，则加入到requestList列表中
        if (third != null && third.size() > 0){
            tempRequestList.addAll(third)
            otherList.removeAll(third)
        }
        List<String> requestList = new ArrayList<>()
        tempRequestList.each {data ->
            String aar
            if (data.endsWith(":")){
                aar = data+aarMap.get(data)
            }else {
                aar = data +":"+aarMap.get(data)
            }

            requestList.add(aar)
        }

        println "====依赖列表解析结束，获取需要验证的aar列表===="
        println "====需要验证的aar列表如下====：\n"+ requestList
        println "====无需验证的aar列表如下（第三方或者是不在白名单内的组件）====：\n"+ otherList


        println "====总依赖列表数量====："+ aarMap.size()
        println "====需要上传的依赖列表数量====："+ requestList.size()
        println "====其他依赖数量====："+ otherList.size()

        def postJson = JsonOutput.toJson(requestList)
        String url = componentUrl+"/v0.2/androidMobileAar/invalid_aar_infos"
        def delStr = postData(url, postJson)

        if (delStr == null || delStr.toString().length() <= 2){
            println "===无已删除的aar，无需上报，退出==="
            return
        }
        println "[warn] ====存在已删除的aar组件，请及时查看修改，aar信息如下====："+ JsonOutput.toJson(delStr)


        def versionFile = new File(new File("target").absolutePath, "variables.json")
        if (!versionFile.exists()) {
            println "variables.json文件不存在"
            return
        }
        println "====上报已删除aar至服务端===="
        def json = new JsonSlurper().parse(versionFile)
        if (json != null){
            def version = json['build_version_code']
            def name = json['build_app_name']
			def factoryid = json['factoryId']
			def versionLable = json['build_version_label']
            def versionId = version
            def build_time = System.currentTimeMillis()

            String delUrl = componentUrl + "/v0.2/mobileBuild/product"

            def map = [:]
            map.put("name",name)
            map.put("version",versionId)
			map.put("version_lable",versionLable)
			map.put("factory_id",factoryid)
            map.put("app_type","android")
            map.put("build_time",build_time)
 			println "==上报部分参数==="+JsonOutput.toJson(map)
            map.put("component_deleted",delStr)
            String delJson = JsonOutput.toJson(map)

            def result = postData(delUrl,delJson)

            println "==上报结束==="
        }else {
            println "==variables.json 不存在==="
        }


    }catch (Exception e) {
        println "------------失败---------"+e.getMessage()
    }
}

// 上传数据
def postData(String want_up_url,String json_data){
    try {

        URL url = new URL(want_up_url);
        HttpURLConnection httpURLConnection = (HttpURLConnection) url.openConnection();

        // 提交模式
        httpURLConnection.setRequestMethod("POST");
        //连接超时 单位毫秒
        httpURLConnection.setConnectTimeout(10000);
        //读取超时 单位毫秒
        httpURLConnection.setReadTimeout(2000);
        // 发送POST请求必须设置如下两行
        httpURLConnection.setDoOutput(true);
        httpURLConnection.setDoInput(true);
        httpURLConnection.setRequestProperty("Content-Type","application/json")
        // 获取URLConnection对象对应的输出流
        PrintWriter printWriter = new PrintWriter(httpURLConnection.getOutputStream());
        // 发送请求参数
        //post的参数 xx=xx&yy=yy
        printWriter.write(json_data);
        // flush输出流的缓冲
        printWriter.flush();
        //开始获取数据
        BufferedInputStream bis = new BufferedInputStream(httpURLConnection.getInputStream());
        ByteArrayOutputStream bos = new ByteArrayOutputStream();
        int len;
        byte[] arr = new byte[1024];
        while ((len = bis.read(arr)) != -1) {
            bos.write(arr, 0, len);
            bos.flush();
        }
        def json = new JsonSlurper().parseText(bos.toString())
 		println "触发上报任务------------成功---------"
        return json
       
    } catch (Exception e) {
        println "[Warn]触发上报任务------------失败---------"
        e.printStackTrace();
    }
    return ""
}

// 获取所有aar列表数据
def getAllAarComponent(componentUrl) {
    List<String> aarList = new ArrayList<>()
    try {
        String requestUrl = componentUrl+"/v0.2/androidMobileAar/all_aar"
        URL url = new URL(requestUrl)
        HttpURLConnection conn = (HttpURLConnection) url.openConnection()
        conn.setRequestMethod("GET")
        conn.setConnectTimeout(5000)
        conn.setReadTimeout(5000)
        StringBuilder sb = new StringBuilder()
        if (conn.getResponseCode() == 200) {
            InputStream is = conn.getInputStream()
            //面对获取的输入流进行读取
            BufferedReader br = new BufferedReader(new InputStreamReader(is))
            String line;
            while ((line = br.readLine()) != null) {
                sb.append(line)
            }
        } else {
            println "[warn] getAllAarComponent =====： " + conn.getResponseCode()
        }

        def parser = new JsonSlurper()
        aarList = parser.parseText(sb.toString())
//        println "[info] getAllAarComponent 获取的值： " + aarList
        return aarList
    } catch (Exception e) {
        println "[Error] getAllAarComponent 获取所有aar列表异常：" + e.getMessage()
    }

    return aarList


}

// 已删除组件功能开发--结束
      
      	  ]]>
      
    </groovy>
    
  </android>
</component><component namespace="com.nd.sdp.component" name="groupentrycondition" display="入群条件插件" type="function_library">
	<pages> </pages>
	<properties> </properties>
	<events> </events>
	<handlers>
		<handler name="imPlugInStartupEvent" desc="用于IM插件启动(注意实现imPlugInStartup方法)" receive_event="im_PlugIn_Startup_Event"/>
	</handlers>
	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
			<property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
		</properties>
	</runtime>
	<android>
		<class>nd.sdp.android.im.group_joinpolicy.appfactory.GroupJoinPolicyComponent</class>
			<dependency>
			<![CDATA[ 
			compile ("com.nd.android.sdp.im:im_group_join_policy:23.12.129.release")
 			]]>
			</dependency>
	</android>
	<ios>
		<class>IMJoinGroupComponent</class>
		<dependency>
		<![CDATA[ pod 'IMJoinGroupComponent', '0.0.12' ]]>
		</dependency>
	</ios>
</component><component namespace="com.nd.sdp.component" name="e-teacher-studio" display="强师-名师工作室">
	<pages>
    	<page type="cmp" name="debug" display="调测页面" toplevel="1" allow_guest="true"/>
      	<page type="cmp" name="inst_studio_home" display="资源号主页" toplevel="2" allow_guest="true"/>
      	<page type="cmp" name="expert_studio_home" display="专家工作室主页" toplevel="2" allow_guest="true"/>
      	<page type="cmp" name="teacher_studio_home" display="名师工作室主页" toplevel="2" allow_guest="true"/>
      	<page type="cmp" name="studio_news_detail" display="工作室资讯详情" toplevel="2" allow_guest="true"/>
      	<page type="cmp" name="studio_notice_detail" display="工作室公告详情" toplevel="2" allow_guest="true"/>
      	<page type="cmp" name="mine_train_list" display="我的培训" toplevel="2"/>
      	<page type="cmp" name="mine_train_hours" display="我的培训学时" toplevel="2"/>
      	<page type="cmp" name="mine_studio_list" display="我的教研组列表" toplevel="2"/>
      	<page type="cmp" name="mine_profile" display="个人信息" toplevel="2"/>
      	<page type="cmp" name="complete_mine_profile" display="完善个人信息" toplevel="2"/>
      	<page type="cmp" name="studio_group_selector" display="教研组选择器" toplevel="2"/>
      	<page type="cmp" name="common_group_selector" display="普通群选择器" toplevel="2"/>
	</pages>
	
	<properties>
	</properties>
	
	<events>
		<event name="e_teacher_studio_clean_provider_cache" desc="清理 DataProvider 缓存。"/>
	</events>

	<handlers>
	</handlers>

	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
			<property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
		</properties>
      	<providers>
        	<provider name="com.nd.sdp.component.e-teacher-studio.provider" filter="com.nd.sdp.component.e-teacher-studio.provider.filter" desc="名师工作室" anClass="com.nd.sdp.studio.teacher.support.TeacherStudioDataProvider" iosClass="ETSAllStudiosDataProvider"/>  
          	<provider name="com.nd.sdp.component.e-inst-studio.provider" filter="com.nd.sdp.component.e-inst-studio.provider.filter" desc="机构工作室" anClass="com.nd.sdp.studio.teacher.support.InstStudioDataProvider" iosClass="ETSInstStudioDataProvider"/>
          	<provider name="com.nd.xst.teacher.train.provider" filter="com.nd.xst.teacher.train.provider.filter" desc="教师培训" anClass="com.nd.sdp.studio.teacher.support.TeacherTrainDataProvider" iosClass="ETSTeacherTrainDataProvider"/>
          	<provider name="com.nd.sdp.component.e-teacher-studio-search.provider" filter="com.nd.sdp.component.e-teacher-studio-search.provider.filter" desc="教研工作室搜索" anClass="com.nd.sdp.studio.teacher.support.TeacherStudioSearchProvider" iosClass="ETSStudioSearchViewProvider"/>
          	<provider name="com.nd.sdp.component.e-inst-studio-search.provider" filter="com.nd.sdp.component.e-inst-studio-search.provider.filter" desc="机构工作室搜索" anClass="com.nd.sdp.studio.teacher.support.InstStudioSearchProvider" iosClass="ETSInstSearchViewProvider"/>
        </providers>
	</runtime>
  
  	<android>
		<class>com.nd.sdp.studio.teacher.BizComponent</class>
		<dependency>
		<![CDATA[
			compile('com.nd.sdp.android:e-teacher-studio:0.0.1-beta.172') 
		]]>
		</dependency>
      	<scenes>
   			<scene name="android.permission.CAMERA" displayName="相机权限" describe="添加附件时拍摄功能需要" isAsk="true" closeable="true" type="permission"/>
			<scene name="android.permission.RECORD_AUDIO" displayName="录音权限" describe="添加附件时录音功能需要" isAsk="true" closeable="true" type="permission"/>
    		<scene name="android.permission.flashlight" displayName="手机闪光灯权限" describe="相机拍摄功能需要" isAsk="true" closeable="true" type="permission"/>  
          	<scene name="android.permission.read_phone_state" displayName="读取手机状态权限" describe="读取设备状态需要" isAsk="true" closeable="true" type="permission"/>
        </scenes>
	</android>
  
  	<ios>
    	<class>ETSTeacherStudioComponent</class>
    	<dependency>
    	<![CDATA[
			pod 'e_teacher_studio_ios', '0.2.45-release15'
        ]]>
    	</dependency>
	</ios>
</component><component namespace="com.nd.sdp.component" name="social3-common" display="Social三组公共库">
	<pages>
	</pages>
	
	<properties>
	</properties>
	
	<events>
	</events>

	<handlers>
	</handlers>

	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
			<property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
		</properties>
	</runtime>
  <android>
        <class/>
		<dependency>
			<![CDATA[
				compile ('com.nd.sdp.android.social3:sensitive-support:1.2.0-x.155704')
                compile ('com.nd.sdp.android.social3:blacklist-support:1.2.0-x.155704')
                android {
                    compileOptions {
                        sourceCompatibility 1.8
                        targetCompatibility 1.8
                    }
                }
             ]]>
		</dependency>
    </android>
  <ios>
		<class>Social3Component</class>
        <dependency>
            <![CDATA[
                      pod 'Social3Common', '1.0.13'
             ]]>
        </dependency>
	</ios>
</component><component namespace="com.nd.sdp.component" name="el-eye-comfort" display="教育-护眼组件">
	<pages>
      <page type="cmp" name="settings" display="护眼设置" toplevel="1" allow_guest="true"/>
	</pages>
	
	<properties>
      <property type="bool" name="open_reminder" displayName="开启护眼定时提醒" value="false">
        <tip>默认关闭，开启后将添加30分钟间隔提醒（只在用户允许浮动窗口权限的情况下生效）</tip>
      </property>
      <property type="int" name="debug_remind_time" displayName="调试提醒时间（分钟）" value="0"/>
      <property type="bool" name="ipad_orientation_all" displayName="是否允许iPad横竖屏切换" value="true"/>
	</properties>
	
	<events>
	</events>

	<handlers>
	</handlers>

	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="false"/>
			<property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="false"/>
		</properties>
	</runtime> 

  	<android>
		<class>com.nd.sdp.android.eye.comfort.EyeComfortComponent</class>
		<dependency>
			<![CDATA[
			    compile 'com.nd.sdp.android:eye-comfort-component:0.2-rc03'
             ]]>
		</dependency>
        <groovy>
         	<![CDATA[
                android {
					packagingOptions {
						exclude 'META-INF/rxjava.properties'
    				}
                }
             ]]>
		</groovy>
        <scenes>
           <scene name="android.permission.SYSTEM_ALERT_WINDOW" displayName="悬浮窗权限" describe="用户使用产品超过指定时间时提醒用户；开启护眼时显示全局蒙版" isAsk="true" closeable="true" type="permission"/> 
        </scenes>
	</android>  
  
    <ios>
		<class>ECIEyeComfortComponent</class>
		<dependency>
			<![CDATA[
            pod 'eye_comfort_ios', '0.0.17' 
             ]]>
		</dependency>
	</ios>
</component><component namespace="com.nd.sdp.component" name="x-app-stat" display="X学习云-应用统计">
    <pages>
        <page type="cmp" name="send" display="调试事件" toplevel="1" allow_guest="true"/>
        <page type="cmp" name="log" display="日志信息" toplevel="1" allow_guest="true"/>
    </pages>
    <properties>
        <property type="bool" name="ext_umeng" displayName="友盟(QT)统计">
            <dependency>
                <component namespace="com.nd.xst" name="mob-stat-umeng"/>
            </dependency>
        </property>
        <property type="bool" name="ext_bd" displayName="百度统计">
            <dependency>
                <component namespace="com.nd.xst" name="mob-stat-baidu"/>
            </dependency>
        </property>
        <property type="bool" name="ext_sa" displayName="神策分析">
            <dependency>
                <component namespace="com.nd.xst" name="mob-stat-sa"/>
            </dependency>
        </property>
        <property type="bool" name="apm_bugly" displayName="Bugly监控">
            <dependency>
                <component namespace="com.nd.xst" name="mob-stat-bugly"/>
            </dependency>
        </property>
        <property type="bool" name="apm_ty" displayName="听云">
            <dependency>
                <component namespace="com.nd.xst" name="mob-stat-ty"/>
            </dependency>
        </property>
        <property type="string" name="ios.umeng.key" displayName="友盟-iOS-KEY"/>
        <property type="string" name="ios.baidu.stat_id" displayName="百度-iOS-KEY"/>
        <property type="string" name="ios.baidu.stat_id_debug" displayName="百度-iOS-KEY（非AppStore版本使用）" value="9607ffd06a"/>
        <property type="string" name="ios.bugly.key" displayName="iOS bugly id" value="1bb6018862"/>
        <property type="bool" name="not_debuggable" displayName="安卓-模拟Release" value="false"/>
        <property type="txt" name="event_convert" displayName="埋点数据转发规则(json)"/>
        <property type="txt" name="event_convert_file" displayName="安卓-转发规则文件地址(json)" value="http://git.sdp.nd/mobile/res/raw/master/x-study/event_convert.json"/>
        <property type="string" name="h5_page_host" displayName="需统计的H5域名" value="h5.ykt.eduyun.cn"/>
        <property type="bool" name="debug_log" displayName="调试模式" value="false"/>
        <property type="string" name="single_value_key" displayName="单参数默认标签" value="value"/>
        <property type="enum" name="um_launch" displayName="友盟冷启动分析" value="0">
            <options multi="false">
                <option value="0">开起</option>
                <option value="1">关闭</option>
            </options>
        </property>
    </properties>
    <events/>
    <handlers>
        <handler name="mob_stat_high_priority_events" desc="添加优先上报事件" receive_event="mob_stat_high_priority_events"/>
        <handler name="xst_put_global_property" desc="添加全局变量" receive_event="xst_put_global_property"/>
        <handler name="xst_remove_global_property" desc="移除全局变量" receive_event="xst_remove_global_property"/>
        <handler name="uc_on_login_success" desc="登录成功事件" receive_event="uc_on_login_success"/>
        <handler name="uc_on_logout" desc="登出成功事件" receive_event="uc_on_logout"/>
        <handler name="not-ios://onDataAnalyticsEvent" desc="转发埋点数据" receive_event="appfactory_data_analytics_event"/>
        <handler name="not-ios://userAgreeProtocol" desc="同意用户协议事件" receive_event="KEY_USER_ACCEPT_AGREEMENT_EVENT_ASYNC"/>
        <handler name="not-ios://xstDataUpload" desc="X学习业务数据上报" receive_event="event_xst_stat_data_upload"/>
        <handler name="not-ios://register_flow_control" desc="注册限流页面代理" receive_event="register_flow_control"/>
        <handler name="not-ios://onReveiveXCloudH5TraceEvent" receive_event="xcloud_h5_page_trace" desc="H5页面访问数据上报"/>
        <handler name="ios://onReveiveCloudAtlasEvent" receive_event="appfactory_data_analytics_event" desc="收到云图埋点事件"/>
        <handler name="ios://onReveiveXSTStatEvent" receive_event="event_xst_stat_data_upload" desc="X学习业务数据上报"/>
        <handler name="ios://onReveiveXCloudH5TraceEvent" receive_event="xcloud_h5_page_trace" desc="X学习业务H5页面访问数据上报"/>
        <handler name="onStartLogPageEvent" desc="进入页面事件" receive_event="xst_start_log_page_event"/>
        <handler name="onEndLogPageEvent" desc="离开页面事件" receive_event="xst_end_log_page_event"/>
    </handlers>
    <android>
        <class>com.nd.mob.stat.MobStatComponent</class>
        <scenes>
            <scene name="android.permission.ACCESS_NETWORK_STATE" describe="检查网络状态" isAsk="false" closeable="false" type="permission" isAdd="false"/>
            <scene name="android.permission.ACCESS_WIFI_STATE" describe="检查WIFI状态" isAsk="false" closeable="false" type="permission" isAdd="false"/>
            <scene name="android.permission.READ_EXTERNAL_STORAGE" describe="访问外部存储数据" isAsk="false" closeable="false" type="permission" isAdd="false"/>
            <scene name="android.permission.WRITE_EXTERNAL_STORAGE" describe="应用统计数据写入外部存储" isAsk="false" closeable="false" type="permission" isAdd="false"/>
            <scene name="android.permission.ACCESS_FINE_LOCATION" describe="检查接入点" isAsk="false" closeable="false" type="permission" isAdd="false"/>
            <scene name="android.permission.BLUETOOTH" describe="检测蓝牙" isAsk="false" closeable="false" type="permission" isAdd="false"/>
            <scene name="android.permission.GET_TASKS" describe="获取设备运行任务" isAsk="false" closeable="false" type="permission" isAdd="false"/>
        </scenes>
        <dependency>
            <![CDATA[
            compile 'com.nd.mob.stat:x-stat:1.0.2-rc08'
        ]]>
        </dependency>
        <groovy>
            <![CDATA[
                        // 用于添加scheme到manifest，支持圈选埋点
                        apply from: "http://git.sdp.nd/mobile/res/raw/master/x-study/5.1.3/replace_files-scheme_assets.gradle"
                        // 优化工厂的生成代码；注入APP初始化代码
                        apply from: "http://git.sdp.nd/mobile/res/raw/master/x-study/5.1.3/optimize_apf_source.gradle"
        ]]>
        </groovy>
    </android>
    <runtime>
        <properties>
            <property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
            <property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="false"/>
        </properties>
      <providers>
        	<provider name="com.nd.xst.x-app-stat.event.provider" filter="com.nd.xst.x-app-stat.event.provider.filter" desc="事件通知" iosClass="" anClass="com.nd.mob.stat.provider.DataAnalyticsDataProvider"/>
		</providers>
    </runtime>
    <ios>
        <class>x_app_stat_iosComponent</class>
        <dependency>
            <![CDATA[
                pod 'x_app_stat_ios', '2.0.12'
               ]]>
        </dependency>
    </ios>
</component><component namespace="com.nd.sdp.component" name="remark-name-mo" display="备注名移动业务组件">
	<pages>
          <page type="cmp" name="editRemarkName" display="编辑备注名" toplevel="2" allow_guest="false"/>
	</pages>

	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
			<property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="false"/>
		</properties>
      
        <providers>
      		<provider name="com.nd.sdp.component.remark-name-mo.pbl.more" filter="com.nd.pbl.pblcomponent.filter.OTHER_PAGE_EXTEND" desc="PBL他人主页更多-备注名入口" anClass="com.nd.sdp.android.social3.remark.provider.PBLEnter4RemarkNameProvider"/>
          	<provider name="com.nd.sdp.component.remark-name-mo.remark-name" filter="com.nd.sdp.uc.provider.filter.REMARK_NICK_NAME" desc="根据uid查询备注名" anClass="com.nd.sdp.android.social3.remark.provider.RemarkNameGetProvider"/>
            <provider name="com.nd.sdp.component.remark-name-mo.search.UIDS" filter="com.nd.sdp.component.remark-name-mo.search.filter.UIDS" desc="模糊查询备注名" anClass="com.nd.sdp.android.social3.remark.provider.RemarkNameQueryProvider"/>
          	<provider name="com.nd.sdp.component.remark-name-mo.EDIT_REMARK_NAME" filter="com.nd.sdp.component.remark-name-mo.filter.EDIT_REMARK_NAME" desc="修改备注名" anClass="com.nd.sdp.android.social3.remark.provider.RemarkNameEditProvider"/>  
      </providers>
	</runtime>
  
    <handlers>
    	<handler name="not-ios://event_pblcomponent_otherpage_extend_item_click" desc="PBL更多点击事件监听" receive_event="event_pblcomponent_otherpage_extend_item_click"/>
      	<handler name="not-ios://event_send_open_tab_activity" desc="监听界面打开事件" receive_event="event_send_open_tab_activity"/>
    </handlers>
  
  
   	<android>
		<class>com.nd.sdp.android.social3.remark.RemarkNameComponent</class>
     	<dependency>
			<![CDATA[
				compile("com.nd.sdp.android.social3:remark-name:2.0.5")
				android {
					compileOptions {
						sourceCompatibility 1.8
						targetCompatibility 1.8
					}
				}
			]]>
		</dependency>
   </android>
  
   <ios>
		<class>RemarkNameComponent</class>
        <dependency>
            <![CDATA[
                      pod 'RemarkNameComponent', '1.0.11'
					  pod 'RemarkNameSDK', '1.0.4'
             ]]>
        </dependency>
	</ios>
</component><component namespace="com.nd.social" name="mui-audio" display="音频公共控件" type="library">
  	<sdk>
    	<js-sdk>
        	<name>MUIAudioJsBridgeSdk</name>
          	<version>1.0</version>
          	<ios>
              <js-class>MUIAudioJsSdkModuleProvider</js-class>
          	</ios>
          	<android>
               <react-class>com.nd.android.social.audiorecorder.jssdk.AudioItemReactProvider</react-class>
               <js-class>com.nd.android.social.audiorecorder.js.AudioJsBridgeProvider</js-class>
          	</android>
        </js-sdk>
  	</sdk>
 <ios>
     	<class>MUIAudioView</class>
     	    <dependency>
              <![CDATA[
				      pod 'MUIAudioView', '1.0.29'
             ]]>
             </dependency>
      
       <scenes>
           <scene name="NSMicrophoneUsageDescription" describe="录制音频使用麦克风"/>
        </scenes>
     </ios>
     <android>
		 <dependency>
         compile('com.nd.android.sdp.social:audioplayer:17.1.10')
         compile('com.nd.android.sdp.social:audioplayer_jssdk:17.1.10')
         compile('com.nd.android.sdp.social:module_audiorecorder:17.1.11.f09b5e7') {
			transitive = true
  			exclude group: 'com.nd.android.sdp.im.common.widget', module: 'emotion'
		 }
		 </dependency>
       <scenes>
   			<scene name="android.permission.RECORD_AUDIO" displayName="录制音频" describe="" isAsk="true" closeable="true" type="permission"/>
		<scene name="android.permission.FOREGROUND_SERVICE" displayName="前台服务" describe="" isAsk="false" closeable="true" type="permission"/>
       </scenes>
	 </android>
  <runtime>
<properties>
<property type="bool" name="lazy_init_android" displayName="是否开启延迟初始化" value="true"/>
<property type="bool" name="lazy_init_ios" displayName="是否开启延迟初始化" value="true"/>
</properties>
</runtime>
</component><component namespace="com.nd.sdp.component" name="edu-homework" display="教育-自定义作业">
	<pages>
      <page type="cmp" name="entry" display="作业系统测试入口" toplevel="1"/>
      <page type="cmp" name="demonstration" display="作业系统演示入口" toplevel="1"/>
      <page type="cmp" name="parent/study-report" display="家长端-学习模块" toplevel="1"/>
      <page type="cmp" name="publish" display="首页" toplevel="1"/>
	</pages>
  
  	<runtime>
      <properties>
		<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
		<property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
	  </properties>
      <providers>
        <provider name="com.nd.sdp.component.edu-homework.GetChatInputMenuItem2" filter="com.nd.social.im.GetChatInputMenuItem2" desc="布置" anClass="com.nd.sdp.android.ndvote.provider.GroupVoteProvider" iosClass="HWCMenuItemProvider"/>
        <provider name="com.nd.sdp.component.edu-homework.chatpage_long_press" filter="com.nd.social.im.chatpage_long_press" desc="转作业" anClass="com.nd.module_im.appFactoryComponent.provider.EntPspSearchPortalDataProvider" iosClass="HWCLongPressProvider"/>
        <provider name="com.nd.sdp.component.edu-homework.chatpage_multi_select" filter="com.nd.social.im.chatpage_multi_select" desc="多选" anClass="com.nd.module_im.appFactoryComponent.provider.EntPspSearchPortalDataProvider" iosClass="HWCMultiSelectProvider"/>
      </providers>
    </runtime>
  
  	<handlers>
	  <handler name="getHomeworkUnfinishedCount" desc="获取作业系统未做作业数量" receive_event="EVENT_HOMEWORK_GET_UNFINISHED_COUNT"/>
	</handlers>
	
	<properties>
      <property type="bool" name="show_qa_entry" displayName="显示问答入口" value="true"/>
      <property type="bool" name="type_basic" displayName="支持布置基础作业" value="true"/>
      <property type="bool" name="type_english_oral" displayName="支持布置口语作业" value="true"/>
      <property type="bool" name="type_synchron" displayName="支持布置同步套题" value="true"/>
      <property type="bool" name="type_smart" displayName="支持布置智能组题" value="true"/>
      <property type="bool" name="type_customized" displayName="支持布置自定义作业" value="true"/>
      <property type="bool" name="type_standard" displayName="支持布置达标作业" value="true"/>
      <property type="bool" name="type_old_exam" displayName="支持布置模拟训练" value="false"/>
      <property type="bool" name="user_share" displayName="开启布置作业分享功能" value="false"/>
      <property type="bool" name="user_select_framework" displayName="使用通用人员选择器" value="true"/>
      <property type="enum" name="component_style" displayName="组件版本样式" value="1">
       	 	<options multi="false">
                <option value="1">默认作业</option>
         		<option value="2">UE案</option>
                <option value="3">X学习</option>
        	</options>
      </property>
      <property type="string" name="download_web_url" displayName="接入方App下载页地址" value=""/>
      <property type="string" name="icon_url" displayName="分享logo" value=""/>
      <property type="string" name="selector_extend" displayName="选择器额外参数（json字符串urlencode）" value="%7B%22__biz_data%22%3A%7B%22viewer%22%3A%22teacher%22%2C%22amount%22%3A200%2C%22style%22%3A%22simple%22%7D%7D"/>
      <property type="string" name="share_url_scheme_iOS" displayName="作业的scheme（iOS）" iOS_URL_Types="1" senior="true" value="ndhomework">
        <tip>
          只允许字母和数字，需与android配置一致，例如：ndhomework
        </tip>
        <validator type="required" msg="请填写iOS作业系统的scheme，只允许字母和数字"/>
      </property>
      <property type="string" name="share_url_scheme_android" displayName="作业的scheme（Android）" android_res="1" senior="true" value="ndhomework">
        <tip>
          只允许字母和数字，需与iOS配置一致，例如：ndhomework
        </tip>
        <validator type="required" msg="请填写Android作业系统的scheme，只允�����字母和数字"/>
      </property>
      <property type="enum" name="android_web_title_style" displayName="android端webview标题样式，仅对旧版部分有效" value="default">
        	<options multi="false">
              	<option value="default">默认作业</option>
              	<option value="xstudy">X学习</option>
            </options>
       </property>
	</properties>
	
	<android>
      <class>
        com.nd.android.homework.HomeworkComponent
      </class>
      <dependency>
       	<![CDATA[
			    compile('com.nd.sdp.android:edu-homework:13.2.11-rc.107') {
			        transitive = true
			        changing = true
			    }
             ]]>
      </dependency>
      <groovy>
        <![CDATA[ android { packagingOptions { exclude 'META-INF/rxjava.properties'
        exclude 'META-INF/module_release.kotlin_module' } } ]]>
      </groovy>
      <scenes>
        <scene name="android.permission.INTERNET" displayName="网络权限" describe="作业系统网络请求能力需要" isAsk="false" closeable="false" type="permission"/>
        <scene name="android.permission.CAMERA" displayName="摄像头权限" describe="作业系统拍照作为题目/答案上传需要" isAsk="true" closeable="false" type="permission"/>
        <scene name="android.permission.READ_EXTERNAL_STORAGE" displayName="读取存储权限" describe="作业系统读取下载的文件需要" isAsk="true" closeable="false" type="permission"/>
        <scene name="android.permission.WRITE_EXTERNAL_STORAGE" displayName="存储权限" describe="作业系统下载文件写入内存需要" isAsk="true" closeable="false" type="permission"/>
        <scene name="android.permission.RECORD_AUDIO" displayName="录音权限" describe="作业系统录音作为题目/答案上传需要" isAsk="true" closeable="false" type="permission"/>
      </scenes>
    </android>
    <build>
    <android>   
        <safe_whitelist>
            <activities>
                <activity name="com.nd.android.homework.activity.HomeworkNotificationSwitchActivity" describe="业务需求，内容分享到第三方平台，从h5访问原生页面" type="activity" owner="563821"/>
            </activities>
        </safe_whitelist>
    </android>
</build>
  
    <ios>
      <class>
        EHIComponent
      </class>
      <dependency>
        <![CDATA[ 
			pod 'edu_homework_ios', '1.6.50-release10'
 		]]>
      </dependency>
      <scenes>
        <scene name="NSMicrophoneUsageDescription" describe="App需要您的同意才能使用麦克风"/>
      </scenes>
    </ios>
</component><component namespace="com.nd.sdp.component" name="user-select-framework" display="通用人员选择框架">
	<pages>
		<page type="cmp" name="test" display="人员选择器测试" toplevel="1"/>
      	<page type="cmp" name="main" display="通用人员选择器" toplevel="2"/>
	</pages>
	
	<properties>
	</properties>
	
	<events>
	</events>

	<handlers>
	</handlers>

	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
			<property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
		</properties>
	</runtime>
  
    <android>
    	<class>com.nd.sdp.edu.user.select.framework.UserSelectFrameworkComponent</class>   
		<dependency>
    	<![CDATA[  
  			compile 'com.nd.sdp.edu:user-select-framework-android:13.0.4-rc.1'
             android {
					compileOptions {
        				sourceCompatibility 1.8
       				    targetCompatibility 1.8
                 }
             }
 
		]]> 
		</dependency>
   	</android>
  
   	<ios>
    	<class>user_select_framework_iOS</class>
    	<dependency>
    	<![CDATA[
			pod 'user_select_framework_ios', '1.1.5'
        ]]>
    	</dependency>
	</ios>
</component><component namespace="com.nd.sdp.component" name="el-identity-switch" display="教育-身份切换">
	<pages>
      <page type="cmp" name="charge" display="身份接管" toplevel="2" allow_guest="true"/>
      <page type="cmp" name="switch" display="身份切换" toplevel="2" allow_guest="true"/>
      <page type="cmp" name="test" display="测试" toplevel="1" allow_guest="true"/>
      <page type="cmp" name="test_guide" display="测试引导" toplevel="2" allow_guest="true"/>
	</pages>
	
	<properties>
      
      <group name="tabpage_for_identity_group" displayName="跳转配置" max-repeat="10">
       	<validator type="size" rule="[0,10]"/>
        <property type="string" name="role_name" displayName="身份" value=""/>
        
        <property type="page" name="guide_page_01" displayName="引导页面" senior="true"> 
          <tip>[可选]外部引导页，需要业务方自己实现回调</tip>
   	    </property>
        <property type="page" name="tab_page" displayName="主页面" senior="true"> 
          <tip>[必选]关联已配置好的TabPage模板页面</tip>
   	    </property>
      </group>
      <property type="bool" name="source_always_from_system" displayName="任意切换身份" value="false"/>
      <property type="bool" name="ipad_orientation_all" displayName="是否允许iPad横竖屏切换" value="false"/>
	</properties>
	
	<events>
	</events>

	<handlers>
       <handler name="not-ios://doStuff" desc="接收事件" receive_event="EVENT_QUERY_CURRENT_IDENTITY,EVENT_QUERY_CURRENT_ROLE,EVENT_QUERY_CURRENT_ROLE_NEW"/>
       <handler name="not-ios://doStuff1" desc="接收事件" receive_event="EVENT_ADD_IDENTITY,EVENT_DELETE_IDENTITY,EVENT_REFRESH_USER_IDENTITY"/>
	</handlers>

	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
		</properties>
        <providers>
        	<provider name="com.nd.sdp.component.el-identity-switch.dataprovider" filter="com.nd.sdp.component.elis" desc="身份切换" anClass="com.nd.sdp.android.elearning.identityswitch.IdentityProvider" iosClass="ELISDataProvider"/>  
        </providers>
	</runtime>
  
  <android>
		<class>com.nd.sdp.android.elearning.identityswitch.IdentitySwitchComponent</class>
		<dependency>
             <![CDATA[
			    compile 'com.nd.sdp.android:el-identity-switch:1.2.0-rc01'
             ]]>
		</dependency>
	</android>
    <ios>
      <class>ElIdetitySwitchComponent</class>
		<dependency>
			<![CDATA[
                pod 'el_identity_switch_ios', '0.1.38'
             ]]>
		</dependency>
      
	</ios>
</component><component namespace="com.nd.sdp.component.im" name="suspentionwindow" display="悬浮窗组件" type="library">
	<pages>
	</pages>
	
	<properties>
	</properties>
	
	<events>
	</events>

	<handlers>
	</handlers>

	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
			<property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="false"/>
		</properties>
	</runtime>
  
    <ios>
        <class>SuspensionWindowComponent</class>
        <dependency>
            <![CDATA[
 				pod 'MUISuspensionWindow', '1.0.59'
               ]]>
        </dependency>
    </ios>
</component><component namespace="com.nd.sdp.component" name="imstickcomponent" display="IM登记服务">
	<pages>
	</pages>
	
	<properties>
	</properties>
	
	<events>
	</events>

	<handlers>
	</handlers>

	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
			<property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
		</properties>
	</runtime>
  
    <runtime>
        <providers>
            <provider name="com.nd.sdp.component.imstickcomponent.ComponentLaunched" filter="com.nd.sdp.component.imstickcomponent.ComponentLaunched" desc=""/>
        </providers>
    </runtime>
  
     <ios>
      <class>IMTopComponent</class>
     	<dependency>
            <![CDATA[
 				pod 'IMTopSDK', '1.0.16'
               ]]>
      </dependency>
    </ios>
</component><component namespace="com.nd.sdp.common" name="flow-control" display="页面限流">
	<pages>
        <page type="cmp" name="tip" display="限流提示页面" toplevel="1" allow_guest="true"/>
        <page type="cmp" name="tip1" display="限流提示页面（iOS getPage时专用）" toplevel="1" allow_guest="true"/>
	</pages>
	
	<properties>
      <property type="bool" name="close_flow_limit" displayName="是否关闭限流功能" value="false"/>
	</properties>
	
	<events>
	</events>

	<handlers>
      <handler name="onPushReceiveLimitProduct" desc="接收产品限流组件列表推送信息" receive_event="com.nd.sdp.common.flow-control/limitProduct"/>
      <handler name="onPushReceiveLimitComponent" desc="接收限流组件列表推送信息" receive_event="com.nd.sdp.common.flow-control/limitComponent"/>
      <handler name="onPushReceiveComponentEntrance" desc="接收限流组件颗粒列表推送信息" receive_event="com.nd.sdp.common.flow-control/componentEntrance"/>
	</handlers>

	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
			<property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
          	<property displayName="限流页面路由代理（Android）" name="page_routing_agent_provider_a_class" type="string" value="com.nd.sdp.common.flowcontrol.FlowControlDynamicRoutePage"/>
          	<property displayName="限流页面路由代理（iOS）" name="page_routing_agent_provider_i_class" type="string" value="FCIDynamicRoutePageAgent"/>
		</properties>
	</runtime>
  
    <android>
		<class>com.nd.sdp.common.flowcontrol.FlowControlComponent</class>
		<dependency>
			<![CDATA[
			    implementation 'com.nd.sdp.common:flow-control:1.1.3-rc01'
             ]]>
		</dependency>
	</android>
 	
  	<ios>
      <class>FCIFlowControlComponent</class>
		<dependency>
			<![CDATA[
            pod 'flow_control_ios', '0.0.10'
             ]]>
		</dependency>
      
	</ios>
</component><component namespace="com.nd.smartcan.appfactory.maincomponent" name="ext-lightapp-hotupdate" display="ext-lightapp-hotupdate" capability="test">
	<pages>
	</pages>
	
	<properties>
	</properties>
	
	<events>
	</events>

	<handlers>
	</handlers>

	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="false"/>
			<property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="false"/>
		</properties>
        <handlers>
            <handler name="recvJsBridgeAccessAllowedList" desc="处理jsbridge的访问白名单" receive_event="handler_url_white_list_update_event"/>
            <handler name="recvJssdkAccessControlList" desc="处理js颗粒白名单" receive_event="handler_jssdk_access_control_list_update_event"/>  
        </handlers>
	</runtime>
    <android>
    <class>com.nd.smartcan.light.app.component.LightAppComponent</class>
    <dependency><![CDATA[
         compile('com.nd.sdp.android:light-app-core:3.0.1-release.3@aar') {
          transitive = true
          changing = true
          exclude group: 'android.support', module: 'android-support-v4'
        }

 compile('com.nd.sdp.android:new-lite-app:3.0.1-release.3@aar') {
          transitive = true
          changing = true
          exclude group: 'android.support', module: 'android-support-v4'
        }
        compile('com.nd.sdp.android:light-app-component:1.2.3@aar') {
          transitive = true
          changing = true
          exclude group: 'android.support', module: 'android-support-v4'
        }

      ]]></dependency>
    </android>
    <ios>  
      <class>APFLightAppComponent</class>
      <dependency> <![CDATA[
              pod 'APFLightAppComponent', '1.0.6'
			  pod 'APFLightAppSDK', '1.0.11'
               ]]> </dependency> 
    </ios>
</component><component namespace="com.nd.sdp.component.im" name="exception-uploader" display="exception-uploader">
	<pages>
	</pages>
	
	<properties>
	</properties>
	
	<events>
	</events>

	<handlers>
	</handlers>

	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
			<property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
		</properties>
	</runtime>
  <android>
    <class/>
    <dependency>
         configurations.all {
        		resolutionStrategy.eachDependency { DependencyResolveDetails details -&gt;
            		def requested = details.requested
            		if (requested.group == 'com.nd.sdp.android') {
                		if (requested.name.startsWith("uploader-exception")) {
                    		details.useVersion '6.4.173.develop'
                		}
            		}
        		}
    		}
    </dependency>
    <scenes>
      <scene name="android.permission.CHANGE_WIFI_STATE" displayName="wifi变化状态" describe="质量监控获取网络ip需要" isAsk="false" closeable="false" type="permission"/>
    </scenes>
    </android>
</component><component namespace="com.nd.sdp.component" name="x-class-manage" display="X学习云-班级管理">
	<pages>
      <page type="cmp" name="test" display="测试入口" toplevel="1"/>
      <page type="cmp" name="class_address_book" display="班级通讯录" toplevel="2"/> 
	</pages>
	
	<properties>
      <property type="string" name="userinfo_others" displayName="个人主页（{user_id}为占位符必须的）"/>
       <property type="bool" name="ipad_orientation_all" displayName="是否允许iPad横竖屏切换" value="false"/>
	</properties>
	
	<events>
	</events>

	<handlers>
      <handler name="not-ios://create_class_success" desc="创建班级成功事件" receive_event="event_create_class_success"/>
	</handlers>

	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
			<property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
		</properties>
	</runtime>
  <android>
		<class>com.nd.sdp.android.xclassmanager.XClassManagerComponent</class>
		<dependency>
        	compile 'com.nd.sdp.android:x-class-manage-android:2.1.9-rc07'
        </dependency>
    </android>
    <ios>
      	<class>XClassManageComponent</class>
    	<dependency>
			<![CDATA[
				pod 'x_class_manage_ios', '0.0.90'
        	]]>
    	</dependency>
	</ios>
</component><component namespace="com.nd.sdp.maf" name="location-permision" display="location-permision">
	<pages>
	</pages>
	
	<properties>
	</properties>
	
	<events>
	</events>

	<handlers>
	</handlers>

  
	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
			<property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
		</properties>
	</runtime>
</component><component namespace="com.nd.sdp.maf" name="callphone-permission" display="callphone-permission" type="function_library">
	<pages>
	</pages>
	
	<properties>
	</properties>
	
	<events>
	</events>

	<handlers>
	</handlers>


	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
			<property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
		</properties>
	</runtime>
</component><component namespace="com.nd.sdp.component" name="edu-selector" display="教育-扩展-班级人员选择器">
	<pages>
		<page type="local" name="index.html" display="H5离线应用" toplevel="2"/>
	</pages>
	
	<properties>
	</properties>
	
	<events>
	</events>

	<handlers>
	</handlers>

	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
			<property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
		</properties>
	</runtime>

	<h5>
		<h5app>edu-selector-offline</h5app>
		<version>1.0.13</version>
		<npm>
			"@sdp.nd/edu-selector-offline":"1.0.13"
		</npm>
	</h5>
</component><component namespace="com.nd.sdp.component" name="edu-space-interaction" display="教育-空间互动（通知）">
    <pages>
        <page type="cmp" name="test" display="测试-QA" toplevel="1"/>
        <page type="cmp" name="assessment" display="学生评价首页" toplevel="2"/>
        <page type="cmp" name="contentPreview" display="内容库预览" toplevel="2"/>
    </pages>
  
   
    <events/>
  
    <handlers>
        <handler name="not-ios://doStuff" desc="接收事件" receive_event="return_data"/>
    </handlers>
  
    <runtime>
        <properties>
            <property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
            <property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
        </properties>
    </runtime>
  
   	<properties>
	      <property type="bool" name="is_show_notice_share" displayName="是否显示通知分享入口" value="true">            
          		<tip>是否支持通知分享入口，默认开启</tip>
          </property>
	</properties>
  
    <android>
        <class>com.nd.hy.ele.android.nitice.ElNoitceComponent</class>
      
        <dependency>
            <![CDATA[
			     compile('com.nd.sdp.android:edu-notice:0.2.11@aar') {
                    exclude module: 'active-android'
			        transitive = true
			        changing = true
			    }
                api('com.nd.sdp.android:edu-appraise-pro:0.0.2') 
                api('com.nd.sdp.android:edu-content-library:1.0.10') 

                android {
	              packagingOptions {
	              exclude 'LICENSE.txt'
	            }
         	}

             ]]>
        </dependency>
      
        <scenes>
            <scene name="android.permission.flashlight" displayName="存储权限" describe="拍照存储sd卡需要" isAsk="true" closeable="true" type="permission"/>
            <scene name="android.permission.record_audio" displayName="网络权限" describe="请求网络时需要" isAsk="true" closeable="true" type="permission"/>
            <scene name="android.permission.wake_lock" displayName="获取网络信息状态" describe="播放资源判断网络状态时需要" isAsk="false" closeable="true" type="permission"/>
            <scene name="android.permission.ACCESS_WIFI_STATE" displayName="获取当前WiFi接入的状态以及WLAN热点的信息" describe="播放资源判断网络状态时需要" isAsk="false" closeable="true" type="permission"/>
            <scene name="_applicationid_.permission.calendar_receive_broadcast" displayName="calendar_receive_broadcast" describe="calendar_receive_broadcast" isAsk="true" closeable="true" type="permission"/>
        </scenes>
    </android>
  
    <ios>
        <class>edu_space_inter_component</class>
        <dependency>
            <![CDATA[
	            pod 'edu_space_inter_ios', '1.0.12'
				pod 'edu_notice_ios', '1.1.20'
				pod 'edu_classroom_assessment', '1.0.3'
				pod 'edu_content_library', '1.0.2'
    	     ]]>
        </dependency>
    </ios>
  
    <!-- 路由表 -->
    <routes>
        <!-- 路由social旧原生通知公告地址 -->
        <route source="cmp://com.nd.social.notice/receivedDetail" destination="cmp://com.nd.sdp.component.edu-space-interaction/detail_share"/>
        <route source="cmp://com.nd.social.notice/receivedNotice" destination="cmp://com.nd.sdp.component.edu-space-interaction/list"/>
        <route source="cmp://com.nd.social.notice/sendedDetail" destination="cmp://com.nd.sdp.component.edu-space-interaction/detail_share"/>
        <route source="cmp://com.nd.social.notice/postNotice" destination="cmp://com.nd.sdp.component.edu-space-interaction/postNotice"/>
        <route source="cmp://com.nd.social.notice/feedBack" destination="cmp://com.nd.sdp.component.edu-space-interaction/detail_share"/>
        <route source="cmp://com.nd.social.notice/detail" destination="cmp://com.nd.sdp.component.edu-space-interaction/detail_share"/>
        <!-- 路由通知公告H5地址 -->
        <route source="local://com.nd.sdp.component.h5-notice/index.html#/receivedNotice?_maf_left_button=back&amp;_maf_allow_plays_inline=false" destination="cmp://com.nd.sdp.component.edu-space-interaction/list"/>
        <route source="local://com.nd.sdp.component.h5-notice/index.html#!/receivedDetail?_maf_allow_plays_inline=false" destination="cmp://com.nd.sdp.component.edu-space-interaction/detail_share"/>
        <route source="local://com.nd.sdp.component.h5-notice/index.html#!/detail?_maf_left_button=back&amp;_maf_allow_plays_inline=false" destination="cmp://com.nd.sdp.component.edu-space-interaction/detail_share"/>
        <route source="local://com.nd.sdp.component.h5-notice/index.html#!/postNotice" destination="cmp://com.nd.sdp.component.edu-space-interaction/postNotice"/>
        <route source="local://com.nd.sdp.component.h5-notice/index.html#!/feedBack" destination="cmp://com.nd.sdp.component.edu-space-interaction/detail_share"/>
        <route source="local://com.nd.sdp.component.h5-notice/index.html#!/sendedDetail?_maf_allow_plays_inline=false" destination="cmp://com.nd.sdp.component.edu-space-interaction/detail_share"/>
        <route source="local://com.nd.sdp.component.h5-notice/index.html" destination="cmp://com.nd.sdp.component.edu-space-interaction/detail_share"/>
    </routes>
</component><component namespace="com.nd.sdp.component" name="edu-space-interaction" display="教育-空间互动（通知）">
    <pages>
        <page type="cmp" name="test" display="测试-QA" toplevel="1"/>
        <page type="cmp" name="assessment" display="学生评价首页" toplevel="2"/>
        <page type="cmp" name="contentPreview" display="内容库预览" toplevel="2"/>
    </pages>
  
   
    <events/>
  
    <handlers>
        <handler name="not-ios://doStuff" desc="接收事件" receive_event="return_data"/>
    </handlers>
  
    <runtime>
        <properties>
            <property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
            <property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
        </properties>
    </runtime>
  
   	<properties>
	      <property type="bool" name="is_show_notice_share" displayName="是否显示通知分享入口" value="true">            
          		<tip>是否支持通知分享入口，默认开启</tip>
          </property>
	</properties>
  
    <android>
        <class>com.nd.hy.ele.android.nitice.ElNoitceComponent</class>
      
        <dependency>
            <![CDATA[
			     compile('com.nd.sdp.android:edu-notice:0.2.51@aar') {
                    exclude module: 'active-android'
			        transitive = true
			        changing = true
			    }
                api('com.nd.sdp.android:edu-appraise-pro:0.0.2') 
                api('com.nd.sdp.android:edu-content-library:1.0.12') 

                android {
	              packagingOptions {
	              exclude 'LICENSE.txt'
	            }
         	}

             ]]>
        </dependency>
      
        <scenes>
            <scene name="android.permission.flashlight" displayName="存储权限" describe="拍照存储sd卡需要" isAsk="true" closeable="true" type="permission"/>
            <scene name="android.permission.record_audio" displayName="网络权限" describe="请求网络时需要" isAsk="true" closeable="true" type="permission"/>
            <scene name="android.permission.wake_lock" displayName="获取网络信息状态" describe="播放资源判断网络状态时需要" isAsk="false" closeable="true" type="permission"/>
            <scene name="android.permission.ACCESS_WIFI_STATE" displayName="获取当前WiFi接入的状态以及WLAN热点的信息" describe="播放资源判断网络状态时需要" isAsk="false" closeable="true" type="permission"/>
            <scene name="_applicationid_.permission.calendar_receive_broadcast" displayName="calendar_receive_broadcast" describe="calendar_receive_broadcast" isAsk="true" closeable="true" type="permission"/>
        </scenes>
    </android>
  
    <ios>
        <class>edu_space_inter_component</class>
        <dependency>
            <![CDATA[
	            pod 'edu_space_inter_ios', '1.0.15'
				pod 'edu_notice_ios', '1.1.31'
				pod 'edu_classroom_assessment', '1.0.3'
				pod 'edu_content_library', '1.0.2'
    	     ]]>
        </dependency>
    </ios>
  
    <!-- 路由表 -->
    <routes>
        <!-- 路由social旧原生通知公告地址 -->
        <route source="cmp://com.nd.social.notice/receivedDetail" destination="cmp://com.nd.sdp.component.edu-space-interaction/detail_share"/>
        <route source="cmp://com.nd.social.notice/receivedNotice" destination="cmp://com.nd.sdp.component.edu-space-interaction/list"/>
        <route source="cmp://com.nd.social.notice/sendedDetail" destination="cmp://com.nd.sdp.component.edu-space-interaction/detail_share"/>
        <route source="cmp://com.nd.social.notice/postNotice" destination="cmp://com.nd.sdp.component.edu-space-interaction/postNotice"/>
        <route source="cmp://com.nd.social.notice/feedBack" destination="cmp://com.nd.sdp.component.edu-space-interaction/detail_share"/>
        <route source="cmp://com.nd.social.notice/detail" destination="cmp://com.nd.sdp.component.edu-space-interaction/detail_share"/>
        <!-- 路由通知公告H5地址 -->
        <route source="local://com.nd.sdp.component.h5-notice/index.html#/receivedNotice?_maf_left_button=back&amp;_maf_allow_plays_inline=false" destination="cmp://com.nd.sdp.component.edu-space-interaction/list"/>
        <route source="local://com.nd.sdp.component.h5-notice/index.html#!/receivedDetail?_maf_allow_plays_inline=false" destination="cmp://com.nd.sdp.component.edu-space-interaction/detail_share"/>
        <route source="local://com.nd.sdp.component.h5-notice/index.html#!/detail?_maf_left_button=back&amp;_maf_allow_plays_inline=false" destination="cmp://com.nd.sdp.component.edu-space-interaction/detail_share"/>
        <route source="local://com.nd.sdp.component.h5-notice/index.html#!/postNotice" destination="cmp://com.nd.sdp.component.edu-space-interaction/postNotice"/>
        <route source="local://com.nd.sdp.component.h5-notice/index.html#!/feedBack" destination="cmp://com.nd.sdp.component.edu-space-interaction/detail_share"/>
        <route source="local://com.nd.sdp.component.h5-notice/index.html#!/sendedDetail?_maf_allow_plays_inline=false" destination="cmp://com.nd.sdp.component.edu-space-interaction/detail_share"/>
        <route source="local://com.nd.sdp.component.h5-notice/index.html" destination="cmp://com.nd.sdp.component.edu-space-interaction/detail_share"/>
    </routes>
</component><component namespace="com.nd.sdp.component" name="edu-habit-cultivate" display="X-学习打卡">
	<pages>
      <page type="cmp" name="test" display="打卡测试" toplevel="1"/>
      <page type="cmp" name="quickPublish" display="快速发布打卡(new)" toplevel="2"/>
      <page type="cmp" name="list" display="打卡列表(new)" toplevel="2"/>
      <page type="cmp" name="detail" display="打卡详情(new)" toplevel="2"/>
      <page type="cmp" name="publish" display="发布打卡(兼容旧版)" toplevel="2"/>
      <page type="cmp" name="mytasklist" display="我的打卡列表(兼容旧版)" toplevel="2"/>
      <page type="cmp" name="stuTaskDetail" display="学生打卡详情(兼容旧版)" toplevel="2"/>
	</pages>
  
	<routes>
      <route source="cmp://com.nd.sdp.component.e101-habit-train/publish" destination="cmp://com.nd.sdp.component.edu-habit-cultivate/quickPublish"/>
      <route source="cmp://com.nd.sdp.component.e101-habit-train/mytasklist" destination="cmp://com.nd.sdp.component.edu-habit-cultivate/list"/>
      <route source="cmp://com.nd.sdp.component.e101-habit-train/stuTaskDetail" destination="cmp://com.nd.sdp.component.edu-habit-cultivate/detail"/>
	</routes>
  
	<properties>
          <property type="string" name="activity_source" displayName="来源类型限制" value="">            
          		<tip>0全部 1班级 2学校 3公共</tip>
          </property>
	      <property type="bool" name="is_show_habit_circles" displayName="是否显示打卡圈Tab" value="false">            
          		<tip>是否显示打卡圈Tab，默认不显示</tip>
          </property>
	</properties>
	
	<events>
	</events>

	<handlers>
      <handler name="userHabitInfoUpdated" desc="用户打卡信息更新PUSH消息" receive_event="com.nd.sdp.component.elearning_habit_train/habit_updated"/>
      <handler name="userHabitDataFirstRecord" desc="用户每日第一次打卡PUSH消息" receive_event="com.nd.sdp.component.elearning_habit_train/user_habit_date_first_record"/>
	</handlers>

	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
			<property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
		</properties>
	</runtime>
    <android>
    <class>com.nd.sdp.android.xhabitcultivate.XHabitCultivateComponent</class>   
		<dependency>
    	<![CDATA[  
  			compile 'com.nd.sdp.android:x-habit-train-android:0.3.9.7-rc70'
		]]>
		</dependency>
   		<scenes>
   			<scene name="android.permission.INTERNET" displayName="网络权限" describe="框架提供网络请求能力需要" isAsk="true" closeable="true" type="permission"/>
			<scene name="android.permission.WRITE_EXTERNAL_STORAGE" displayName="存储权限" describe="框架提供日志存储sd卡需要" isAsk="true" closeable="true" type="permission"/>
   			<scene name="android.permission.ACCESS_NETWORK_STATE" displayName="访问网络状态权限" describe="访问网络状态权限" isAsk="true" closeable="true" type="permission"/> 
   		     <scene name="android.permission.ACCESS_WIFI_STATE" displayName="访问wifi状态权限" describe="访问wifi状态权限" isAsk="true" closeable="true" type="permission"/>
      </scenes>
     </android>
  
     <ios>
    	<class>edu_habit_cultivate_component</class>
    	<dependency>
    	<![CDATA[
			pod 'edu_habit_cultivate_ios', '1.2.58'
			pod 'edu_habit_cultivate_sdk', '0.0.2'
        ]]>
    	</dependency>
	  </ios>
</component><component namespace="com.nd.sdp.component" name="permission" display="应用权限声明">
	<pages>
      	<page type="cmp" name="permission_list" display="高敏感权限" android_class="" allow_guest="true"/>
	</pages>
	
   <properties>
	<property type="bool" name="is_open_pre_authorization" desc_true="开启" desc_false="关闭" displayName="是否开启二次授权" value="true"/>
   </properties>
  
	<events>
	</events>

	<handlers>
	</handlers>
  	
  	<routes>
          <route source="cmp://com.nd.smartcan.appfactory.main_component/permission_list" destination="cmp://com.nd.sdp.component.permission/permission_list"/>
    </routes>

	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="false"/>
			<property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="false"/>
      </properties>
	</runtime>
  
<android>    
		<class>com.nd.sdp.android.apf.permission.ApfPermissionComponent</class>
		<dependency>
				<![CDATA[
			       compile('com.nd.sdp.android.common:com-nd-apf-permission-check:3.1.4-release.1@aar') {
			        transitive = true
			        changing = true
			    }
			       compile('com.nd.sdp.android.common:com-nd-permission-check:3.1.5-release.2@aar') {
			        transitive = true
			        changing = true
			    }

             ]]>
		</dependency>    
     <scenes>
          <scene name="android.permission.CALL_PHONE" displayName="拨打电话权限" describe="框架有提供拨打电话的工具类" isAsk="true" closeable="true" type="permission"/> 
       <scene name="android.permission.ACCESS_COARSE_LOCATION" displayName="获取位置信息权限" describe="获取位置信息权限" isAsk="true" closeable="true" type="permission"/> 
     <scene name="android.permission.ACCESS_FINE_LOCATION" displayName="获取位置信息权限" describe="获取位置信息权限" isAsk="true" closeable="true" type="permission"/> 
    <scene name="android.permission.ACCESS_BACKGROUND_LOCATION" displayName="获取后台位置信息权限" describe="获取后台位置信息权限" isAsk="true" closeable="true" type="permission"/>
    <scene name="android.permission.RECEIVE_BOOT_COMPLETED" displayName="开机自启动服务权限" describe="框架提供设置设备重启后保留任务有使用到" isAsk="true" closeable="true" type="permission"/>    
  </scenes>
      <groovy>
          <![CDATA[
println "============应用权限声明组件构建开始============"

// 1、找到config.json文件下的语言配置
// 2、获取target/app_factory/$lang/components/custom_permission_config_data.json 文件
// 3、遍历文件解析数据
// 4、获取禁用的权限列表
// 5、构造隐私权限列表页面数据，预授权sdk初始化的数据
// 6、分别保存对应的文件，app_factory/$lang/components/xxx.json
import groovy.json.JsonSlurper
import groovy.json.JsonOutput
import groovy.json.StringEscapeUtils

// 各个子权限代码的依赖版本
buildscript{

    // 定位权限，版本是和jssdk一样
    ext.location_version = '3.3.6-release.1'
    // 电话权限，版本和maf一样
    ext.phone_version = '3.4.0-release.1'
    // 自启动权限
    ext.boot_version = '3.0.1-release.1'

    // 悬浮窗权限
    ext.window_version = '3.1.4-release.1'
	// webview悬浮窗功能组件
    ext.float_version = '3.0.1-release.1'
    // 设备管理器权限
    ext.device_version = '3.1.4-release.1'
    // 辅助功能权限
    ext.accessibility_version = '3.1.4-release.1'
    // 读取应用使用情况权限
    ext.usage_version = '3.1.4-release.1'
    // 通知栏监听权限
    ext.notify_version = '3.1.4-release.1'
   
}

// 需要移除的权限列表
ext.delPermissions = []
ext.addPermissionsGroup = []
ext.delPermissionsGroup = []
// 特殊权限列表，目的是过滤数据，android-capabilities无法切分支，为了不影响功能，这里只能做一层过滤
ext.specialPermissionsGroup = []
// 定位权限拆分判断，定位权限关闭且后台定位开启，则需要阻断构建
ext.isLocationError = false

def inputFile = new File(new File("app").absolutePath, "assets/app_factory/app/config.json")
def language_list = []
if (inputFile.exists()) {
    // 语言列表
    def config = new JsonSlurper().parse(inputFile)
    language_list = config.getAt("language_enable")
    println "配置的语言有：" + language_list
}
if (!language_list.isEmpty()) {
    language_list.forEach { language ->
        parsePermissionJsonFile(language)
    }
} else {
    parsePermissionJsonFile("zh-CN")
}
if (isLocationError){
    throw new GradleException('error 构建失败： 请检查编辑器配置：定位权限是否已被禁用,且后台定位是开启状态（后台定位可以单独关闭，但不能单独开启，如果需要后台定位权限，请同时开启定位权限，否则无法使用；如果需要关闭定位权限，请同时关闭后台定位权限）')
}
println "过滤重复权限前，size= " + delPermissions.size()
// 根据权限添加对应aar
addPermissionAar()
// 移除禁用的权限，对AndroidManifest.xml文件操作
removeAndroidManifestDisablePermission()

// 解析权限数据，解析不同语言文件下的数据
def parsePermissionJsonFile(language) {
    try {
        def targetFile = new File(new File("target").absolutePath, "app_factory/${language}/components/custom_permission_config_data.json")
        println "当前解析的文件对应语言：" + language
        if (targetFile.exists()) {
            def permission = new JsonSlurper().parse(targetFile)
            if (!permission) {
                println "文件" + targetFile + "解析到的数据为空"
                return
            }
            if (!permission.containsKey("android")) {
                println "permission_config_data.json 不包含android标签"
                return
            }
            def androidPermission = permission.getAt("android")
            // 隐私权限列表，预授权sdk数据构造
            def privacyMap = [:]
            def sdkMap = [:]
            if (!androidPermission) {
                println "permission_config_data.json android标签下数据为空"
                return
            }

			boolean loction_enable = true
			boolean back_location_enable = true

            androidPermission.each { key, values ->
                // 忽略特殊权限
                if (specialPermissionsGroup.contains(key)) {
                    println "权限组：" + key + " 属于特殊权限，忽略"
                } else {
                    if (key == "InformationSecurity" || key == "PermissionSettingExplain") {
                        privacyMap.put(key, values)
                    } else {
                        if (values.containsKey("permissions")) {
                            boolean enable = true
                            boolean privacy = true
                            if (values.containsKey("enable")) {
                                // 是否启用，根据配置数据结果，可能是个字符串，需要转换
                                def enableStr = values.getAt("enable").toString()
                                if (enableStr == "false") {
                                    enable = false;
                                }
                            } else {
                                println "权限组：" + key + " 无enable字段，自动默认为true"
                            }

							if (key == "LOCATION"){
                                loction_enable = enable
                            }
                            if (key == "LOCATION_BACKGROUND"){
                               back_location_enable = enable
                            }
                            if (loction_enable == false && back_location_enable == true){
                                isLocationError = true
                                
 							}else{
								isLocationError = false
							}

                            if (values.containsKey("privacy")) {
                                // 是否是高危权限
                                def privacyStr = values.getAt("privacy").toString()
                                if (privacyStr == "false") {
                                    privacy = false;
                                }
                            } else {
                                println "权限组：" + key + " 无privacy字段，自动默认为true"
                            }
                            println "权限组：" + key + "，对应enable：" + enable + "，privacy：" + privacy
                            def pJmap = [:]
                            def sJmap = [:]
                            def detail = values.getAt("detail")
                            def name = values.getAt("name")
                            if (enable) {
                                // 隐私列表数据
                                if (privacy){
                                    pJmap.put("name", name)
                                    pJmap.put("intro", values.getAt("intro"))
                                    pJmap.put("detail", detail)
                                }else {
                                    println "权限组：" + key + " 对应的privacy 属性值为false，不需要输出到隐私列表中"
                                }
                                addPermissionsGroup.add(key)
                            }else {
                                // 被禁用的权限
                                delPermissions.addAll(values.getAt("permissions"))
                                delPermissionsGroup.add(key)
                            }
                            // 预授权sdk需要的权限数据
                            sJmap.put("name", name)
                            sJmap.put("description", detail)
                            sJmap.put("enable", enable)
                            if (!pJmap.isEmpty()) {
                                privacyMap.put(key, pJmap)
                            }
                            if (!sJmap.isEmpty()) {
                                sdkMap.put(key, sJmap)
                            }
                        } else {
                            println "权限组：" + key + " 无子权限，默认无效，请检查是否需要该权限"
                        }

                    }
                }

            }

            // 中文编码转换
            def privacyJson = StringEscapeUtils.unescapeJava(JsonOutput.toJson(privacyMap))
            def sdkJson = StringEscapeUtils.unescapeJava(JsonOutput.toJson(sdkMap))
            writePermissionToJsonData(language, "permission.json", privacyJson)
            writePermissionToJsonData(language, "permission_description.json", sdkJson)
        } else {
            println "文件" + targetFile + "不存在"
        }
    } catch (Exception e) {
        println "数据解析异常：" + e.getMessage()
    }

}

// 将过滤好的权限文件，分别写入，其中隐私列表页面用的数据保存在permission.json
// 预授权sdk使用到的数据保存在permission_description.json
def writePermissionToJsonData(language, fileName, jsonData) {
    def permissionFileFolder = new File(new File("app").absolutePath, "assets/app_factory/${language}/components")
    if (!permissionFileFolder.exists()) {
        println "写入数据： 创建对应文件夹"
        permissionFileFolder.mkdirs()
    }
    def permissionFile = new File(new File("app").absolutePath, "assets/app_factory/${language}/components/${fileName}")
    println "文件 ：" + permissionFile

    permissionFile.withWriter('utf-8') {
        writer ->
            writer.writeLine jsonData
            println "writePermissionToJsonData 写入数据成功"
    }
}

// 移除禁用的权限，对AndroidManifest.xml文件操作
def removeAndroidManifestDisablePermission() {
    // 去除重复的权限
    delPermissions.unique()
    delPermissionsGroup.unique()
    println "过滤重复权限后，size= " + delPermissions.size()
    if (!delPermissions.isEmpty()) {
        println "禁用的权限组为：" + delPermissionsGroup
        // 移除Androidmanifest.xml对应的权限
        android.applicationVariants.all { variant ->

            variant.outputs.each { output ->
                output.processResources.doFirst { pm ->
                    String manifestPath = output.processResources.manifestFile;
                    def manifestContent = file(manifestPath).getText()
                    // 解析节点，删除被禁用权限对应的"uses-permission"节点
                    def xml = new XmlParser().parseText(manifestContent)
                    def node = xml.get("uses-permission")
                    if (node == null) {
                        println "uses-permission节点为空"
                        return
                    }
                    for (int j = 0; j < node.size(); j++) {
                        Node curNode = node.get(j)
                        if (curNode == null) {
                            println "当前节点为空"
                            continue
                        }

                        String name = curNode.attributes().toString()
                        name = name.replace(" ", "")
                        if (name.isEmpty()) {
                            println "当前节点attributes为空"
                            continue
                        }
                        delPermissions.forEach { permission ->
                            if (name.contains(permission)) {
                                println "权限节点attributes：" + name
                                println("权限" + permission + "已被禁用，移除Androidmanifest.xml中的权限声明")
                                xml.remove(curNode)
                            }
                        }

                    }

                    def serialize = groovy.xml.XmlUtil.serialize(xml)
                    file(manifestPath).write(serialize)

                }
            }
        }
    } else {
        println "禁用的权限为：" + delPermissionsGroup
    }

    println "============应用权限声明组件构建结束============"
}

// 添加对应权限的aar
def addPermissionAar() {
    addPermissionsGroup.unique()
    println "开启的权限组为：" + addPermissionsGroup
    if (!addPermissionsGroup.isEmpty()) {

        // 如果权限组里有包含定位和电话的，则要添加对应的aar组件
        addPermissionAar('com.nd.sdp.android','jssdk-func-need-permission',location_version,addPermissionsGroup.contains("LOCATION"))
        addPermissionAar('com.nd.android.smartcan','smartcan-func-need-permision-aar',phone_version,addPermissionsGroup.contains("PHONE"))
        // 悬浮窗权限
        addPermissionAar('com.nd.sdp.android.common','apf-permission-alterwindow',window_version,addPermissionsGroup.contains("ALERT_WINDOW"))
        // 读取应用使用情况
        addPermissionAar('com.nd.sdp.android.common','apf-permission-usage',usage_version,addPermissionsGroup.contains("USAGE"))
        // 设备管理
       addPermissionAar('com.nd.sdp.android.common','apf-permission-device',device_version,addPermissionsGroup.contains("DEVICE"))
        // 监听通知栏
       addPermissionAar('com.nd.sdp.android.common','apf-permission-notifylistener',notify_version,addPermissionsGroup.contains("NOTIFICATION_LISTENER"))
        // 辅助功能
       addPermissionAar('com.nd.sdp.android.common','apf-permission-accessibility',accessibility_version,addPermissionsGroup.contains("ACCESSIBILITY"))
       // 自启动权限
       addPermissionAar('com.nd.android.smartcan','apf-boot-permision',boot_version, addPermissionsGroup.contains("BOOT"))
	   // webview悬浮窗组件
	   if(!addPermissionsGroup.contains("ALERT_WINDOW")){
	     addPermissionAar('com.nd.sdp.android','nd-float-view-library',float_version,addPermissionsGroup.contains("ALERT_WINDOW"))
	   }
      
    }

}

// 添加各个权限依赖
def addPermissionAar(group, module, version, add) {

    println "当前权限组件："+ group+":"+module+":"+version

    if (add){
        println "添加权限依赖"
        dependencies {
            implementation("${group}:${module}:${version}@aar") {
                transitive = true
                changing = true
                exclude group: 'android.support', module: 'android-support-v4'
            }
        }
    }else {
        println "不需要添加权限依赖，移除"
        android {
            configurations {
                all*.exclude group: group, module: module
            }
        }
    }

}
		  ]]>
    </groovy>
    
</android>
  
  <ios>
    <class>APFPermissionComponent</class>
    <dependency><![CDATA[
pod 'APFPermissionComponent', '1.0.9'
pod 'MUPPermissionKit', '1.0.17'
            ]]></dependency>
    <scenes>
    	<scene name="NSLocationAlwaysUsageDescription" describe="为了给予轻应用定位功能"/>
		<scene name="NSLocationUsageDescription" describe="为了给予轻应用定位功能"/>
		<scene name="NSLocationAlwaysAndWhenInUseUsageDescription" describe="为了给予轻应用定位功能"/>
		<scene name="NSLocationWhenInUseUsageDescription" describe="为了给予轻应用定位功能"/>
    </scenes>
    <ruby>
      <!--入口声明，必须提供且唯一-->
      <entry>APFPermissionBuildExecutor</entry>
      <dsl>
        <pre_dependency_install>
          <![CDATA[
require 'xcodeproj/plist'
require 'pathname'
require 'json'
require 'active_support/core_ext/string'

# get current dir path
current_dir = Pathname(Dir.pwd)
$CURRENT_DIR = current_dir

target_base_dir = current_dir + 'target'
$TARGET_BASE_DIR = target_base_dir

xcode_projects = Dir.glob(current_dir.join('*.xcodeproj'))
raise Informative, 'require a xcodeproj.' if xcode_projects.empty?
raise Informative, 'too many xcodeproj.' if xcode_projects.length > 1
project_name = File.basename(xcode_projects.first, '.xcodeproj')
resources_path = current_dir + project_name + 'Resources'

def app_factory_component_file_path(base, lang, file)
  base + 'app_factory' + lang + 'components' + file
end

def load_app_factory_component_file(base, lang, file)
  JSON.parse(File.read(app_factory_component_file_path(base, lang, file)))
end

def custom_permission_config_data(lang, only_hash = true)
  content = load_app_factory_component_file($TARGET_BASE_DIR, lang, 'custom_permission_config_data.json')
  ios_permission_map = content['ios']
  ios_permission_map.select! { |_, v| v.is_a?(Hash) } if only_hash
  ios_permission_map
end

def pod_subspec_dependency_content(match, library_name)
  sub_spce_dependency = ''
  if library_name.present?
    sub_spce_dependency = "pod '#{library_name}'"
  end

  version = match[7]
  if sub_spce_dependency.present? && version.present?
    sub_spce_dependency += ", '#{version}'"
  end

  sub_spce_dependency += "\n" if sub_spce_dependency.present?

  sub_spce_dependency
end

$PERMISSION_KIT_SUBSPECS = {
    :APPLEMUSIC => 'MUPPermissionKit/AppleMusic',
    :BLUETOOTH => 'MUPPermissionKit/Bluetooth',
    :CALENDAR => 'MUPPermissionKit/Calendar',
    :CAMERA => 'MUPPermissionKit/Camera',
    :CONTACTS => 'MUPPermissionKit/Contacts',
    :FACEID => 'MUPPermissionKit/Face',
    :HEALTH => 'MUPPermissionKit/Health',
    :HOME => 'MUPPermissionKit/Home',
    :LOCALNETWORK => 'MUPPermissionKit/LocalNetwork',
    :LOCATION => 'MUPPermissionKit/Location',
    :MICROPHONE => 'MUPPermissionKit/Microphone',
    :MOTION => 'MUPPermissionKit/Motion',
    :PHOTOS => 'MUPPermissionKit/Photos',
    :REMINDERS => 'MUPPermissionKit/Reminders',
    :SIRI => 'MUPPermissionKit/Siri',
    :SPEECH => 'MUPPermissionKit/Speech',
    :TRACKING => 'MUPPermissionKit/Tracking',
}

$PERMISSION_COMPONENT_SUBSPECS = {
    :LOCATION => 'APFPermissionComponent/Location',
}

target_app_factory_base_dir = target_base_dir + 'app_factory'
#assets_app_factory_base_dir = current_dir + 'app' + 'assets' + 'app_factory'

# output permission.json
variables_json_file_path =  target_base_dir.join('variables.json')
variable_dict = JSON.parse(File.read(variables_json_file_path))
languages_array =  variable_dict["languages"]
languages_array.each do |language|
  ios_permission_map = custom_permission_config_data(language, false)
  group_permission_map = {}
  ios_permission_map.each do |k, v|
    if v.is_a?(Hash)
      next unless v['privacy'].to_s == 'true' && v['enable'].to_s == 'true'
      result_permission_map = {}

      v.each do |k2, v2|
        permission_key, type = k2.to_s.split('_')
        next if type.blank? || !(v2.instance_of? String)

        permision_descs = result_permission_map[permission_key] || {}
        result_permission_map[permission_key] = permision_descs if permision_descs.blank?

        permision_descs[type] = v2
      end
      group_permission_map[k] = result_permission_map if result_permission_map.present?
    else
      group_permission_map[k] = v
    end
  end
  result_file_path = app_factory_component_file_path(resources_path, language, 'permission.json')
  File.open(result_file_path, 'w') { |file| file.write(JSON.pretty_generate(group_permission_map)) }
end

# output permission_description.json
languages_array.each do |language|
  result = {}
  ios_permission_map = custom_permission_config_data(language)
  ios_permission_map.select! { |_, v| v.is_a?(Hash) }
  ios_permission_map.each do |k, v|
    permission = result[k] || {}
    result[k] = permission if permission.blank?
    permission['enable'] = v['enable']
    all_detail_hash = v.select { |k2, v2| k2.to_s.end_with? '_detail' and v2.instance_of? String}
    description = Hash[*all_detail_hash.first].values.first
    permission['description'] = description
    # delete result's key value if description is blank
    result.delete(k) if description.blank?
  end
  result_file_path = app_factory_component_file_path(resources_path, language, 'permission_description.json')
  File.open(result_file_path, 'w') { |file| file.write(JSON.pretty_generate(result)) }
end

# delete i18n permission config in local.json file
def deleteI18nPermission (permission_key)
  # local.json path
  local_json_file_path = $CURRENT_DIR + 'sdp/local.json'
  # target config
  target_configs_content = JSON.parse(File.read(local_json_file_path))
  # target config
  target_configs = target_configs_content['target_config'] || []
  raise Informative, '[local.json] require target_config.' if target_configs.empty?
  # targets
  target_configs.map do |config|
    target_name = config['target_name']
    next if target_name.nil?
    # load i18n
    target_i18n_directory = $CURRENT_DIR + 'sdp' + target_name
    i18n_lists = Pathname.glob(target_i18n_directory.join('*/')).map(&:basename)
    i18n_lists.each do |language|
      i18n_local_json_file_path = target_i18n_directory.join(language).join('local.json')
      next unless File.exist? i18n_local_json_file_path
      target_config_content = JSON.parse(File.read(i18n_local_json_file_path))
      target_config = target_config_content['target_config'].first
      target_permission = target_config['properties']['scenes'] || {}
      target_permission.delete(permission_key)
      File.open(i18n_local_json_file_path, 'w') { |file| file.write(JSON.pretty_generate(target_config_content)) }
    end
  end
end

# delete info plist privacy permission if enable is false
# get info plist_path(main target)
infoplist_path = current_dir + project_name + 'Info.plist'
# load info plist
infoplist_content = Xcodeproj::Plist.read_from_path(infoplist_path)
# one language is enough
ios_permission_map = custom_permission_config_data(languages_array.first)
ios_permission_map.each do |_, v|
  next if v['enable'].to_s == 'true'

  v.keys
      .map { |k2| k2.chomp('_detail').chomp('_intro')}
      .uniq
      .each { |k2|
        infoplist_content.delete(k2)
        deleteI18nPermission(k2)
      }
end
# save info plist
Xcodeproj::Plist.write_to_path(infoplist_content, infoplist_path)

# add permission pod spec
permission_kit_regex = /(pod){1}[ ]+(['"]){1}(MUPPermissionKit){1}(['"]){1}(,\W){1,}(['"]){1}([^'"]+)+(['"]){1}/
permission_component_regex = /(pod){1}[ ]+(['"]){1}(APFPermissionComponent){1}(['"]){1}(,\W){1,}(['"]){1}([^'"]+)+(['"]){1}/
pod_file_path = current_dir.join('Podfile')
final_pod_content = ''
File.open(pod_file_path).each do |line|
  final_pod_content += line

  next if line.include?('#')

  ios_permission_map.each do |key, v|
    next if v['enable'].to_s != 'true'

    # add MUPPermissionKit subSpec
    permission_kit_match = permission_kit_regex.match(line)
    if permission_kit_match
      sub_spce_dependency = pod_subspec_dependency_content(permission_kit_match, $PERMISSION_KIT_SUBSPECS[key.to_sym])
      final_pod_content += sub_spce_dependency if sub_spce_dependency.present?
    end

    # add MUPPermissionKit subSpec
    permission_component_match = permission_component_regex.match(line)
    if permission_component_match
      sub_spce_dependency = pod_subspec_dependency_content(permission_component_match, $PERMISSION_COMPONENT_SUBSPECS[key.to_sym])
      final_pod_content += sub_spce_dependency if sub_spce_dependency.present?
    end
  end
end
File.open(pod_file_path, 'w') { |file| file.write(final_pod_content) }
			]]>
        </pre_dependency_install>
      </dsl>
    </ruby>
  </ios>
</component><component namespace="com.nd.edu.ap.component" name="parent-child-raship" display="parent-child-raship">
	<pages>
       <page type="cmp" name="test" display="测试" toplevel="1"/>
	</pages>
	
	<properties>
		<property type="enum" name="head-strategy" displayName="头部策略">
        	<tip>设置头部策略，选项为：所有接口增加头部，白名单增加头部，除黑名单外增加头部。如果什么都不选，则所有接口不增加头部</tip>
        	<img src="https://reference.doc.101.com/appcomponent/userguide/docking/children_delegate/images/info.png"/>
            <options multi="false">
              <option value="open-head-all">所有接口增加头部</option>
              <option value="open-white-list">白名单增加头部</option>
              <option value="open-black-list">除黑名单外增加头部</option>
            </options>
    	</property>
      
        <property type="json" name="white-host" displayName="白名单host" value="">
        	<tip>例如："{"filterData":[{"component_name":"com.nd.edu.ap.component.parent-child-raship","host_key":"relationshipUrl"},{"component_name":"com.nd.hy.elearning","host_key":"community_gateway"}]}"，当"头部策略"选择"白名单增加头部"，仅对白名单增加头部策略；</tip>
          	<img src="https://reference.doc.101.com/appcomponent/design/design/children_delegate_sign/extra/images/info.png"/>
        </property>
      
        <property type="json" name="black-host" displayName="黑名单host" value="">
       		<tip>例如："{"filterData":[{"component_name":"com.nd.edu.ap.component.parent-child-raship","host_key":"relationshipUrl"},{"component_name":"com.nd.hy.elearning","host_key":"community_gateway"}]}"，当"头部策略"选择"除黑名单外增加头部"，除黑名单外别的头部都会增加策略；</tip>
            <img src="https://reference.doc.101.com/appcomponent/design/design/children_delegate_sign/extra/images/info.png"/>
        </property>
	</properties>
	
	<events>
	</events>

	<handlers>
      <handler name="ios://uc_on_login_success" desc="" receive_event="uc_on_login_success"/>
      <handler name="not-ios://uc_on_login_success" desc="" receive_event="uc_on_login_success"/>
	</handlers>
	
	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
			<property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
		</properties>
      	<providers>
        	<provider name="com.nd.edu.ap.component.parent-child-raship.childSign" filter="com.nd.edu.ap.component.parent-child-raship.childSign" desc="获取签名相关信息的Provider" anClass="com.nd.edu.ap.raship.component.ChildShipPro" iosClass="EAPCRChildSignProvider"/>
    	</providers>
	</runtime>

  	<android>
      	<class>com.nd.edu.ap.raship.component.ChildShipCom</class>
    	<dependency>
			<![CDATA[
				implementation("com.nd.sdp.android:edu-ap-parent-child-raship-sdk-android:13.0.3-rc.3")
        	]]>
    	</dependency>
        <scenes>
        	<scene name="android.permission.INTERNET" displayName="网络权限" describe="查询亲子关系需要网络权限" isAsk="true" closeable="true" type="permission"/>
        </scenes>
	</android>
  
   <ios>
        <class>edu_ap_parent_child_raship_sdk_iosObjC_component</class>
        <dependency>
            <![CDATA[
				pod 'edu_ap_parent_child_raship_sdk_ios', '1.0.7'
        	]]>
        </dependency>
    </ios>
</component><component namespace="com.nd.sdp.component" name="edu-family" display="X-家庭关系">
    <pages>
        <page type="cmp" name="test" display="测试入口" toplevel="1"/>
        <page type="cmp" name="test_sdk" display="SDK测试入口(iOS)" toplevel="1"/>
    </pages>
  
    <properties>
        <property type="bool" name="ipad_orientation_all" displayName="是否允许iPad横竖屏切换" value="false"/>
    </properties>
  
    <events/>
    <handlers/>
  
    <runtime>
        <properties>
            <property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
            <property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
        </properties>
    </runtime>
  
    <android>
        <class>com.nd.sdp.android.ele.family.EduFamilyComponent</class>
        <dependency>
            <![CDATA[
			    compile 'com.nd.sdp.android:edu-family-android:2.2.0-rc03'
                android {
	              packagingOptions {
	              	exclude 'LICENSE.txt'
	              }
         		}
             ]]>
        </dependency>
    </android>
  
    <ios>
        <class>EduFamilyComponent</class>
        <dependency>
            <![CDATA[
				pod 'edu_family_ios', '0.0.43'
        	]]>
        </dependency>
    </ios>
</component><component namespace="com.nd.sdp.component" name="apf-permission" display="apf-permission" type="function_library">
	<pages>
	</pages>
	<properties>
       <property type="bool" name="is_open_receive_boot_completed_permission" desc_true="开启" desc_false="关闭" displayName="(已废弃，请在隐私权限配置中关闭)是否开启BOOT开机自启动权限" value="true"/> 
	</properties>

	<events>
	</events>

	<handlers>
	</handlers>
 

	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
			<property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
		</properties>
	</runtime>
  
  <android>
    
     <groovy>
        <![CDATA[
  
		  ]]>
      </groovy>
  </android>
  
</component><component namespace="com.nd.sdp.component" name="el-mediaplayer-sdk" display="教育-视频控件SDK2.0">
	<pages>
      <page type="cmp" name="mediaPlayerTest" display="测试页面" toplevel="1" allow_guest="true"/>
      <page type="cmp" name="default_player" display="默认播放器" toplevel="1" allow_guest="true"/>
	</pages>
	
	<properties>
	</properties>
	
	<events>
	</events>

	<handlers>
	</handlers>

	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
			<property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
		</properties>
	</runtime>
    <ios>
		<class>ElearningMediaplayerComponent</class>
		<dependency>
			 <![CDATA[
			pod 'ElearningMediaPlayerSDK', '1.0.57'

             ]]>
		</dependency>
        <meta-datas>
          <meta-data xpath="//plist/dict" key="UIBackgroundModes" type="array" file="/ComponentAppBase/Info.plist">
            <![CDATA[
              <string>audio</string>
            ]]>
          </meta-data>
        </meta-datas>
	</ios>
</component><component namespace="com.nd.sdp.component" name="im-chat-social-dynamic" display="IM1对1聊天动态" type="function_library">
	<pages>
	</pages>
	
	<properties>
	</properties>
	
	<events>
	</events>
  
   <runtime>
     
      <properties>
        <property type="bool" name="lazy_init_android" displayName="是否开启延迟初始化" value="true"/>
        <property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
      </properties>
     
     </runtime>

	<handlers>
	</handlers>
  <android> 
    <dependency> 
      <![CDATA[
              compile('com.nd.module_im:social_dynamic:1.0.6.28.develop'){
                 exclude group:'com.nd.android.sdp.im',module:'module_im'
              }
       ]]> 
    </dependency> 
  </android> 
  <ios>
		<dependency>
           <![CDATA[
				pod 'CocoaAsyncSocket', '7.4.3'
			]]>
		</dependency>

	</ios>

</component><component namespace="com.nd.xst" name="xs-commons" display="X学习云-公共能力">
	<pages>
	</pages>
	
	<properties>
		<property type="string" name="modAppId" displayName="安卓-自定义APPID"/>
        <property type="boolean" name="modifyHost" displayName="安卓-切换新域名"/>
      	<property type="string" name="key_school_id" displayName="UC用户学校ID拓展配置key" value="x_school_id"/>
        <property type="string" name="key_school_name" displayName="UC用户学校名拓展配置key" value="x_school_name"/>
      
        <property type="txt" name="topic_config_src" displayName="节日化运营配置" value="https://topic.ykt.cbern.com.cn/app/config/v1/app_topic_config.json"/>
        <property type="txt" name="app_funs_src" displayName="大模块配置" value="https://grey-config.ykt.cbern.com.cn/app_func.json"/>
      	<property type="txt" name="app_conf_src" displayName="小功能配置" value="https://api.ykt.cbern.com.cn/zxx/api_static/conf/app_conf.json"/>
      	<property type="txt" name="req_interceptor_android" displayName="拦截器Android" value="https://api.ykt.cbern.com.cn/zxx/api_static/conf/req_interceptor_ard.json"/>
        <property type="txt" name="req_interceptor_ios" displayName="拦截器iOS" value="https://api.ykt.cbern.com.cn/zxx/api_static/conf/req_interceptor_ios.json"/>
  
	</properties>
  	
	
	<events>
	</events>

	<handlers>
      <handler name="ios://forInitEvent" receive_event="for_init_event" desc="初始化组件事件"/>
   </handlers>
  
	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
			<property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
		</properties>
      <providers>
        <provider name="com.nd.sdp.uc.register.injector" filter="com.nd.sdp.uc.register.injector.filter" desc="注册开关注入" iosClass="XCBUCDataProvider" anClass="com.nd.sdp.android.xcloud_assemble.config.RegisterDataProvider"/>
     	<provider name="com.nd.xst.common.configProvider" filter="" desc="配置开关获取" iosClass="XCBConfigProvider"/>
      </providers>
	</runtime>
  
    <android>
        <groovy>
        <![CDATA[
			// 支持自定义app-id
			apply from: "http://git.sdp.nd/mobile/res/raw/master/x-study/5.1.3/mod_app_id.gradle"
			apply from: "http://git.sdp.nd/mobile/res/raw/master/x-study/6.0.0/mod_app_host.gradle"

            //读取打包配置请求拦截地址，写入assets
            apply from: "http://git.sdp.nd/android-social-doc/library-doc/-/raw/master/generateAssertReqConfig"
			// 自动替换构建后的AndroidManifest.xml中声明的所有Activity屏幕方向为编辑器配置方向
			apply from: 'http://git.sdp.nd/mobile/res/-/raw/master/x-study/support_pad.gradle'
        ]]>
        </groovy>
		<dependency>
          def xCloudVer = "1.2.6-rc01"
          implementation("com.nd.sdp.android.xcloud:xcloud-sdk:${xCloudVer}@aar")
          implementation("com.nd.sdp.android.xcloud:xcloud-textview-loader:${xCloudVer}@aar")
          implementation("com.nd.sdp.android.xcloud:xcloud-ui:${xCloudVer}@aar")
          implementation("com.nd.sdp.android.xcloud:xcloud-screen-lock:${xCloudVer}")

          configurations {
            all*.exclude group: 'com.nd.sdp.android', module: 'x-cloud-sdk'
            all*.exclude group: 'com.nd.sdp.android.xcloud.ui', module: 'user-textview'
            all*.exclude group: 'com.nd.sdp.android', module: 'xxue-ui'
          }
          
          // 注入Glide图片加载的sdp-app-id头部
          implementation "com.nd.sdp.ele.android.reader:reader-frame:2.0.8-dev02"
          
          // 配置sdk
          implementation('com.nd.sdp.android:xst-config:1.4.3-rc02')
        </dependency>
    </android>
  	<ios>
        <class>XCBaseComponent</class>
        <dependency>
            <![CDATA[
			pod 'xcloud_base_ios', '0.0.209'
			pod 'xst_study_record_ios','0.0.80'
        ]]>
        </dependency>
      <ruby>
            <entry>XCBProBuildExecutor</entry>
            <dsl>
                <pre_dependency_install>
                    <![CDATA[
                          require 'pathname'
                          require 'json'
                          # 修改 app.json 文件
                          current_dir = Pathname(Dir.pwd)
                          ostr = '.xue.eduyun.cn'
						  ostr1 = '.vlab.eduyun.cn'
                          nstr = '.ykt.eduyun.cn'

                          cdncs = '.zy.cetav.com.cn'
                          cdncs_new = '.ykt.cbern.com.cn'

                          domains = {"ykt.xue.eduyun.cn" => "xue.ykt.eduyun.cn", "v1-ws.zy.cetav.com.cn" => "v1.ykt.cbern.com.cn", "v2-ws.zy.cetav.com.cn" => "v2.ykt.cbern.com.cn", "v3-ws.zy.cetav.com.cn" => "v3.ykt.cbern.com.cn"}
                          puts "### 开始修改域名 ### "

                          json_files =  Dir.glob(current_dir.join("**/*.json"))
                          entitlements = Dir.glob(current_dir.join("**/*.entitlements"))
                          json_files = json_files | entitlements
                          json_files.each do |json_path|
                              if File.basename(json_path) == 'script.json' 
                                  next
                              end
                              json_content = File.read(json_path)
                              changed = false
                              keys = domains.keys
                              domains.each { |key,value|
                                  if json_content.include? key
                                      puts "### 文件: #{json_path} 中有 #{key} 进行替换成 #{value}"
                                      json_content = json_content.gsub(key,value)
                                      changed = true
                                  end
                              } 
                              if json_content.include? ostr
                                  puts "### 文件: #{json_path} 中有 #{ostr} 进行替换成 #{nstr}"
                                  json_content = json_content.gsub(ostr,nstr)
                                  changed = true
                              end
                              if json_content.include? ostr1
                                  puts "### 文件: #{json_path} 中有 #{ostr1} 进行替换成 #{nstr}"
                                  json_content = json_content.gsub(ostr1,nstr)
                                  changed = true
                              end
                              if json_content.include? cdncs
                                  puts "### 文件: #{json_path} 中有 #{cdncs} 进行替换成 #{cdncs_new}"
                                  json_content = json_content.gsub(cdncs,cdncs_new)
                                  changed = true
                              end
                              if changed
                                  puts "### 保存文件: #{json_path}"
                                  file = File.open(json_path, "w") { |f| f << json_content }
                              end
                          end

                          puts "### 修改域名结束 ### "
                          # 修改 app.json 文件
                          current_dir = Pathname(Dir.pwd)
                          app_json_path = current_dir.join("app/assets/app_factory/app/app.json")
                          app_json_content = File.read(app_json_path)
                          item = JSON.parse(app_json_content)
						  nappid = 'e5649925-441d-4a53-b525-51a2f1c4e0a8'
                          env_str = '29'
                          if item['env'] == env_str
                             puts "### 开始修改 app.json 文件: #{app_json_path}"
                             item['appid'] = nappid
							 item['pkgid'] = nappid
							 puts "### 新的appid为:#{item['appid']}" 
                             File.write(app_json_path, JSON.dump(item))
                             puts "### 修改完成"
                          end
                          if item['env'] == '8'
                             puts "### 开始修改 app.json 文件: #{app_json_path}"
                             item['appid'] = '122fc2fa-d78e-43af-856e-3f8148d1fc55'
							 item['pkgid'] = '122fc2fa-d78e-43af-856e-3f8148d1fc55'
							 puts "### 新的appid为:#{item['appid']}" 
                             File.write(app_json_path, JSON.dump(item))
                             puts "### 修改完成"
                          end
						  xcode_projects = Dir.glob(current_dir.join('*.xcodeproj'))
                          raise Informative, 'require a xcodeproj.' if xcode_projects.empty?
                          raise Informative, 'too many xcodeproj.' if xcode_projects.length > 1
                          project_name = File.basename(xcode_projects.first, '.xcodeproj')
                          app_json_path1 = current_dir.join("#{project_name}/Resources/app_factory/app/app.json")
						  app_json_content1 = File.read(app_json_path1)
                          item1 = JSON.parse(app_json_content1)
                          if item1['env'] == env_str
                             puts "### 开始修改 app.json 文件: #{app_json_path1}"
                             item1['appid'] = nappid
							 item1['pkgid'] = nappid
							 puts "### 新的appid为:#{item1['appid']}" 
                             File.write(app_json_path1, JSON.dump(item1))
                             puts "### 修改完成"
                          end
						  if item['env'] == '8'
                             puts "### 开始修改 app.json 文件: #{app_json_path1}"
                             item['appid'] = '122fc2fa-d78e-43af-856e-3f8148d1fc55'
							 item['pkgid'] = '122fc2fa-d78e-43af-856e-3f8148d1fc55'
							 puts "### 新的appid为:#{item['appid']}" 
                             File.write(app_json_path1, JSON.dump(item))
                             puts "### 修改完成"
                          end
                          build_json = current_dir.join("app/assets/app_factory/zh-CN/components/build.json")
                          build_json_content = File.read(build_json)
                          items = JSON.parse(build_json_content)
                          req_interceptor_ios = ""
                          app_conf_src = ""
                          app_funs_src = ""
                          common_id = "com.nd.xst.xs-commons"
                          items.each do |item|
                            component_id = item['component']['namespace'] + '.' + item['component']['name']
                            if component_id == common_id 
                              req_interceptor_ios = item["properties"]["req_interceptor_ios"]
                              app_conf_src = item["properties"]["app_conf_src"]
                              app_funs_src = item["properties"]["app_funs_src"]
                              puts "### req_interceptor_ios #{req_interceptor_ios} "
                              puts "### app_conf_src #{app_conf_src} "
                              puts "### app_funs_src #{app_funs_src} "
                            end
                          end
                          uri = URI(req_interceptor_ios)
                          req_interceptor_content = Net::HTTP.get(uri)
                          common_bundle = common_id + "_skin.bundle"
                          if req_interceptor_content.include?("NoSuchKey") 
                            puts "### error"
                          else 
                            file_name = "**/"+common_bundle+"/req_interceptor.json"
                            files =  Dir.glob(current_dir.join(file_name))
                            files.each do |json_path|
                              puts "### #{json_path} "
                              file = File.open(json_path, "w") { |f| f << req_interceptor_content }
                            end
                          end

                          uri = URI(app_conf_src)
                          app_conf_content = Net::HTTP.get(uri)
                          common_bundle = common_id + "_skin.bundle"
                          if app_conf_content.include?("NoSuchKey") 
                            puts "### error"
                          else 
                            file_name = "**/"+common_bundle+"/app_conf.json"
                            files =  Dir.glob(current_dir.join(file_name))
                            files.each do |json_path|
                              puts "### #{json_path} "
                              file = File.open(json_path, "w") { |f| f << app_conf_content }
                            end 
                          end

                          uri = URI(app_funs_src)
                          app_funs_content = Net::HTTP.get(uri)
                          common_bundle = common_id + "_skin.bundle"
                          if app_funs_content.include?("NoSuchKey") 
                            puts "### error"
                          else 
                            file_name = "**/"+common_bundle+"/app_funs.json"
                            files =  Dir.glob(current_dir.join(file_name))
                            files.each do |json_path|
                              puts "### #{json_path} "
                              file = File.open(json_path, "w") { |f| f << app_funs_content }
                            end
                          end
                    ]]>
                </pre_dependency_install>
            </dsl>            
        </ruby>
    </ios>
</component><component namespace="com.nd.xst" name="downloader" display="X学习-下载管理">
	<pages>
      <page type="cmp" name="dowmload_manager" display="下载列表" toplevel="1"/>
      <page type="cmp" name="download_business_list" display="新下载列表" toplevel="1" allow_guest="true"/>
      <page type="cmp" name="setting" display="设置页" toplevel="2" allow_guest="true"/>
      <page type="cmp" name="resList" display="资源列表" toplevel="2" allow_guest="true"/>
	</pages>
	
	<properties>
	</properties>
	
	<events>
	</events>
  
	<routes>
      <route source="cmp://com.nd.sdp.component.local-data-management/dowmload_manager" destination="cmp://com.nd.xst.downloader/dowmload_manager"/>
      <route source="cmp://com.nd.sdp.component.local-data-management/download_business_list" destination="cmp://com.nd.xst.downloader/download_business_list"/> 
      <route source="cmp://com.nd.sdp.component.local-data-management/download_resource_list" destination="cmp://com.nd.xst.downloader/download_resource_list"/> 
      <route source="cmp://com.nd.sdp.component.local-data-management/setting" destination="cmp://com.nd.xst.downloader/setting"/> 
      <route source="cmp://com.nd.sdp.component.elearning-course/alldownloadlist" destination="cmp://com.nd.xst.downloader/download_business_list"/>	
  </routes>

	<handlers>
      <handler name="ios://downloadSDKNotifyNotReachable" desc="无网络" receive_event="ELDownloadSDKNotifyNotReachable"/>
      <handler name="ios://downloadSDKNotifySwitchToWiFi" desc="网络切换到wifi" receive_event="ELDownloadSDKNotifySwitchToWiFi"/>
      <handler name="ios://downloadSDKNotifySwitchToWWANAndPause" desc="网络切换到WWAN并停止下载" receive_event="ELDownloadSDKNotifySwitchToWWANAndPause"/>
      <handler name="ios://downloadSDKNotifySwitchToWWAN" desc="网络切换到WWAN" receive_event="ELDownloadSDKNotifySwitchToWWAN"/>
	</handlers>

	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
			<property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
		</properties>
        <providers>
            <provider name="com.nd.sdp.component.local-data-management.Provider" filter="com.nd.sdp.component.local-data-management.Provider.Filter" desc="provider的声明" anClass="" iosClass="XDMCectLDMDownloadCenterProvider"/>
            <provider name="com.nd.sdp.component.local-data-management.provider" filter="com.nd.sdp.component.local-data-management.provider.filter" desc="provider的声明" anClass="DownloadDataProvider" iosClass="XDMUserPageDownloadCenterProvider"/>
        </providers>
	</runtime>
  
    <android>
		<class>com.nd.hy.android.course.download.DownloadManagerComponent</class>
		<dependency>
          def downloadVersionNew = "3.5.2"
          implementation "com.nd.sdp.ele.android.download:download-core:${downloadVersionNew}"
          implementation "com.nd.sdp.ele.android.download:download-ui:${downloadVersionNew}"
       	  implementation ("com.nd.sdp.android:xst-downloader-android:1.0.7-rc02")
          configurations {
            all*.exclude group: 'com.nd.sdp.android', module: 'cect-download-manager'
          }
		</dependency>
       
        <groovy>
			<![CDATA[
		    	android {
    				compileOptions {
        				sourceCompatibility 1.8
        				targetCompatibility 1.8
    				}
				}
			]]>
		</groovy>
	</android>
	<ios>
        <class>XstDownloaderComponent</class>
        <dependency>
            <![CDATA[
			pod 'xst_downloader_ios', '0.0.27'
        ]]>
        </dependency>
	</ios>
</component><component namespace="com.nd.xst" name="x-player" display="X-业务播放器">
    <pages>
        <page type="cmp" name="play" display="资源播放页" toplevel="1" allow_guest="true"/>
        <page type="cmp" name="playVideo" display="播放视频" toplevel="1" allow_guest="true"/>
        <page type="cmp" name="debug" display="调试" toplevel="1" allow_guest="true"/>
        <page type="cmp" name="resList" display="资源列表" toplevel="2" allow_guest="true"/>
        <page type="cmp" name="elecBookList" display="电子教材列表" toplevel="1" allow_guest="true"/>
    </pages>
    <properties>
        <category name="iOSMediaPlayerSdkCategory" displayName="iOS视频播放器配置">
            <property type="enum" name="iOSMediaPlayerSdkType" displayName="iOS视频默认SDK" value="0">
               <options multi="false">
                 <option value="0">原生视频SDK</option>
                 <option value="1">阿里视频SDK</option>
               </options>
            </property>
            <property type="bool" name="XCicadaPlayer" displayName="iOS阿里播放器组件" value="true">
                <dependency>
                    <component namespace="com.nd.xst" name="x-cicada-player"/>
                </dependency>
            </property>
        </category>
    </properties>
    <events>
    </events>
    <handlers>
        <handler name="ios://event_handler_DownloadCenterCustomPlayResource" desc="用户自定义下载PDF播放消息回调" receive_event="CECT_DOWNLOAD_CENTER_CUSTOM_PDF_PLAY_RESOURCE"/>
        <handler name="ios://event_handler_socialShareResult" desc="分享通知外部提示" receive_event="ND_SOCIAL_SHARE_RESULT"/>
        <handler name="event_handler_pract_action_event" desc="断点练习事件" receive_event="appfactory_on_custom_pract_action_event"/>
    </handlers>
    <runtime>
        <properties>
            <property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
            <property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
        </properties>
        <providers>
            <provider name="com.nd.xst.player.point.exercise.provider" filter="com.nd.xst.player.point.exercise.provider.filter" desc="断点练习" anClass="com.nd.xst.player.point.exercise.provider.PointExerciseProvider" iosClass="XPLKeyPointProvider"/>
	    </providers>
    </runtime>
    <android>
        <class>com.nd.xst.android.player.cmp.XPlayerComponent</class>
        <dependency>
            <![CDATA[
       		    implementation ("com.nd.xst:x-player-component:0.8.2-rc07")
                //视频
                def xstVideoVersion = "2.0.2-rc08" 
                implementation "com.nd.sdp.ele.android.video:video:${xstVideoVersion}" 
                implementation "com.nd.sdp.ele.android.video.doc:video-doc:${xstVideoVersion}" 
                implementation "com.nd.sdp.ele.android.video.exercise:video-exercise:${xstVideoVersion}" 
				implementation "com.nd.sdp.ele.android.video:video-engine-exo:${xstVideoVersion}" 
                implementation "com.nd.sdp.ele.android.video.engine.mp:video-engine-original:${xstVideoVersion}" 
                //文档
                def xstDocVersion = "2.1.0-rc02"
                implementation "com.nd.sdp.ele.android.reader:reader-image:${xstDocVersion}"
                implementation "com.nd.sdp.ele.android.reader:reader-pdf:${xstDocVersion}"
             ]]>
        </dependency>
        <groovy>
            <![CDATA[ 
                android { 
                    compileOptions { 
                        sourceCompatibility 1.8 
                        targetCompatibility 1.8 
                    } 
                } 
            ]]>
        </groovy>
    </android>
    <ios>
        <class>XSTPlayerComponent</class>
        <dependency>
            <![CDATA[ 
                 pod 'xst_player_ios', '1.0.115' 
                 pod 'x_doc_player', '1.0.13' 
                 pod 'xst_media_player_ios', '0.0.12'
            ]]>
        </dependency>
    </ios>
</component><component namespace="com.nd.xst" name="consult" display="X-答疑咨询">
	<pages>
		<page type="cmp" name="testMe" display="X学习云-答疑咨询Test" toplevel="1" allow_guest="true"/>
	</pages>
	
	<properties>
      <property type="bool" name="enable_shot_edit" displayName="是否允许图片编辑" value="true"/>
       <property type="bool" name="enable_ask_other" displayName="是否开启问问其他人入口" value="false"/>
	</properties>
	
	<events>
	</events>

	<handlers>
      <handler name="xst_event_asking" desc="课程提问事件" receive_event="XCloud_Event_Business_Asking"/>
      <handler name="ios://xst_event_uc_on_login_success" receive_event="uc_on_login_success" desc="登录成功事件监听"/>
	</handlers>

	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
			<property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
		</properties>
	</runtime>
    <android>
    	<class>com.nd.sdp.android.xst.ask.XAskComponent</class>   
		<dependency>
    	<![CDATA[  
  			compile 'com.nd.sdp.android:xst-consult-android:1.5.1-rc01'
			implementation 'com.nd.xst:pic-editor:0.3-rc01'
		]]> 
		</dependency>
   	</android> 
	<ios>
        <class>XSTConsultComponent</class>
        <dependency>
            <![CDATA[
			pod 'xst_consult_ios', '0.0.11'
        ]]>
        </dependency>
    </ios>
</component><component namespace="com.nd.pbl" name="weixinpay" display="微信支付" type="function_library">
    <pages>
    </pages>
    
    <properties>
    </properties>
    
    <events>
    </events>

    <handlers>
    </handlers>

    <runtime>
        <properties>
            <property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="false"/>
        </properties>
    </runtime>
    
    <build>
        <android>   
            <safe_whitelist>
                <activities>
                    <activity name="com.nd.paysdk.wxapi.WXPayEntryActivity" describe="微信第三方支付需要" type="activity" owner="912025"/>
                </activities>
            </safe_whitelist>
        </android>
    </build>

    <android>
        <scenes>
            <scene name="android.permission.ACCESS_WIFI_STATE" displayName="获取WiFi状态" describe="查询用户设备的网络状态" isAsk="true" closeable="true" type="permission"/>
            <scene name="android.permission.ACCESS_NETWORK_STATE" displayName="获取网络状态" describe="查询用户设备的网络状态" isAsk="true" closeable="true" type="permission"/>
            <scene name="android.permission.INTERNET" displayName="访问网络" describe="提供接口访问网络的需求" isAsk="true" closeable="true" type="permission"/>
            <scene name="android.permission.WRITE_EXTERNAL_STORAGE" displayName="写入外部存储" describe="写入数据和图片缓存" isAsk="true" closeable="true" type="permission"/>
        </scenes>
        <dependency>
            <![CDATA[
                compile('com.nd.sdp.android:social-wxpay:3.0.3.3@aar') {
                    transitive = true
                    changing = true
                }
                compile('com.tencent.android.weixin:open_sdk:1.0') {
                    transitive = true
                    changing = true
                }
             ]]>
        </dependency>
    </android>
    <ios>
      <class>StartupComponent</class>
      <dependency>
        <![CDATA[
            pod 'WeChatPay', '0.0.11'
            pod 'WechatOpenSDK', '1.8.6.2'
        ]]>
      </dependency>
    </ios>
    
</component><component namespace="com.nd.xst" name="x-textbook" display="Ext_X课本" extension="true">
	<pages>
      <page type="cmp" name="bookDetail2" display="课本详情页2" allow_guest="true">
          <extension namespace="com.nd.xst" name="course" type="cmp" page="course"/>
        <properties>
          <property name="image" displayName="属性占位" type="bool" value="true"/>
        </properties>
       </page>
	</pages>
	
	<properties>
	</properties>
	
	<events>
	</events>

	<handlers>
	</handlers>

	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
			<property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
		</properties>
	</runtime>
  <android>
		<class>com.nd.android.xst.study.actv.StudyActExtendComponent</class>
		<dependency>
        	compile 'com.nd.xst:study-activity:5.2.0-rc1'
        </dependency>
    </android>
	<ios>
		<class>XTextbookComponent</class>
		<dependency>
			<![CDATA[
				pod 'x_textbook_ios', '1.0.1'
			]]>
		 </dependency>
	</ios>
</component><component namespace="com.nd.xst" name="app-startup" display="X学习云-启动组件">
	<pages>
      <page type="cmp" name="chat_list" display="IM消息（可隐藏）" toplevel="1" allow_guest="true"/>
      <page type="cmp" name="register" display="注册关闭时页面" toplevel="2" allow_guest="true"/>
      <page type="cmp" name="login_transform" display="拦截登录中转页" toplevel="2" allow_guest="true"/>
      <page type="cmp" name="block" display="拦截提示页面" toplevel="2" allow_guest="true">
      </page>
	</pages>
	
	
	<handlers>
        <handler name="not-ios://userAgreeProtocol" desc="同意用户协议事件" receive_event="KEY_USER_ACCEPT_AGREEMENT_EVENT_ASYNC"/>
        <handler name="ios://registerFlowControl" desc="注册限流页面代理" receive_event="register_flow_control"/>
        <handler name="not-ios://register_flow_control" desc="注册限流页面代理" receive_event="register_flow_control"/>
	</handlers>

	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
			<property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
		</properties>
	</runtime>
  
  <android>
		<class>com.nd.sdp.xst.startup.XSTStartUpComponent</class>
		<dependency>
          compile ("com.nd.sdp.android:x-app-startup-android:1.3.8-rc02")
        </dependency>
    </android>
  <ios>
        <class>XSTAppStartupComponent</class>
        <dependency>
            <![CDATA[
			pod 'xst_app_startup_ios', '0.0.24'
        ]]>
        </dependency>
    </ios>
</component><component namespace="com.nd.social.component" name="ndvote" display="投票">
	 <properties>
		<property type="bool" name="vote_statistics_pk_visible" displayName="是否显示投票-PK" value="true"/>	
        <property type="bool" name="vote_statistics_in_bottom_menu" displayName="投票是否显示在底部菜单" value="true"/>	
    </properties>
	<pages>
		<page type="cmp" name="VoteList" display="投票列表" toplevel="1">
			<params> 
        		<param key="scopeType">投票类型</param>
        		<param key="scopeId">投票类型Id</param>
        		<param key="bizType">组件Id</param>
			</params>
  		</page>
  
		<page type="cmp" name="VotePublish" display="发布投票界面">
    		<params> 
      			<param key="scopeType">投票类型</param>
      			<param key="scopeId">投票类型Id</param>
      			<param key="bizType">组件Id</param>
    		</params>
  		</page>
  
		<page type="cmp" name="VoteDetail" display="投票详情界面">
    		<params> 
      			<param key="scopeType">投票类型</param>
      			<param key="scopeId">投票类型Id</param>
      			<param key="bizType">组件Id</param>
      			<param key="voteId">投票id</param>
     		</params>
   		</page>
	</pages>
	<properties>
		<property type="bool" name="function_enable" displayName="群投票置顶">
        	<dependency>
          		<component namespace="com.nd.sdp.component" name="groupstick-plugin"/>
        	</dependency>
    	</property>
	</properties>
  
  	<runtime>
    <properties>
      <property type="bool" name="lazy_init_android" displayName="是否开启延迟初始化" value="true"/>
      <property type="bool" name="lazy_init_ios" displayName="是否开启延迟初始化" value="true"/>
    </properties>

    <handlers>
   	  <handler name="event_ndvote_get_votes" desc="获取投票信息" receive_event="event_ndvote_get_votes"/>
  	  <handler name="event_ndvote_get_refresh_vote_view" desc="获取或刷新投票预览view" receive_event="event_ndvote_get_refresh_vote_view"/>
      <handler name="event_ndvote_delete_vote" desc="删除投票" receive_event="event_ndvote_delete_vote"/>
      <handler name="event_ndvote_create_vote" desc="发起投票" receive_event="event_ndvote_create_vote"/>
      <handler name="ios://receive_imstick_component_loginin" desc="" receive_event="IMSTICK_COMPONENT_LOGININ"/> 
      <handler name="imPlugInStartupEvent" desc="用于IM插件启动(注意实现imPlugInStartup方法)" receive_event="im_PlugIn_Startup_Event"/>
    </handlers>

    <providers>
    <!-- <provider name="com.nd.social.component.ndvote.GetChatInputMenuItem" filter="com.nd.social.im.GetChatInputMenuItem" desc="群投票" anClass="com.nd.sdp.android.ndvote.provider.GroupVoteProvider" iosClass="NDVoteMenuItemProvider"/>     
    	<provider name="com.nd.social.component.ndvote.GetGroupStickSettingItems" filter="com.nd.social.im.GetGroupStickSettingItems" desc="群消息置顶" iosClass="NDVoteGroupStickProvider"/> -->
		<provider name="com.nd.social.component.ndvote.gs.ProviderName" filter="com.nd.social.im.GetChatInputMenuItem2" desc="群统计" iosClass="NDGSProvider" anClass="com.nd.sdp.android.ndvote.provider.GroupStatisticsEnterProvider"/>
    </providers>
  </runtime>
  
	<android>
		<class>com.nd.sdp.android.ndvote.VoteComponent</class>
		<dependency>
			<![CDATA[
				android {
                    compileOptions {
                        sourceCompatibility 1.8
                        targetCompatibility 1.8
                    }
                }
			    compile('com.nd.sdp.android.social:nd-vote-component:2.0.23') {
			        transitive = true
			        changing = true
                    exclude group: 'com.nd.android.sdp.im.common.widget', module: 'emotion'
                    exclude group: 'com.nd.android.sdp.im', module: 'imsdk'
                    exclude group: 'com.nd.sdp.component.im', module: 'im-coresdk-impl'
                    exclude group: 'com.nd.android.sdp.im', module: 'im_common'
			    }
                compile("com.nd.sdp.im:flowInteractExtender:0.2.6.release") {
                    exclude group: 'com.nd.android.sdp.im', module: 'imsdk'
                    exclude group: 'com.nd.sdp.component.im', module: 'im-coresdk-impl'
                    exclude group: 'com.nd.android.sdp.im', module: 'im_common'
                }
             ]]>
		</dependency>
      	<scenes>
        	<scene name="android.permission.ACCESS_WIFI_STATE" displayName="" describe="" isAsk="true" type="permission"/>
            <scene name="android.permission.ACCESS_NETWORK_STATE" displayName="" describe="" isAsk="true" type="permission"/>
            <scene name="android.permission.INTERNET" displayName="" describe="框架提供网络请求能力需要" isAsk="true" type="permission"/>
            <scene name="android.permission.WRITE_EXTERNAL_STORAGE" displayName="" describe="" isAsk="true" type="permission"/>
            <scene name="android.permission.CAMERA" displayName="" describe="" isAsk="true" type="permission"/>
            <scene name="android.permission.READ_EXTERNAL_STORAGE" displayName="" describe="框架提供日志存储sd卡需要" isAsk="true" type="permission"/>
            <scene name="android.permission.SYSTEM_OVERLAY_WINDOW" displayName="" describe="" isAsk="true" type="permission"/>
            <scene name="android.permission.GET_TASKS" displayName="" describe="" isAsk="true" type="permission"/>
            <scene name="com.android.launcher.permission.INSTALL_SHORTCUT" displayName="" describe="" isAsk="true" type="permission"/>
            <scene name="com.android.launcher.permission.UNINSTALL_SHORTCUT" displayName="" describe="" isAsk="true" type="permission"/>
            <scene name="com.android.launcher.permission.READ_SETTINGS" displayName="" describe="" isAsk="true" type="permission"/>
            <scene name="android.permission.WRITE_SETTINGS" displayName="" describe="" isAsk="true" type="permission"/>
            <scene name="com.android.launcher.permission.WRITE_SETTINGS" displayName="" describe="" isAsk="true" type="permission"/>
            <scene name="com.android.launcher2.permission.READ_SETTINGS" displayName="" describe="" isAsk="true" type="permission"/>
            <scene name="com.android.launcher2.permission.WRITE_SETTINGS" displayName="" describe="" isAsk="true" type="permission"/>
            <scene name="com.android.launcher3.permission.READ_SETTINGS" displayName="" describe="" isAsk="true" type="permission"/>
            <scene name="com.android.launcher3.permission.WRITE_SETTINGS" displayName="" describe="" isAsk="true" type="permission"/>
            <scene name="org.adw.launcher.permission.READ_SETTINGS" displayName="" describe="" isAsk="true" type="permission"/>
            <scene name="org.adw.launcher.permission.WRITE_SETTINGS" displayName="" describe="" isAsk="true" type="permission"/>
            <scene name="com.htc.launcher.permission.READ_SETTINGS" displayName="" describe="" isAsk="true" type="permission"/>
            <scene name="com.htc.launcher.permission.WRITE_SETTINGS" displayName="" describe="" isAsk="true" type="permission"/>
            <scene name="com.qihoo360.launcher.permission.READ_SETTINGS" displayName="" describe="" isAsk="true" type="permission"/>
            <scene name="com.qihoo360.launcher.permission.WRITE_SETTINGS" displayName="" describe="" isAsk="true" type="permission"/>
            <scene name="com.lge.launcher.permission.READ_SETTINGS" displayName="" describe="" isAsk="true" type="permission"/>
            <scene name="com.lge.launcher.permission.WRITE_SETTINGS" displayName="" describe="" isAsk="true" type="permission"/>
            <scene name="net.qihoo.launcher.permission.READ_SETTINGS" displayName="" describe="" isAsk="true" type="permission"/>
            <scene name="net.qihoo.launcher.permission.WRITE_SETTINGS" displayName="" describe="" isAsk="true" type="permission"/>
            <scene name="org.adwfreak.launcher.permission.READ_SETTINGS" displayName="" describe="" isAsk="true" type="permission"/>
            <scene name="org.adwfreak.launcher.permission.WRITE_SETTINGS" displayName="" describe="" isAsk="true" type="permission"/>
            <scene name="org.adw.launcher_donut.permission.READ_SETTINGS" displayName="" describe="" isAsk="true" type="permission"/>
            <scene name="org.adw.launcher_donut.permission.WRITE_SETTINGS" displayName="" describe="" isAsk="true" type="permission"/>
            <scene name="com.huawei.launcher3.permission.READ_SETTINGS" displayName="" describe="" isAsk="true" type="permission"/>
            <scene name="com.huawei.launcher3.permission.WRITE_SETTINGS" displayName="" describe="" isAsk="true" type="permission"/>
            <scene name="com.fede.launcher.permission.READ_SETTINGS" displayName="" describe="" isAsk="true" type="permission"/>
            <scene name="com.fede.launcher.permission.WRITE_SETTINGS" displayName="" describe="" isAsk="true" type="permission"/>
            <scene name="com.sec.android.app.twlauncher.settings.READ_SETTINGS" displayName="" describe="" isAsk="true" type="permission"/>
            <scene name="com.sec.android.app.twlauncher.settings.WRITE_SETTINGS" displayName="" describe="" isAsk="true" type="permission"/>
            <scene name="com.anddoes.launcher.permission.READ_SETTINGS" displayName="" describe="" isAsk="true" type="permission"/>
            <scene name="com.anddoes.launcher.permission.WRITE_SETTINGS" displayName="" describe="" isAsk="true" type="permission"/>
            <scene name="com.tencent.qqlauncher.permission.READ_SETTINGS" displayName="" describe="" isAsk="true" type="permission"/>
            <scene name="com.tencent.qqlauncher.permission.WRITE_SETTINGS" displayName="" describe="" isAsk="true" type="permission"/>
            <scene name="com.huawei.launcher2.permission.READ_SETTINGS" displayName="" describe="" isAsk="true" type="permission"/>
            <scene name="com.huawei.launcher2.permission.WRITE_SETTINGS" displayName="" describe="" isAsk="true" type="permission"/>
            <scene name="com.android.mylauncher.permission.READ_SETTINGS" displayName="" describe="" isAsk="true" type="permission"/>
            <scene name="com.android.mylauncher.permission.WRITE_SETTINGS" displayName="" describe="" isAsk="true" type="permission"/>
            <scene name="com.ebproductions.android.launcher.permission.READ_SETTINGS" displayName="" describe="" isAsk="true" type="permission"/>
            <scene name="com.ebproductions.android.launcher.permission.WRITE_SETTINGS" displayName="" describe="" isAsk="true" type="permission"/>
            <scene name="com.oppo.launcher.permission.READ_SETTINGS" displayName="" describe="" isAsk="true" type="permission"/>
            <scene name="com.oppo.launcher.permission.WRITE_SETTINGS" displayName="" describe="" isAsk="true" type="permission"/>
            <scene name="com.miui.mihome2.permission.READ_SETTINGS" displayName="" describe="" isAsk="true" type="permission"/>
            <scene name="com.miui.mihome2.permission.WRITE_SETTINGS" displayName="" describe="" isAsk="true" type="permission"/>
            <scene name="com.huawei.android.launcher.permission.READ_SETTINGS" displayName="" describe="" isAsk="true" type="permission"/>
            <scene name="com.huawei.android.launcher.permission.WRITE_SETTINGS" displayName="" describe="" isAsk="true" type="permission"/>
            <scene name="telecom.mdesk.permission.READ_SETTINGS" displayName="" describe="" isAsk="true" type="permission"/>
            <scene name="telecom.mdesk.permission.WRITE_SETTINGS" displayName="" describe="" isAsk="true" type="permission"/>
            <scene name="dianxin.permission.ACCESS_LAUNCHER_DATA" displayName="" describe="" isAsk="true" type="permission"/>
            <scene name="android.permission.FOREGROUND_SERVICE" displayName="" describe="" isAsk="true" type="permission"/>
            <scene name="android.permission.REQUEST_INSTALL_PACKAGES" displayName="" describe="" isAsk="true" type="permission"/>
        </scenes>
	</android>

	<ios>
		<class>NDVoteComponent</class>
		<dependency>
			<![CDATA[
            pod 'NDVoteComponent', '17.0.35'
			pod 'NDVoteSDK', '8.7.12'
             ]]>
		</dependency>

	</ios>
</component><component namespace="com.nd.sdp.component" name="microblog-mobile-common" display="微博打卡业务组件">
	<pages>
      <page type="cmp" name="listPage" display="微博列表界面"/>
      <page type="cmp" name="editPage" display="微博编辑界面"/>
      <page type="cmp" name="detailPage" display="微博详情界面"/>
	</pages>
	
	<properties>
      <property type="string" name="mmc_content_share_weburl" displayName="内容分享web url"/>
	</properties>
	
	<events>
	</events>

	<handlers>
      <handler name="ios://receiveEventGetWeiboList" desc="微博打卡iOS端获取listview方法" receive_event="mmc_event_get_weibo_list"/>
	</handlers>

	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
			<property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
		</properties>
	</runtime>
  <android>
    <class>com.nd.social.nvweibo.NVWeiboComponent</class>
    <dependency><![CDATA[
                    compile('com.nd.sdp.android:microblog-mobile-common:1.0.12') {
                        transitive = true
                        changing = true
                    }
             ]]></dependency>
  </android>
     <ios>
      <class>MMCComponent</class>
     	<dependency>
            <![CDATA[
 				pod 'microblog_mobile_common','1.0.15'
               ]]>
      </dependency>
    </ios>
</component><component namespace="com.nd.xst" name="x-word-chains" display="X-接龙">
	<pages>
    	<page type="cmp" name="createchain" display="发布接龙" toplevel="2" allow_guest="false"/>
        <page type="cmp" name="followchain" display="参与接龙" toplevel="2" allow_guest="false"/>
	</pages>
	
	<properties>
	</properties>
	
	<events>
	</events>

	<handlers>
	</handlers>

	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
			<property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
		</properties>
	</runtime>
  
    <android>
    	<class>com.nd.sdp.android.xst.wchains.WordChainsComponent</class>
		<dependency>
        	 compile ("com.nd.sdp.android:x-word-chains:1.0.4-rc01")
        </dependency>
    </android>
  
      <ios>
       <class>XWordChainsComponent</class>
        <dependency>
            <![CDATA[
			pod 'x_word_chains_ios', '0.0.9'
        ]]>
        </dependency>
    </ios>
  
</component><component namespace="com.nd.sdp.component" name="groupstick-plugin" display="群聊置顶" type="function_library">
    <sdk>
        <js-sdk>
            <name>GroupstickJsBridgeSdk</name>
            <version>0.1</version>
            <android>
                <js-class>com.nd.sdp.android.im.plugin.groupstick.jswrapper.GroupStickJsInjectorProvider</js-class>
                <react-class>com.nd.sdp.android.im.plugin.groupstick.jswrapper.GroupStickReactInjectorProvider
                </react-class>
            </android>
            <ios>
                <js-class>IMCGroupstickJsBridgeSdkModuleProvider</js-class>
            </ios>
        </js-sdk>
    </sdk>
    <pages> </pages>
    <properties> </properties>
    <events> </events>
    <handlers> </handlers>
    <runtime>
        <properties>
            <property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
            <property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
        </properties>
        <handlers>
            <handler name="add_message_top" desc="新增置顶" receive_event="com.nd.sdp.component.groupstick-plugin/add_message_top" anClass="com.nd.sdp.android.im.plugin.groupstick.event.EventStickMessageAddHandler"/>
            <handler name="cancel_message_top" desc="取消置顶" receive_event="com.nd.sdp.component.groupstick-plugin/cancel_message_top" anClass="com.nd.sdp.android.im.plugin.groupstick.event.EventStickMessageCancelHandler"/>
            <handler name="read_message_top" desc="置顶已阅" receive_event="com.nd.sdp.component.groupstick-plugin/read_message_top" anClass="com.nd.sdp.android.im.plugin.groupstick.event.EventStickMessageReadHandler"/>
        </handlers>
    </runtime>
    <android>
        <class>com.nd.sdp.android.im.plugin.groupstick.GroupMessageStickComponent</class>
        <scenes>
            <scene name="android.permission.ACCESS_NETWORK_STATE" displayName="获取网络状态权限" describe="判断网络连接状态" isAsk="fase" closeable="fase" type="permission"/>
            <scene name="_applicationId_.permission.im_message_stick_receiver" displayName="接收自定义广播" describe="接收自定义广播" isAsk="fase" closeable="fase" type="permission"/>
        </scenes>
        <dependency>
            <![CDATA[ 
            compile('com.nd.sdp.im:boxview-rnwrapper:22.9.2.14882.develop')
             compile('com.nd.sdp.im:richview-rnwrapper:22.9.2.14882.develop') 
             compile('com.nd.android.sdp.im:boxview:0.9.1.147.release') 
             compile('com.nd.sdp.android:im-group-message-stick:1.8.38.release')
             compile 'com.facebook.fresco:animated-gif:1.10.0' 
             compile 'com.facebook.fresco:webpsupport:1.10.0' 
             compile('com.nd.sdp.im:group_config:23.6.77.develop') ]]>
        </dependency>
    </android>
    <ios>
        <class>IMCGroupStickComponent</class>
        <dependency>
            <![CDATA[ 
            pod 'groupstickplugin', '1.0.101' 
            ]]>
        </dependency>
    </ios>
    <react-ios>
        <npm>"@sdp.nd/IMGroupStick":"0.0.65"</npm>
    </react-ios>
    <react-android>
        <npm>"@sdp.nd/IMGroupStick":"0.0.65"</npm>
    </react-android>
</component><component namespace="com.nd.sdp.component" name="imcustomservice" display="IM智能客服" type="function_library">
	<pages>
	</pages>
	
	<properties>
	</properties>
	
	<events>
	</events>

   <handlers>
        <handler name="update_unread_num" desc="接收未读数更新通知" receive_event="component_on_refresh_badge"/>
      	<handler name="register_recentcell" desc="接收未读数更新通知" receive_event="im_recentviewcontroller_load"/>
        <handler name="transfer_to_customer_service" desc="接收跳转人工服务" receive_event="com.nd.social.im/im_event_to_artificial_answering_questions"/>
	</handlers>
  
  <routes>
    <route source="cmp://com.nd.social.im/AIIntelligentLearningAssistant" destination="cmp://com.nd.sdp.component.imcustomservice/init"/>
	<route source="cmp://com.nd.social.im/AIPostQuestion" destination="cmp://com.nd.sdp.component.imcustomservice/postQuestion"/>
  </routes>

	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
			<property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
		</properties>
	</runtime>
  
    <runtime>
        <providers>
            <provider name="com.nd.sdp.component.imcustomservice.ComponentLaunched" filter="com.nd.sdp.component.imcustomservice.ComponentLaunched" desc=""/>
        </providers>
    </runtime>
  
   <android>
          <class>com.nd.sdp.im.customerservice.component.CustomerServiceComponent</class>
					<dependency>
              <![CDATA[ 
                        compile('com.nd.sdp.im:customerservice:0.1.77.release'){
                           exclude group:'com.nd.android.sdp.im', module:'module_im'
                        }
       ]]>
					</dependency>
     </android>
  
       <ios>
		<class>AILearningAssistantComponent</class>
		<dependency>
            <![CDATA[
             pod 'AILearningAssistant', '1.0.26'
              ]]>
		</dependency>
	 </ios>
</component><component namespace="com.nd.xst" name="content-interact" display="X学习-内容互动">
	<pages>
      <page type="cmp" name="favoriteManage" display="收藏管理" toplevel="2" allow_guest="false"/>
	</pages>
	
	<properties>
      <property type="string" name="studio_detail_url" displayName="工作室全量数据URL" value="" deprecated=""/>
	</properties>
	
	<events>
	</events>

	<handlers>
      <handler name="xstInteract_handler_suggestion_submit" desc="建议提交事件" receive_event="event_xst_suggestion_submit"/>
	</handlers>

	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
			<property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
		</properties>
      	<providers>
            <provider name="com.nd.sdp.component.xci-content-interact.dataprovider" filter="com.nd.sdp.component.xci-content-interact.dataprovider" desc="关注与收藏" iosClass="XCIDataProvider" anClass="com.nd.xst.interact.sdk.provider.XstContentInteractProvider"/>
        </providers>
	</runtime>
  
    <android>
		<class>com.nd.xst.interact.cmp.XstInteractComponent</class>
		<dependency>
       		def interactVer = "0.2.9-rc05"
       		implementation "com.nd.xst:xst-content-interact:${interactVer}"
            implementation "com.nd.xst:xst-interact-sdk:${interactVer}"
		</dependency>
       <groovy>
			<![CDATA[
		    	android {
					packagingOptions {
						exclude 'META-INF/sdk_release.kotlin_module'
	  				}
				}
			]]>
		</groovy>
	</android>
  

    <ios>
        <class>XstContentInteractComponent</class>
        <dependency>
            <![CDATA[
				pod 'xst_content_interact', '0.0.156'
               ]]>
        </dependency>
    </ios>
  
</component><component namespace="com.nd.social" name="qqshare" display="QQ分享" type="function_library">
	<pages>
	</pages>
	
	<properties>
       <property type="string" name="umeng_qq_appkey_ios" displayName="QQ/Qzone的AppId（iOS）" senior="true"/>
      <property type="string" name="umeng_qq_QQScheme_ios" displayName="QQ/Qzone的QQScheme（iOS）" iOS_URL_Types="1" senior="true"/>
      <property type="string" name="umeng_qq_tencentScheme_ios" displayName="QQ/Qzone的tencentScheme（iOS）" iOS_URL_Types="1" senior="true"/>
	  <property type="string" name="qq_universal_link" displayName="QQ/Qzone的universallink（iOS）" senior="true"/>
  </properties>
	
	<events>
	</events>

	<handlers>
	</handlers>

	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
			<property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
		</properties>
       <handlers>
    	<handler name="ios://receiveQQShareInit" desc="分享子组件初始化事件" receive_event="social_share_subcomponent_init"/>
    </handlers>
	</runtime>
  
  <ios>
    <class>SocialShareQQComponent</class>
    <dependency>
      <![CDATA[
pod 'SocialShareQQComponent', '1.1.6'
pod 'TPQQHelper', '0.0.7'
]]>
    </dependency>
  </ios>
</component><component namespace="com.nd.xst" name="mob-stat-umeng" display="X-友盟统计" type="function_library">
    <pages/>
    <properties>
        <property type="string" name="android.umeng.key" displayName="友盟-安卓-KEY"/>
        <property type="string" name="android.umeng.channel" displayName="友盟-安卓-渠道名" value="official"/>
        <property type="string" name="ios.umeng.key" displayName="友盟-iOS-KEY"/>


    </properties>
    <events/>
    <handlers>
  		<handler name="ios://onStartLogPageEvent" receive_event="xst_start_log_page_event" desc="页面开始"/>
		<handler name="ios://onEndLogPageEvent" receive_event="xst_end_log_page_event" desc="结束页面"/>
		<handler name="ios://onReveiveUMengEvent" receive_event="appfactory_data_analytics_umeng_event" desc="收到友盟埋点事件"/>

    </handlers>
    <android>
        <dependency>
        <![CDATA[
            compile 'com.nd.mob.stat:ext-umeng:1.0.1-rc05'
        ]]>
        </dependency>
        <meta-datas>
            <meta-data xpath="//manifest/application" file="/app/AndroidManifest.xml">
<![CDATA[
				<meta-data android:name="UMENG_APPKEY" android:value="${android.umeng.key}"/>
				<meta-data android:name="UMENG_CHANNEL" android:value="${android.umeng.channel}"/>
]]>
			</meta-data>
        </meta-datas>
    </android>
    <runtime>
        <properties>
            <property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
            <property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
        </properties>
    </runtime>
        <ios>
        <class>mob_stat_umengComponent</class>
        <dependency>
            <![CDATA[
                pod 'mob_stat_umeng', '1.1.4'
               ]]>
        </dependency>
    </ios>
</component><component namespace="com.nd.xst" name="mob-stat-baidu" display="X-百度统计" type="function_library">
	<pages>
	</pages>
	
	<properties>
        <property type="string" name="android.baidu.stat_id" displayName="安卓-KEY"/>
        <property type="string" name="android.baidu.channel" displayName="安卓-渠道名" value="official"/>
        <property type="bool" name="android.baidu.log.enable" displayName="安卓-错误采集" value="false"/>
        <property type="bool" name="android.baidu.only.wifi" displayName="安卓-仅WIFI上报" value="false"/>
      	<property type="string" name="ios.baidu.stat_id" displayName="百度-iOS-KEY"/>
        <property type="string" name="ios.baidu.stat_id_debug" displayName="百度-iOS-KEY（非AppStore版本使用）" value="9607ffd06a"/>
	</properties>
	
	<events>
	</events>

	<handlers>
    	<handler name="ios://onReveiveBaiduEvent" receive_event="appfactory_data_analytics_baidu_event" desc="收到百度埋点事件"/>
        <handler name="ios://forInitEvent" receive_event="for_init_baidu_event" desc="唤起组件初始化"/>
	</handlers>

    <android>
        <dependency>
        <![CDATA[
            compile 'com.nd.mob.stat:ext-bd:1.0.1-dev08'
        ]]>
        </dependency>
        <meta-datas>
            <meta-data xpath="//manifest/application" file="/app/AndroidManifest.xml">
<![CDATA[
				<meta-data android:name="BaiduMobAd_STAT_ID" android:value="${android.baidu.stat_id}"/>
				<meta-data android:name="BaiduMobAd_CHANNEL" android:value="${android.baidu.channel}"/>
				<meta-data android:name="BaiduMobAd_EXCEPTION_LOG" android:value="${android.baidu.log.enable}"/>
				<meta-data android:name="BaiduMobAd_ONLY_WIFI" android:value="${android.baidu.only.wifi}"/>
				<meta-data android:name="BaiduMobAd_CELL_LOCATION" android:value="true"/>
				<meta-data android:name="BaiduMobAd_GPS_LOCATION" android:value="true"/>
				<meta-data android:name="BaiduMobAd_WIFI_LOCATION" android:value="true"/>
				<meta-data android:name="_BaiduMobAd_SCHEME_KEY" android:value="mtj${android.baidu.stat_id}"/>
]]>
			</meta-data>
        </meta-datas>
    </android>
  
	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
			<property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
		</properties>
	</runtime>
  <ios>
        <class>mob_stat_baiduComponent</class>
        <dependency>
            <![CDATA[
                pod 'mob_stat_baidu', '1.0.6'
               ]]>
        </dependency>
    </ios>
</component><component namespace="com.nd.sdp.component" name="edu-schedule" display="教育-简易课程表">
	<pages>
      
         <page type="cmp" name="test" display="测试入口" toplevel="1" allow_guest="true"/> 
      
         <page type="cmp" name="detail" display="课表详情" toplevel="2" allow_guest="true"> 
            <properties>
              <property type="string" name="class_id" displayName="班级ID" i18n="false"/>
            </properties>
         </page>
      
         <page type="cmp" name="share" display="分享" toplevel="2" allow_guest="true"> 
            <properties>
              <property type="string" name="class_name" displayName="班级名称" i18n="false"/>
              <property type="string" name="dentry_id" displayName="课表DentryId" i18n="false"/>
            </properties>
         </page>
	</pages>
	
	<properties>
	</properties>
	
	<events>
	</events>

	<handlers>
	</handlers>
  
 <android>
		<class>com.nd.sdp.android.ele.schedule.ScheduleComponent</class>
		<dependency>
			<![CDATA[
     			compile 'com.nd.sdp.android:edu-schedule:1.1.0.21'
         ]]>
          
		</dependency>
   
   		<scenes>
   			<scene name="android.permission.INTERNET" displayName="网络权限" describe="框架提供网络请求能力需要" isAsk="true" closeable="true" type="permission"/>
   			<scene name="android.permission.read_phone_state" displayName="手机状态权限" describe="框架提供读取手机状态需要" isAsk="true" closeable="true" type="permission"/>
   			<scene name="android.permission.RECORD_AUDIO" displayName="录音权限" describe="框架提供录音需要" isAsk="true" closeable="true" type="permission"/>
   			<scene name="android.permission.READ_EXTERNAL_STORAGE" displayName="存储权限" describe="框架提供日志存储sd卡需要" isAsk="true" closeable="true" type="permission"/>
			<scene name="android.permission.WRITE_EXTERNAL_STORAGE" displayName="存储权限" describe="框架提供日志存储sd卡需要" isAsk="true" closeable="true" type="permission"/>
   			<scene name="android.permission.ACCESS_NETWORK_STATE" displayName="访问网络状态权限" describe="访问网络状态权限" isAsk="true" closeable="true" type="permission"/> 
   		</scenes>
   
	</android>

	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
			<property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
		</properties>
	</runtime>
  
  <ios>
      	<class>ESIComponent</class>
    	<dependency>
			<![CDATA[
				pod 'edu_schedule_ios', '1.0.17'
        	]]>
    	</dependency>
	</ios>
</component><component namespace="com.nd.sdp.component" name="x-live" display="X-班级直播">
    <pages>
        <page type="cmp" name="test" display="测试入口" toplevel="1"/>
        <page type="cmp" name="mainlist" display="直播列表入口" toplevel="1"/>
      	<page type="cmp" name="replay" display="直播回放" toplevel="2"/>
    </pages>
  
    <properties>
      	<property type="string" name="provider_code" value="nd-meeting" displayName="直播提供商代码">
             <tip>ND直播: nd-meeting、CC直播: bokecc</tip>
         </property>
        <property type="string" name="max_days_of_order" value="30" displayName="直播提供商最大可预约天数 (0 则表示不限制)"/>
    </properties>
  
    <handlers>
        <handler name="event_live_end" desc="直播结束事件监听" receive_event="live_broadcast_onStopChannel"/>
        <handler name="userAuditStateEvent" receive_event="com.nd.xst/userauditstate" desc="禁播变更消息"/>
        <handler name="not-ios://event_live_cache" receive_event="event_live_cache" desc="缓存直播scopeType-临时"/>
  	</handlers>
  
    <runtime>
        <properties>
            <property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
            <property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
        </properties>
    </runtime>
  
    <android>
        <class>com.nd.sdp.android.xlive.XLiveComponent</class>
        <dependency>
            <![CDATA[  
  			compile 'com.nd.sdp.android:x-live:0.1.2-rc02'
		]]>
        </dependency>
        <scenes>
            <scene name="android.permission.INTERNET" displayName="网络权限" describe="框架提供网络请求能力需要" isAsk="true" closeable="true" type="permission"/>
            <scene name="android.permission.READ_EXTERNAL_STORAGE" displayName="存储权限" describe="框架提供日志存储sd卡需要" isAsk="true" closeable="true" type="permission"/>
            <scene name="android.permission.WRITE_EXTERNAL_STORAGE" displayName="存储权限" describe="框架提供日志存储sd卡需要" isAsk="true" closeable="true" type="permission"/>
            <scene name="android.permission.ACCESS_NETWORK_STATE" displayName="访问网络状态权限" describe="访问网络状态权限" isAsk="true" closeable="true" type="permission"/>
        </scenes>
    </android>
  
    <ios>
        <class>XLiveComponent</class>
        <dependency>
            <![CDATA[
				pod 'x_live_ios', '1.1.17'
        	]]>
        </dependency>
    </ios>
</component><component namespace="com.nd.xst" name="x-live-public" display="X-公开直播课">
	<pages>
    	<page type="cmp" name="public_live_detail" display="公开直播课详情" toplevel="2" allow_guest="true"/>
        <page type="cmp" name="public_live_list_join" display="公开直播课学习记录" toplevel="2" allow_guest="false"/>
	</pages>
	
	<properties>
	</properties>
	
	<events>
	</events>

	<handlers>
      <handler name="ios://liveStatusChange" receive_event="com.nd.xst.x-live-public/live_status_change" desc="直播状态变更消息"/>
      <handler name="ios://chatroomStatusChanged" receive_event="com.nd.xst.x-live-public/chatroom_status_changed" desc="直播聊天室状态变更消息"/>	
  </handlers>
	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
			<property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
		</properties>
      <providers>
        	<provider name="com.nd.xst.x-live-public.liveDetailProvider" filter="com.nd.xst.x-live-public.liveDetailProvider.filter" desc="获取直播详情" iosClass="XLPLiveDetailProvider" anClass="com.nd.sdp.android.xst.plive.provider.PublicListDetailProvider"/>
      </providers>
	</runtime>
  
    <android>
		<class>com.nd.sdp.android.xst.plive.PublicLiveComponent</class>
		<dependency>
        	def pliveVer = "0.0.10-rc10"
            compile("com.nd.sdp.android:x-live-public-android:${pliveVer}")
        </dependency>
    </android>
  <ios>
        <class>XLivePublicComponent</class>
        <dependency>
            <![CDATA[
			pod 'x_live_public_ios', '0.0.31'
        ]]>
        </dependency>
    </ios>
</component><component namespace="com.nd.sdp.component" name="xst-online-tutor" display="X学习-直播适配">
    <pages>
        <page type="cmp" name="test" display="测试" toplevel="1"/>
        <page type="cmp" name="online" display="直播转接" toplevel="2"/>
    </pages>

    <properties>
    </properties>

    <events>
    </events>

    <handlers>
    </handlers>

    <!-- 原组件路由到新组件页面 -->
	<routes>
    	<route source="cmp://com.nd.sdp.component.ele-online-tutor/test" destination="cmp://com.nd.sdp.component.xst-online-tutor/test"/>
        <route source="cmp://com.nd.sdp.component.ele-online-tutor/online" destination="cmp://com.nd.sdp.component.xst-online-tutor/online"/>
	</routes>
  
    <runtime>
        <properties>
            <property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
            <property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
        </properties>
        <providers>
            <provider name="com.nd.sdp.android.liveadapter.provider.GetLiveInfoProvider" filter="com.nd.sdp.android.liveadapter.provider.GetLiveInfoProvider" desc="获取直播信息" iosClass="EOTIGetLiveInfoDataProvider" anClass="com.nd.sdp.android.liveadapter.provider.GetLiveInfoProvider"/>
        </providers>
    </runtime>

    <android>
        <class>com.nd.sdp.android.liveadapter.LiveAdapterComponent</class>
        <dependency>
            <![CDATA[  
  			compile 'com.nd.sdp.android:xst-online-tutor:1.0.2'
			android {
				packagingOptions {
        			exclude 'META-INF/livecomponent_release.kotlin_module'
        		}
             }
		]]>
        </dependency>
    </android>

    <ios>
        <class>XSTOnlineTutorComponent</class>
        <dependency>
            <![CDATA[
            pod 'xst_online_tutor_ios', '1.0.5'
			
             ]]>
        </dependency>


    </ios>


</component><component namespace="com.nd.xst" name="offline-teaching" display="X-课后服务">
	<pages>
      <page type="cmp" name="after_class_statistics" display="课后服务统计页" toplevel="1" allow_guest="false"/>
      <page type="cmp" name="after_class_detail" display="课后服务选课" toplevel="1" allow_guest="false"/>
      <page type="cmp" name="after_class_default" display="课后服务详情页" toplevel="1" allow_guest="false"/>
	</pages>
	
	<properties>
	</properties>
	
	<events>
	</events>

	<handlers>
	</handlers>

	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
			<property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
		</properties>
	</runtime>
  
  	<android>
		<class>com.nd.xst.android.offline.teaching.OfflineTeachingComponent</class>
		<dependency>
        	implementation 'com.nd.xst:x-offline-teaching:1.0.6-rc01'
        </dependency>
    </android>
   	<ios>
        <class>XOfflineTeachingComponent</class>
        <dependency>
            <![CDATA[
				pod 'offline_teaching', '0.0.18'
               ]]>
        </dependency>
    </ios>
  
</component><component namespace="com.nd.sdp.component" name="e-training-activities" display="教研-教研活动">
	<pages>
		<page type="cmp" name="debug" display="调测页面" toplevel="1"/>
      	<page type="cmp" name="adapt_list" display="自适应列表" toplevel="2"/>
      	<page type="cmp" name="admin_list" display="管理者列表" toplevel="2"/>
      	<page type="cmp" name="actor_list" display="参与者列表" toplevel="2"/>
      	<page type="cmp" name="publish" display="发布活动" toplevel="2"/>
      	<page type="cmp" name="activity_detail" display="活动详情" toplevel="2"/>
	</pages>
	
	<properties>
	</properties>
	
	<events>
	</events>

	<handlers>
	</handlers>

	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
			<property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
		</properties>
	</runtime>
  
	<android>
		<class>com.nd.sdp.teaching.research.BizComponent</class>
		<dependency>
		<![CDATA[
			compile('com.nd.sdp.android:e-training-activities:0.0.1-beta.47') 
		]]>
		</dependency>
	</android>
  	<ios>
    	<class>ETATrainingActivitiesComponent</class>
    	<dependency>
    	<![CDATA[
			pod 'e_training_activities_ios', '0.2.15'
			pod 'e_training_activities_sdk', '0.0.9'
        ]]>
    	</dependency>
	</ios>
</component><component namespace="com.nd.xst" name="x-teaching-research" display="X-强师拼装(teaching-research)">
	<pages>
        <page type="cmp" name="debug" display="调试" toplevel="1" allow_guest="true"/>
	</pages>
	
	<properties>
	</properties>
	
	<events>
	</events>

	<handlers>
      <handler name="uc_on_login_success" desc="uc登录事件" receive_event="uc_on_login_success"/>
      <handler name="openLiveStartPlay" desc="公开直播开始播放" receive_event="com.nd.xst.x-live-public/live_start_play"/>
	</handlers>

	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
			<property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
		</properties>
	</runtime>
    <android>
		<class>com.nd.xst.teacher.research.TeacherResearchComponent</class>
		<dependency>
        	implementation ("com.nd.sdp.android:xst-teaching-research:0.1-rc01")
		</dependency>
        <groovy>
			<![CDATA[
		    	android {
    				compileOptions {
        				sourceCompatibility 1.8
        				targetCompatibility 1.8
    				}
				}
			]]>
		</groovy>
	</android>
    <ios>
		<class>XSTTeacherResearchComponent</class>
		<dependency>
			<![CDATA[
				pod 'xst_teaching_research_ios', '0.0.3'
			]]>
		</dependency>
    </ios>
</component><component namespace="com.nd.sdp.component" name="e-prepare-lessons" display="强师-备课资源">
	<pages>
      <page type="cmp" name="debug" display="调测页面" toplevel="1" allow_guest="true"/>
      <page type="cmp" name="course_detail" display="备授课资源详情" toplevel="1" allow_guest="true"/>
	</pages>
	
	<properties>
	</properties>
	
	<events>
	</events>

	<handlers>
	</handlers>

	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
			<property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
		</properties>
	</runtime>

  	<android>
		<class>com.nd.sdp.prepare.lesson.BizComponent</class>
		<dependency>
		<![CDATA[
			compile('com.nd.sdp.android:e-prepare-lessons:0.0.1-beta.55') 
		]]>
		</dependency>
	</android>
  
     <ios>
        <class>EPLPrepareLessonsComponent</class>
        <dependency>
            <![CDATA[
	            pod 'e_prepare_lessons_ios', '0.0.27'
    	     ]]>
        </dependency>
    </ios>
</component><component namespace="com.nd.sdp.component" name="dlna-support" display="【框架扩展】DLNA 支持" type="library">
	<pages>
	</pages>
	
	<properties>
	</properties>
	
	<events>
	</events>

	<handlers>
	</handlers>

	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
			<property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
		</properties>
	</runtime>
  <android>    
		<dependency>
					<![CDATA[
            compile 'com.nd.sdp.android.common:com-nd-apf-dlna-control:3.0.7-release.2'
            compile 'com.nd.sdp.android.common:com-nd-apf-dlna-extenral:3.0.7-release.1'
android {
   packagingOptions {
        exclude 'META-INF/beans.xml'
    }
compileOptions {
        sourceCompatibility '1.8'
        targetCompatibility '1.8'
    }
}

             ]]>
		</dependency>    
    <scenes>
    <scene name="android.permission.change_wifi_multicast_state" displayName="WIFI状态改变权限" describe="需要监听网络变化" isAsk="true" closeable="true" type="permission"/>
  
</scenes>
</android>
    <ios>
		<dependency>
			<![CDATA[
            pod 'APFDLNASupport', '1.0.12'
             ]]>
		</dependency>
        <scenes>
        	<scene name="NSLocalNetworkUsageDescription" describe="为您提供投屏搜索服务。"/>
        </scenes>
	</ios>
</component><component namespace="com.nd.sdp.component" name="nduc-selector" display="UC选择器组件">
	<pages>
      	<page type="cmp" name="choose_org_or_node_single_before_login" display="组织节点选择器-单选(登录前可用)" toplevel="2" allow_guest="true"/>
        <page type="cmp" name="choose_org_single_before_login" display="组织选择器-单选（登录前可用）" toplevel="2" allow_guest="true"/>
	</pages>
	
	<properties>
      	<property type="enum" name="data_range" displayName="数据范围" value="0">
            <options multi="false">
              <option value="0">机构</option>
              <option value="1">当前组织</option>
            </options>
        </property>
    	<property type="bool" name="show_my_org" displayName="显示当前组织" value="false"/>
      	<property type="bool" name="show_orgs_under_org" displayName="递归展示组织" value="false"/>
        <property type="bool" name="show_users_under_org" displayName="加载直接挂在组织下用户" value="true"/>
      	<property type="enum" name="show_org_mode" displayName="组织展示方式" value="1">
            <options multi="false">
              <option value="1">树形</option>
              <option value="2">平铺</option>
            </options>
        </property>
      	<property type="bool" name="show_area_filter" displayName="是否开启地址过滤" value="false"/>
	</properties>
	
	<events>
	</events>

	<handlers>
	</handlers>

	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
			<property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
		</properties>
	</runtime>
  
	<android>
        <class>com.nd.sdp.nduc.selector.SelectorComponent</class>
        <dependency>
            <![CDATA[
            def nducSelectorComponent = "0.0.1.3.selector.release"
            compile('com.nd.sdp.uc:nduc_selector_component:${nducSelectorComponent}')
            configurations.all {
                  resolutionStrategy {
                      force "com.nd.sdp.uc:nduc_selector_component:${nducSelectorComponent}"
                  }
            }
            ]]>
        </dependency>
    </android>
  
  	<ios>
        <class>UCSelectorComponent</class>

        <dependency>
            <![CDATA[
				pod 'UCSelectorComponent', '1.0.25'
             ]]>
        </dependency>

    </ios>
</component><component namespace="com.nd.xst" name="mob-stat-bugly" display="X-Bugly监控" type="function_library">
	<pages>
	</pages>
	
	<properties>
        <property type="string" name="android.bugly.key" displayName="安卓_APP-ID" value="12847d44c2"/>
        <property type="string" name="ios.bugly.key" displayName="iOS bugly id" value="1bb6018862"/>

	</properties>
	
	<events>
	</events>

	<handlers>
		<handler name="ios://forInitEvent" receive_event="for_init_bugly_event" desc="唤起组件初始化"/>
    </handlers>

    <android>
        <dependency>
        <![CDATA[
            compile 'com.nd.mob.stat:apm-bugly:1.0.1-dev08'
        ]]>
        </dependency>
    </android>

	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
			<property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
		</properties>
	</runtime>
      <ios>
        <class>mob_stat_buglyComponent</class>
        <dependency>
            <![CDATA[
                pod 'mob_stat_bugly', '1.0.5'
               ]]>
        </dependency>
    </ios>
</component><component namespace="com.nd.xst" name="mob-stat-sa" display="X-神策分析" type="function_library">
	<pages>
	</pages>
	
	<properties>
        <property type="string" name="android.sa.key" displayName="安卓-APPID" value="xstudy_android"/>
        <property type="string" name="ios.sa.key" displayName="iOS-APPID" value="xstudy_ios"/>
	</properties>
	
	<events>
	</events>

	<handlers>
    	<handler name="ios://onReveiveSensorEvent" receive_event="appfactory_data_analytics_sensor_event" desc="收到神策埋点事件"/>
	</handlers>

	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
			<property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
		</properties>
	</runtime>
  
    <android>
        <dependency>
        <![CDATA[
            compile 'com.nd.mob.stat:ext-sc:1.0.2-rc08'
        ]]>
        </dependency>
    </android>
  
    <ios>
        <class>mob_stat_saComponent</class>
        <dependency>
            <![CDATA[
                pod 'mob_stat_sa', '1.0.22'
               ]]>
        </dependency>
    </ios>
</component><component namespace="com.nd.sdp.component" name="e-nd-wps" display="强师-云文档">
	<pages>
    	<page type="cmp" name="debug" display="调测页面" toplevel="1" allow_guest="true"/>
      	<page type="cmp" name="open_mine_wps_page" display="我的云文档页面" toplevel="2" allow_guest="false"/>
	</pages>
  
  	<routes>
    	<route source="cmp://com.nd.sdp.component.x-user/ks_cloud_doc" destination="cmp://com.nd.sdp.component.e-nd-wps/open_mine_wps_page"/>
    </routes>
	
	<properties>
      <property type="string" name="wps_h5_url" displayName="我的云文档H5地址" value=""/>
	</properties>
	
	<events>
	</events>

	<handlers>
      <handler name="bindTokenSuccessEvent" desc="token绑定成功" receive_event="EVENT_ND_WPS_TOKEN_BINDING_SUCCESS"/>
	</handlers>

	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
			<property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
		</properties>
	</runtime>
  
  	<android>
		<class>com.nd.sdp.wps.BizComponent</class>
		<dependency>
		<![CDATA[
			compile('com.nd.sdp.android:e-nd-wps:0.0.1-beta.14') 
		]]>
		</dependency>
	</android>

    <ios>
    	<class>ENDWPSComponent</class>
    	<dependency>
    	<![CDATA[
			pod 'e_nd_wps_ios_sdk', '0.2.6'
        ]]>
    	</dependency>
	</ios>
</component><component namespace="com.nd.xst" name="x-uc-ext" display="X-UC扩展">
	<pages>
      <page type="cmp" name="idp" display="IDP代理授权页" toplevel="1" allow_guest="false"/>
	</pages>
	
	<properties>
	</properties>
	
	<events>
	</events>

	<handlers>
	</handlers>

	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
			<property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
		</properties>
	</runtime>
  
  	<android>
		<class>com.nd.xst.uc.ext.XUcExtComponent</class>
		<dependency>
        	implementation 'com.nd.xst:x-uc-ext:1.0.5-rc05'
        </dependency>
    </android>
   	<ios>
        <class>XUCExtendComponent</class>
        <dependency>
            <![CDATA[
				pod 'x_uc_ext', '0.0.22'
               ]]>
        </dependency>
    </ios>
  
</component><component namespace="com.nd.xst" name="app-faq" display="app-faq">
	<pages>
		<page type="cmp" name="main" display="FQA主页" toplevel="2" allow_guest="true"/>
		<page type="cmp" name="search" display="FQA搜索页" toplevel="2" allow_guest="true"/>
	</pages>
	
	<properties>
	</properties>
	
	<events>
	</events>

	<handlers>
	</handlers>

	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
			<property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
		</properties>
	</runtime>
  	 <android>
        <class>com.nd.sdp.android.xst_faq.XSTFAQComponent</class>
        <dependency>
            compile 'com.nd.sdp.android:xst-app-faq:0.1-rc05'
        </dependency>
    </android>
	<ios>
        <class>XCloudAppFaqComponent</class>
        <dependency>
            <![CDATA[
			pod 'xst_app_faq', '0.0.5'
        ]]>
        </dependency>
	</ios>
</component><component namespace="com.nd.xst" name="app-center" display="X学习-应用中心">
	<pages>
      <page type="cmp" name="main" display="应用中心主页" toplevel="1" allow_guest="false"/>
      <page type="cmp" name="delegate" display="应用跳转代理" toplevel="1" allow_guest="false"/>
	</pages>
	
	<properties>
	</properties>
	
	<events>
	</events>

	<handlers>
      <handler name="ios://punchRefresh" desc="打卡推送" receive_event="com.nd.sdp.component.elearning_habit_train/user_date_unfinished_remind"/>
	</handlers>

	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
			<property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
		</properties>
      	<providers>
        	<provider name="com.nd.sdp.component.xst-app-center.dataprovider" filter="com.nd.sdp.component.xac" desc="应用中心dataprovider" anClass="com.nd.xst.app.center.provider.XAppCenterDataProvider" iosClass="XACAppCenterApiProvider"/>  
        	<provider name="com.nd.sdp.component.xst-app-center.markprovider" filter="com.nd.sdp.component.xac.mark" desc="应用中心红点dataprovider" anClass="com.nd.xst.app.center.provider.XAppCenterMarkProvider" iosClass="XAppCenterMarkProvider"/>
      </providers>
	</runtime>
  	<android>
		<class>com.nd.xst.app.center.XAppCenterComponent</class>
		<dependency>
        	implementation 'com.nd.xst:xst-app-center:1.1.0-rc10'
        </dependency>
    </android>
   	<ios>
        <class>xst_app_centerComponent</class>
        <dependency>
            <![CDATA[
				pod 'xst_app_center', '0.0.18'
               ]]>
        </dependency>
    </ios>
</component><component namespace="com.nd.sdp.component" name="groupprohibitspeakplugin" display="群禁言插件" type="function_library">
	<pages>
	</pages>
	
	<properties>
	</properties>
	
	<events>
	</events>

	<handlers>
	</handlers>

	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
			<property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
		</properties>
	</runtime>
  
    <runtime>
        <providers>
            <provider name="com.nd.sdp.component.groupprohibitspeakplugin.ComponentLaunched" filter="com.nd.sdp.component.groupprohibitspeakplugin.ComponentLaunched" desc=""/>
        </providers>
    </runtime>
  
    <android>
      
        <class>com.nd.sdp.im.group.banned.component.GroupBanComponent</class>

        <dependency>

            <![CDATA[

                compile('com.nd.sdp.im:group_banned:22.13.5.15177.release')

            ]]>

        </dependency>

    </android>  
  
    <ios>
      <class>IMGroupProhibitSpeakComponent</class>
     	<dependency>
            <![CDATA[
 				pod 'IMGroupProhibitSpeakComponent', '1.0.76'
               ]]>
      </dependency>
    </ios>
</component><component namespace="com.nd.xst" name="x-behavior-rewards" display="行为积分">
	<pages>
      <page type="cmp" name="main" display="积分主页" toplevel="2" allow_guest="true"/>
	</pages>
	
	<properties>
	</properties>
	
	<events>
	</events>

	<handlers>
      <handler name="uc_on_login_success" desc="登录成功事件监听" receive_event="uc_on_login_success"/>
    </handlers>

	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
			<property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
		</properties>
        <providers>
        	<provider name="com.nd.xst.x-behavior-rewards.scoreProvider" filter="com.nd.xst.x-behavior-rewards.scoreProvider.filter" desc="获取总积分" iosClass="XstBehaviorRewardsProvider" anClass="com.nd.behavior.rewards.provider.RewardAccountProvider"/>
		</providers>
	</runtime>
  <android>
		<class>com.nd.behavior.rewards.BehaviorRewardComponent</class>
		<dependency>
        	compile 'com.nd.sdp.android:xst-behavior-rewards-android:1.1.0-rc04'
        </dependency>
    </android>
	<ios>
        <class>XstBehaviorRewardsComponent</class>
        <dependency>
            <![CDATA[
			pod 'xst_behavior_rewards_ios', '0.0.18'
        ]]>
        </dependency>
        <ruby>
            <entry>XBRBuildExecutor</entry>
            <dsl>
                <pre_dependency_install>
                <![CDATA[
                require 'pathname'
                require 'json'
                require 'uri'
                require 'net/http'
                
                current_dir = Pathname(Dir.pwd)
                # 定义组件id
                common_id = "com.nd.xst.x-behavior-rewards"
            
                # 获取sdp-app-id
                app_json_path = current_dir.join("app/assets/app_factory/app/app.json")
                app_json_content = File.read(app_json_path)
                app_items = JSON.parse(app_json_content)
                app_sdp_id_item = app_items['pkgid']
                puts "### app_sdp_id_item #{app_sdp_id_item}"
            
                # 获取远程文件地址
                incentive_service_host = ''
                service_json = current_dir.join("app/assets/app_factory/app/service.json")
                service_json_content = File.read(service_json)
                service_items = JSON.parse(service_json_content)
                service_items.each do |item|
                    component_id = item['component']['namespace'] + '.' + item['component']['name']
                    if component_id == common_id 
                    incentive_service_host = item['properties']['record_config_proxy']
                    end
                end
                puts "### incentive_service_host #{incentive_service_host}"
            
                # 拉取远程数据，并写入皮肤包资源文件
                if not incentive_service_host.to_s.empty? 
                    incentive_service_host = incentive_service_host+"v1/record_configs?sdp-app-id="+app_sdp_id_item
                    puts "### 数据准备下载到皮肤包： #{incentive_service_host} "
                    uri = URI(incentive_service_host)
                    rule_config_response = Net::HTTP.get_response(uri)
                    if rule_config_response.code != "200"
                    puts "### error"
                    else
                    common_bundle = common_id + "_skin.bundle"
                    file_name = "**/"+common_bundle+"/record_configs.json"
                    puts "### write to file #{file_name}"
                    files =  Dir.glob(current_dir.join(file_name))
                    files.each do |json_path|
                        puts "### #{json_path} "
                        file = File.open(json_path, "w") { |f| f << rule_config_response.body }
                    end
                    end
                else
                    puts "### incentive_service_proxy 字段为空，不做处理 "
                end
                ]]>
                </pre_dependency_install>
            </dsl>            
        </ruby>     
	</ios>
</component><component namespace="com.nd.xst" name="mob-stat-ty" display="X-听云" type="function_library">
	<pages>
	</pages>
	
	<properties>
      <property type="string" name="ty.host" displayName="听云-服务器地址(无需协议头)" value="wkrd.tingyun.com"/>
      <property type="string" name="android.ty.key" displayName="听云-Android-KEY" value="ad279e6d497f43bb8816f29be830184d"/>
      <property type="string" name="ios.ty.key" displayName="听云-iOS-KEY"/>
	</properties>
	
	<events>
	</events>
  
  	<handlers>
      <handler name="ios://receiveUserAcceptAgreement" receive_event="KEY_USER_ACCEPT_AGREEMENT_EVENT_ASYNC" desc="页面开始"/>
	</handlers>

	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
			<property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
		</properties>

        <gradles name="tingyun-plugin">
            <android-project-gradle-classpaths displayName="plugin newlens">
                <classpath value="com.networkbench:tingyun-ea-agent-android-gradle-plugin:2.17.0"/>
            </android-project-gradle-classpaths>
            <android-app-gradle-applys displayName="plugin newlens">
                <apply value="newlens"/>
            </android-app-gradle-applys>
        </gradles>
	</runtime>
  	<android>
		<dependency>
            implementation "com.nd.mob.stat:ext-tingyun:1.0.2-rc06"
        </dependency>
    </android>
  	<ios>
        <class>mob_stat_tyComponent</class>
        <dependency>
            <![CDATA[
               pod 'mob_stat_ty', '0.0.7'
               ]]>
        </dependency>
    </ios>
</component><component namespace="com.nd.xst" name="x-cicada-player" display="阿里视频SDK(x-cicada-player)" type="function_library">
	<pages>
      <page type="cmp" name="player" display="播放页" toplevel="1" allow_guest="true"/>
	</pages>
	
	<properties>
	</properties>
	
	<events>
	</events>

	<handlers>
	</handlers>

	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
			<property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
		</properties>
	</runtime>
  
    <ios>
        <class>XSTCicadaplayerComponent</class>
        <dependency>
            <![CDATA[
                pod 'xst_cicada_player_sdk', '0.0.1'
               ]]>
        </dependency>
    </ios>
</component><component namespace="com.nd.sdp" name="thirdlogincom" display="第三方登录组件">
  <runtime>
    <properties>
      <property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="false"/>
      <property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="false"/>
    </properties>
  </runtime>
    <events>
    </events>
  
  	<properties>
      	<property type="bool" name="open_third_login_weibo" desc_true="开启" desc_false="关闭" displayName="是否开启微博登录(如开启需添加“第三方登录组件”)" value="">
         <dependency>
               <component namespace="com.nd.sdp.component" name="thirdloginweibo"/>
         </dependency>
        </property>
        <property type="bool" name="open_third_login_qq" desc_true="开启" desc_false="关闭" displayName="是否开启QQ登录(如开启需添加“第三方登录组件”)" value="">
         <dependency>
               <component namespace="com.nd.sdp.component" name="thirdloginqq"/>
         </dependency>
        </property>
        <property type="bool" name="open_third_login_wechat" desc_true="开启" desc_false="关闭" displayName="是否开启微信登录(如开启需添加“第三方登录组件”)" value="">
         <dependency>
               <component namespace="com.nd.sdp.component" name="thirdloginwechat"/>
         </dependency>
        </property>
      	<property type="bool" name="open_third_login_facebook" desc_true="开启" desc_false="关闭" displayName="是否开启脸书登录(如开启需添加“第三方登录组件”)" value="">
         <dependency>
               <component namespace="com.nd.sdp.component" name="thirdloginfacebook"/>
         </dependency>
        </property>
        <property type="bool" name="open_third_login_twitter" desc_true="开启" desc_false="关闭" displayName="是否开启推特登录(如开启需添加“第三方登录组件”)" value="">
         <dependency>
               <component namespace="com.nd.sdp.component" name="thirdlogintwitter"/>
         </dependency>
        </property>
        <property type="bool" name="open_third_login_nd99" desc_true="开启" desc_false="关闭" displayName="是否开启99登录(如开启需添加“第三方登录组件”)" value="">
         <dependency>
               <component namespace="com.nd.sdp.component" name="thirdloginnd99"/>
         </dependency>
        </property>
        <property type="bool" name="open_third_login_google" desc_true="开启" desc_false="关闭" displayName="是否开启谷歌登录(如开启需添加“第三方登录组件”)" value="">
         <dependency>
               <component namespace="com.nd.sdp.component" name="thirdlogingoogle"/>
         </dependency>
        </property>
        <property type="bool" name="open_third_login_fringe" desc_true="开启" desc_false="关闭" displayName="是否开启上海学籍号登录" value="">
             <dependency>
                 <component namespace="com.nd.sdp.component" name="fringethirdlogincomponent"/>
             </dependency>
        </property>
        <property type="bool" name="open_third_login_idaas" desc_true="开启" desc_false="关闭" displayName="是否开启教育IDaaS登录" value="">
             <dependency>
                 <component namespace="com.nd.sdp.component" name="e101-idaaslogin"/>
             </dependency>
        </property>
      	<property type="bool" name="open_third_login_unt" desc_true="开启" desc_false="关闭" displayName="是否开启北德登录" value="">
             <dependency>
                 <component namespace="com.nd.sdp.component" name="thirdloginunt"/>
             </dependency>
        </property>
        <property type="bool" name="open_third_login_line" desc_true="开启" desc_false="关闭" displayName="是否开启Line登录" value="">
             <dependency>
                 <component namespace="com.nd.sdp.component" name="thirdlogincomline"/>
             </dependency>
        </property>
        <property type="bool" name="open_third_login_dropbox" desc_true="开启" desc_false="关闭" displayName="是否开启Dropbox登录" value="">
             <dependency>
                 <component namespace="com.nd.sdp.component" name="thirdlogincomdropbox"/>
             </dependency>
        </property>
        <property type="bool" name="open_third_login_pearson" desc_true="开启" desc_false="关闭" displayName="是否开启培生登录" value="">
             <dependency>
                 <component namespace="com.nd.sdp.component" name="thirdloginpearson"/>
             </dependency>
        </property>
      	<property type="bool" name="open_third_login_edmodo" desc_true="开启" desc_false="关闭" displayName="是否开启Edmodo登录" value="">
             <dependency>
                 <component namespace="com.nd.sdp.component" name="thirdloginedmodo"/>
             </dependency>
        </property>
        <property type="bool" name="open_third_login_apple" desc_true="开启" desc_false="关闭" displayName="是否开启苹果登录" value="">
           	<tip>如果开启了其他第三方登录，则必须开启苹果登录</tip>  
          	<dependency>
                 <component namespace="com.nd.sdp.component" name="applethirdlogin"/>
             </dependency>
        </property>
      	
      	<property type="bool" name="open_third_login_shanyan" desc_true="开启" desc_false="关闭" displayName="是否开启闪验一键登录" value="">
          	<dependency>
                 <component namespace="com.nd.sdp.component" name="chuanglan"/>
             </dependency>
        </property>

        <property type="string" name="qq_app_key_android" displayName="QQ_APP_ID(android) (已废弃，移至thirdloginqq组件中)" value="" deprecated=""/>
      	<property type="string" name="uc_component_qq_app_scheme" displayName="QQ登录scheme（Android）(格式：tencent+你的appId，例如：tencent123456) (已废弃，移至thirdloginqq组件中)" android_res="1" deprecated=""/>  
      	<property type="string" name="weibo_app_key_android" displayName="微博登录 APP KEY（android）(已废弃，移至thirdloginweibo组件中)" value="" deprecated=""/>
        <property type="string" name="weibo_redirect_url_android" displayName="微博登录Redirect URL（android）(已废弃，移至thirdloginweibo组件中)" value="" deprecated=""/>
        <property type="string" name="wechat_app_key_android" displayName="微信Wechat_APP_KEY（android）(已废弃，移至thirdloginwechat组件中)" value="" deprecated=""/>
      	<property type="string" name="wechat_app_secret_android" displayName="微信Wechat_APP_SECRET（android）(已废弃，移至thirdloginwechat组件中)" value="" deprecated=""/>
      	<property type="string" name="wechat_wxentryactivity_class_path" displayName="微信WXEntryActivity全路径（android）(格式：你的包名+.wxapi.WXEntryActivity，例如：com.nd.app.factory.demo.wxapi.WXEntryActivity) (已废弃，移至thirdloginwechat组件中)" value="" deprecated=""/>
        <property type="string" name="facebook_app_key_android" displayName="Facebook登录appId（android）(已废弃，移至thirdloginfacebook组件中)" value="" deprecated=""/>
        <property type="string" name="twitter_app_key_android" displayName="Twitter登录appKey（android）(已废弃，移至thirdlogintwitter组件中)" value="" deprecated=""/>
        <property type="string" name="twitter_app_secret_android" displayName="Twitter登录appSecret（android）(已废弃，移至thirdlogintwitter组件中)" value="" deprecated=""/>
      
		<property type="string" name="qq_app_key" displayName="QQ登录APP ID(iOS) (已废弃，移至thirdloginqq组件中)" value="" deprecated=""/>
		<property type="string" name="qq_login_url_schema" displayName="QQ登录scheme（iOS）(已废弃，移至thirdloginqq组件中)" iOS_URL_Types="1" deprecated=""/>  
		<property type="string" name="qq_redirect_url" displayName="QQ登录Redirect URL（iOS）(已废弃，移至thirdloginqq组件中)" value="" deprecated=""/>
        <property type="string" name="weibo_app_key" displayName="Weibo登录 APP KEY（iOS）(已废弃，移至thirdloginweibo组件中)" value="" deprecated=""/>
      	<property type="string" name="weibo_login_url_schema" displayName="微博登录scheme（iOS）(已废弃，移至thirdloginweibo组件中)" iOS_URL_Types="1" deprecated=""/> 
        <property type="string" name="weibo_redirect_url" displayName="Weibo登录Redirect URL（iOS）(已废弃，移至thirdloginweibo组件中)" value="" deprecated=""/>
        <property type="string" name="wechat_app_key" displayName="微信登录APP KEY（iOS）(已废弃，移至thirdloginwechat组件中)" iOS_URL_Types="1" deprecated=""/>
        <property type="string" name="wechat_app_secret" displayName="微信 App Secret（iOS）(已废弃，移至thirdloginwechat组件中)" value="" deprecated=""/>
        <property type="string" name="facebook_app_key" displayName="Facebook登录appId（iOS）(已废弃，移至thirdloginfacebook组件中)" value="" deprecated=""/>
        <property type="string" name="facebook_login_url_schema" displayName="Facebook登录scheme（iOS）(已废弃，移至thirdloginfacebook组件中)" iOS_URL_Types="1" deprecated=""/> 
        <property type="string" name="twitter_app_key" displayName="Twitter登录appKey（iOS）(已废弃，移至thirdlogintwitter组件中)" value="" deprecated=""/>
        <property type="string" name="twitter_app_secret" displayName="Twitter登录appSecret（iOS）(已废弃，移至thirdlogintwitter组件中)" value="" deprecated=""/>
        
        <property type="string" name="nd99_app_key" displayName="99登录appKey(appID) (已废弃，移至thirdloginnd99组件中)" value="" deprecated=""/>
        <property type="string" name="nd99_app_secret" displayName="99登录appSecret (已废弃，移至thirdloginnd99组件中)" value="" deprecated=""/>
        <property type="string" name="nd99_redirect_url" displayName="99登录Redirect URL (已废弃，移至thirdloginnd99组件中)" value="" deprecated=""/>
      
        <property type="string" name="google_client_key" displayName="Google登录Client_ID (iOS) (已废弃，移至thirdlogingoogle组件中)" value="" deprecated=""/>
        <property type="string" name="google_login_url_schema" displayName="Google登录scheme(iOS) (已废弃，移至thirdlogingoogle组件中)" iOS_URL_Types="1" deprecated=""/>
      
      <property type="string" name="google_app_key_android" displayName="Google Client Id(android) (已废弃，移至thirdlogingoogle组件中)" value="" deprecated=""/>
    </properties>


    <android>
        <class>com.nd.sdp.thirdlogin.ThirdLoginComponent</class>
        <dependency>
            <![CDATA[
            	
                compile('com.nd.sdp:thirdlogincom:1.4.6.thirdlogincom.release@aar') {

            	transitive = true
            	changing = true 

        		}

         		configurations {

              	 all*.exclude group:'android.support', module: 'android-support-v4'

         		}
            ]]>
        </dependency>
    </android>
 	<ios>
        <class>OpenIDLoginComponent</class>
        <dependency>
            <![CDATA[
   			pod 'OpenIDLoginComponent', '0.0.27'
             ]]>
        </dependency>
    </ios>
</component><component namespace="com.nd.sdp.component" name="thirdloginfacebook" display="脸书登录" type="function_library">
  <runtime>
    <properties>
      <property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="false"/>
      <property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="false"/>
    </properties>
  </runtime>
  <build>
    <android>   
        <safe_whitelist>
            <activities>
                <activity name="com.facebook.CustomTabActivity" describe="Facebook的第三方登录需要" type="activity" owner="张波"/>
            </activities>
            <receivers>
                <receiver name="com.facebook.CampaignTrackingReceiver" describe="第三方Facebook推送，无法修改" type="receiver" owner="张波"/>
           </receivers>
           <providers>
				<provider name="com.facebook.FacebookContentProvider" describe="第三方Facebook的内容提供者，无法修改" type="provider" owner="张波"/>
			</providers>
        </safe_whitelist>
    </android>
</build>
  
  
	<pages>
	</pages>
	
	<properties>
        <property type="string" name="facebook_app_key_android" displayName="脸书登录APPID（Android）" value="" senior="true">
           <tip>获取内容请点击：https://developers.facebook.com/</tip>
           <validator type="required" msg="请填写Android版脸书的APPID"/>
        </property>
        <property type="string" name="facebook_app_key" displayName="脸书登录APPID（iOS）" value="" senior="true">
           <tip>获取内容请点击：https://developers.facebook.com/</tip>
           <validator type="required" msg="请填写iOS版脸书的APPID"/>
        </property>
        <property type="string" name="thirdloginfacebook_login_url_schema" displayName="脸书登录scheme（iOS）" iOS_URL_Types="1" senior="true">
           <tip>填写规则为脸书登录scheme=fb+AppID（iOS），例如fb123457</tip>
           <validator type="required" msg="请填写iOS版脸书的scheme"/>
        </property> 
	</properties>
	
	<events>
	</events>

	<handlers>
	</handlers>
  
  <android>
        <class>com.nd.sdp.thirdlogin.ThirdLoginComponentFacebook</class>
        <dependency>
            <![CDATA[            	
                compile('com.nd.sdp:thirdlogincomfacebook:1.0.0.7.release') {
            	transitive = true
            	changing = true 
        		}
                configurations.all {
                    resolutionStrategy {
                        force "com.google.zxing:core:3.2.1"
                    }
                }
            ]]>
        </dependency>
    </android>

  <ios>
        <class>UCFacebookComponent</class>
        <dependency>
            <![CDATA[
   			pod 'UCFacebookComponent', '0.0.12'
             ]]>
        </dependency>
		<meta-datas>
                <meta-data xpath="//plist/dict" key="LSApplicationQueriesSchemes" type="array" file="/ComponentAppBase/Info.plist">
                <![CDATA[
         <string>fbauth2</string>
                ]]>
                </meta-data>
                <meta-data xpath="//plist/dict" key="FacebookAppId" type="string" file="/ComponentAppBase/Info.plist">
                <![CDATA[${facebook_appid}]]>
                </meta-data>
                <meta-data xpath="//plist/dict" key="FacebookDisplayName" type="string" file="/ComponentAppBase/Info.plist">
                <![CDATA[${facebook_app_name_ios}]]>
                </meta-data>
                <meta-data xpath="//plist/dict" key="FacebookAutoLogAppEventsEnabled" type="string" file="/ComponentAppBase/Info.plist">
                <![CDATA[false]]>
                </meta-data>
         </meta-datas>
    </ios>

</component><component namespace="com.nd.sdp.component" name="payment-appstore" display="支付组件（上架AppleStore）">
	<pages>
      <page type="cmp" name="balance" display="我的余额" toplevel="2"/>
	</pages>
	
	<properties>
	</properties>
	
	<events>
	</events>

	<handlers>
      <handler name="ios://receive_event_pay_checkout_counter" desc="钱包收银台支付事件" receive_event="payment_event_pay_checkout_counter"/>
      <handler name="ios://payment_event_consume_pay_order" desc="钱包收银台支付事件" receive_event="payment_event_consume_pay_order"/>
	</handlers>

	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
			<property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
		</properties>
	</runtime>
  	<ios>
		<class>NDPaymentAPComponent</class>
		<dependency>
			<![CDATA[
				pod 'NDPayment4iOSAppStore', '1.0.1'
			]]>
		</dependency>
	</ios>
</component><component namespace="com.nd.sdp.component" name="payment" display="支付">
	<pages>
		<page type="cmp" name="login" display="登录" toplevel="2" android_class="com.nd.sdp.uc.ui.UcLoginActivity"/>
        <page type="cmp" name="balance" display="我的余额" toplevel="2"/>
	</pages>
	
	<properties>
      <property type="bool" name="prevent_sniffer_packet" displayName="是否开启防抓包(安卓专用)" value="true"/>
      <property type="string" name="payment_url_schema_alipay" displayName="adyen/支付宝回调schema(iOS专用)" iOS_URL_Types="1" i18n="false" senior="true" template="false">
        <tip>此处为adyen和支付宝回调schema，必须填写iOS的包名（Bundle Identifier），可在应用配置=》基础信息处查看。Adyen官方问题，如果包名带有下划线“_”会导致支付失败</tip>  
        <!-- <validator type="required" msg="请填写支付宝回调schema"/> -->
      </property>
      <property type="string" name="payment_universal_link_wechatpay" displayName="微信通用链接(iOS专用)">
        <tip>微信通用链接</tip>
      </property>
      <property type="string" name="payment_url_schema_wechatpay" displayName="微信支付回调schema" iOS_URL_Types="1" i18n="false" senior="true" template="false">
        <tip>请前往微信官方申请：https://open.weixin.qq.com/</tip>
        <!-- <validator type="required" msg="请填写微信支付回调schema"/> -->
      </property>
      <property type="string" name="payment_h5_pay_theme" displayName="h5支付主题">
        <tip>h5支付主题</tip>
      </property>
      <property type="bool" name="payment_support_alipay" displayName="支持支付宝支付" value="true">
        <tip>默认开启支付宝支付</tip>
		<dependency>
			<component namespace="com.nd.pbl" name="alipay" display="支付宝支付"/>
		</dependency>
	  </property>
      <property type="bool" name="payment_support_weixinpay" displayName="支持微信支付" value="true">
        <tip>默认开启微信支付，当前渠道包含UIWebView，存在上架风险</tip>
		<dependency>
			<component namespace="com.nd.pbl" name="weixinpay" display="微信支付"/>
		</dependency>
	  </property>
      <property type="bool" name="payment_support_pointpay" displayName="支持养成币支付" value="true">
        <tip>默认开启养成币支付（积分支付，守护币支付）</tip>
		<dependency>
			<component namespace="com.nd.sdp.component" name="pointpay" display="养成币支付"/>
		</dependency>
	  </property>
      <property type="bool" name="payment_support_easylink_upop" displayName="支持跨境银联支付" value="false">
        <tip>跨境银联支付，默认关闭</tip>
	  </property>
      <property type="bool" name="payment_support_friendpay" displayName="(iOS专用)支持好友代付支付" value="true">
        <tip>(iOS专用)默认开启好友代付支付</tip>
	  </property>
      <property type="bool" name="payment_support_alipay_wap" displayName="(iOS专用)支持支付宝网页支付" value="true">
        <tip>(iOS专用)默认开启支付宝网页支付</tip>
	  </property>
      <property type="bool" name="payment_support_iappay" displayName="(iOS专用)支持Apple内购" value="true">
        <tip>(iOS专用)默认开启Apple内购支付</tip>
        <dependency>
			<component namespace="com.nd.sdp.component" name="applepay-component" display="苹果内购支付"/>
		</dependency>
	  </property>
      <property type="bool" name="payment_support_paypalpay" displayName="支持PayPal支付" value="false">
        <tip>默认关闭PayPal支付，当前渠道包含UIWebView，存在上架风险</tip>
		<dependency>
			<component namespace="com.nd.pbl" name="paypalpay" display="PayPal支付"/>
		</dependency>
	  </property>
      <property type="bool" name="payment_support_alipay_wise" displayName="(iOS专用)支持支付宝【非大陆】支付" value="false">
        <tip>(iOS专用)默认开启支付宝【非大陆】支付</tip>
	  </property>
      <property type="bool" name="payment_support_weixinpay_wise" displayName="(iOS专用)支持微信【非大陆】支付" value="false">
        <tip>(iOS专用)默认开启微信【非大陆】支付，当前渠道包含UIWebView，存在上架风���</tip>
	  </property>
      <property type="bool" name="payment_support_alipay_wap_wise" displayName="(iOS专用)支持支付宝网页[非大陆]支付" value="false">
        <tip>(iOS专用)默认开启支付宝网页[非大陆]支付</tip>
	  </property>
      <property type="bool" name="payment_support_adyenpay" displayName="(iOS专用)支持信用卡支付（Web支付）" value="false">
        <tip>(iOS专用)默认关闭信用卡支付（Web支付）</tip>
		<dependency>
			<component namespace="com.nd.pbl" name="adyenwap" display="adyen支付"/>
		</dependency>
	  </property>
      <property type="bool" name="payment_support_adyenpay_sdk" displayName="支持信用卡原生支付" value="false">
        <tip>默认关闭信用卡原生支付，当前渠道包含UIWebView，存在上架风险。ios端使用该渠道必须设置，应用配置=》基础属性=》iOS=》最低版本=》iOS9.0，手机系统版本为ios9.0以下的机型会奔溃。</tip>
		<dependency>
			<component namespace="com.nd.pbl" name="adyenpay" display="adyen原生支付"/>
		</dependency>
	  </property>
      <property type="bool" name="payment_support_alipay_wapv2" displayName="(iOS专用)支持支付宝网页支付V2" value="true">
        <tip>(iOS专用)默认开启支付宝网页支付V2</tip>
	  </property>
      <property type="bool" name="payment_protocol_open" displayName="是否开启支付协议" value="false">
        <tip>如需开启支付协议，请先在钱包运营管理后台配置支付协议内容</tip>
	  </property>
	</properties>
	
	<events>
	</events>

	<handlers>
       <handler name="ios://payment_event_pay_certificate" desc="获取支付凭证" receive_event="payment_event_pay_certificate"/>
      <handler name="ios://payment_event_pay_inapp_purchase" desc="内购" receive_event="payment_event_pay_inapp_purchase"/>
      <handler name="ios://wallet_event_change_channel" desc="监听钱包组件更变支付渠道" receive_event="wallet_event_change_channel"/>
      <handler name="ios://payment_event_reg_pay_channel" desc="其他组件注册支付方式" receive_event="payment_event_reg_pay_channel"/>
      <handler name="ios://payment_event_consume_pay_certificate" desc="凭证支付（商城组件，表情商城组件）" receive_event="payment_event_consume_pay_certificate"/>
      <handler name="ios://payment_event_consume_pay_order" desc="凭证支付（表情商城组件，VIP组件）" receive_event="payment_event_consume_pay_order"/>
      <handler name="ios://payment_event_customize_popup_toast" desc="VIP，爱心基金定制弹窗定义事件" receive_event="payment_event_customize_popup_toast"/>
      <handler name="ios://payment_event_pay_result_unknown" desc="未知支付结果事件" receive_event="payment_event_pay_result_unknown"/>
      <handler name="ios://receive_event_qrcode_processcontent" desc="二维码事件" receive_event="qrcode_processcontent"/>
      <handler name="ios://receive_event_ndpayment_pay_with_channel_view" desc="通过弹出支付渠道支付" receive_event="ndpayment_pay_with_channel_view"/>
      <handler name="ios://receive_event_pay_result" desc="支付结果事件" receive_event="payment_event_pay_result"/>
      <handler name="ios://receive_event_get_payment_channel_view" desc="获取支付方式列表" receive_event="ndpayment_get_channel_view"/>
      <handler name="ios://receive_event_get_paid_products" desc="获取已购商品列表（iOS内购非消耗型商品）" receive_event="payment_event_get_paid_products"/>
      <handler name="ios://receive_event_get_payment_protocol_view" desc="获取支付相关协议视图" receive_event="ndpayment_get_protocol_view"/>
      <handler name="ios://receive_event_show_protocol_confirm_alert" desc="弹出支付协议确认弹窗" receive_event="ndpayment_show_protocol_confirm_alert"/>
  </handlers>
  
  	<runtime>
      <properties>
        <property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="false"/>
        <property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="false"/>
      </properties>
      <providers>
        <provider name="com.nd.sdp.component.payment:support_payment_channel" filter="" desc="获取支付渠道"/>
        <provider name="com.nd.sdp.component.payment:exchange" filter="" desc="获取汇率"/>
        <provider name="com.nd.sdp.component.payment:currency" filter="" desc="获取币种"/> 
        <provider name="com.nd.sdp.component.payment:CurrencyBalance" filter="" desc="获取币种余额"/> 
        <provider name="com.nd.sdp.component.payment:protocol" filter="" desc="获取支付相关协议"/>
      </providers> 
    </runtime>

	<android>
        <scenes>
            <scene name="android.permission.ACCESS_WIFI_STATE" displayName="获取WiFi状态" describe="查询用户设备的网络状态" isAsk="true" closeable="true" type="permission"/>
            <scene name="android.permission.ACCESS_NETWORK_STATE" displayName="获取网络状态" describe="查询用户设备的网络状态" isAsk="true" closeable="true" type="permission"/>
            <scene name="android.permission.INTERNET" displayName="访问网络" describe="提供接口访问网络的需求" isAsk="true" closeable="true" type="permission"/>
            <scene name="android.permission.READ_EXTERNAL_STORAGE" displayName="读取外部存储" describe="读取数据和图片缓存" isAsk="true" closeable="true" type="permission"/>
            <scene name="android.permission.WRITE_EXTERNAL_STORAGE" displayName="写入外部存储" describe="写入数据和图片缓存" isAsk="true" closeable="true" type="permission"/>
            <scene name="android.permission.QUERY_ALL_PACKAGES" displayName="应用包可见性" describe="唤起第三方支付应用" isAsk="true" closeable="true" type="permission"/>  
      </scenes>
      
		<class>com.nd.sdp.android.ndpayment.NdPaymentComponent</class>
		<dependency>
			<![CDATA[
			    compile('com.nd.sdp.android:ndpayment:0.10.73.af27dc1') {
			        transitive = true
			        changing = true
			    }
			    compile('com.nd.sdp.android:pay-channel-view:1.2.15.27e96cf@aar') {
			        transitive = true
			        changing = true
			    }
             ]]>
		</dependency> 
	</android>
	<ios>
		<class>NDPaymentComponent</class>
		<dependency>
			<![CDATA[
            	pod 'NdZFuUtils' , '0.0.16'
				pod 'NdPaySDK', '3.0.17'
				pod 'NDPayment4iOS', '0.8.90'
			]]>
		</dependency>
		<meta-datas>
                <meta-data xpath="//plist/dict" key="LSApplicationQueriesSchemes" type="array" file="/ComponentAppBase/Info.plist">
                <![CDATA[
        			<string>weixin</string>
					<string>wechat</string>
					<string>weixinULAPI</string>
                ]]>
                </meta-data>
         </meta-datas>
	</ios>
   <sdk>
    <js-sdk>
      <name>jssdk-payment</name>
      <version>1.0</version>
      <ios>
      </ios>
      <android>
        <js-class>com.nd.sdp.android.ndpayment.provider.PaymentJsInjectorProvider</js-class>
      </android>
    </js-sdk>
  </sdk>
</component><component namespace="com.nd.sdp.component" name="wallet" display="钱包">
	<pages>
        <page type="cmp" name="wallet_home_page" display="钱包首页" toplevel="1"/>
      	<page type="cmp" name="pay" display="代币支付" toplevel="1"/>
        <page type="cmp" name="detailOrder" dispaly="订单详情页" toplevel="1"/>
      	<page type="cmp" name="recharge" dispaly="充值页面" toplevel="2"/>
	</pages>
	
	<properties>
      <!--<property type="string" name="contact_service_tel" displayName="联系客服电话(必填)" i18n="true"/>-->
      <property type="string" name="wallet_emoney_name" displayName="虚拟货币名称" i18n="true" senior="true">
        <tip>请填写一个虚拟货币的名称，例如QQ钱包的Q币</tip> 
      </property>
      <property type="bool" name="prevent_sniffer_packet" displayName="是否开启防抓包" value="true">
        <tip>是否开启防抓包, 建议只在调试时关闭</tip>
      </property>
	</properties>
	
	<events>
        
     </events>

	<handlers>
      <handler name="ios://payment_event_pay_result" desc="支付结果" receive_event="payment_event_pay_result"/>
      <handler name="ios://wallet_event_query_balance" desc="查询余额" receive_event="wallet_event_query_balance"/>
      <handler name="ios://receiveGetBalanceView" desc="查询余额" receive_event="wallet_event_balance_view"/>
	</handlers>
  
    <runtime>
      <properties>
        <property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="false"/>
        <property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
      </properties>
      
      <providers>
        <provider name="com.nd.sdp.component.wallet:coin" filter="" desc="获取钱币信息"/>
      </providers> 
    </runtime>

	<android>
         <scenes>
            <scene name="android.permission.ACCESS_NETWORK_STATE" displayName="获取网络状态" describe="查询用户设备的网络状态" isAsk="true" closeable="true" type="permission"/>
        </scenes>
      
		<class>com.nd.sdp.star.wallet.base.WalletComponent</class>
		<dependency>
			<![CDATA[
			    compile('com.nd.sdp.android:wallet:1.2.80.326c6d6d') {
			        transitive = true
			        changing = true
			    }

                compile ('com.nostra13.universalimageloader:universal-image-loader:5.0.29') {
                    transitive = true
                    changing = true
                }

                compile ('com.nd.android.monet:load-wrapper:0.1.3-rc6') {
                    transitive = true
                    changing = true
                }

                compile('com.nd.android.monet:ext-glide:0.1.3-rc6'){
                     transitive = true
                     changing = true
                }

                compile('com.nd.sdp.android:star-module:0.9.6.e192b84@aar'){
                     transitive = true
                     changing = true
                }
             ]]>
		</dependency>
	</android>

	<ios>
		<class>WalletComponent</class>
		<dependency>
			<![CDATA[
            pod 'wallet4ios', '0.8.103'
           
             ]]>
		</dependency>

	</ios>
     <sdk>
        <js-sdk>
            <name>jssdk-wallet</name>
            <version>1.0</version>
            <ios>
            </ios>
            <android>
                <js-class>com.nd.sdp.star.wallet.provider.WalletJsInjectorProvider</js-class>
            </android>
        </js-sdk>
    </sdk>
</component><component namespace="com.nd.sdp.component" name="iappay" display="苹果内购" type="function_library">
	<pages>
	</pages>
	
	<properties>
	</properties>
	
	<events>
	</events>

	<handlers>
      	<handler name="ios://receive_event_tab_badget_start" desc="角标变化事件" receive_event="handler_badget_start_event"/>
    </handlers>


	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
			<property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
		</properties>
	</runtime>
    <ios>
        <class>MUPApplePayKit</class>
        <dependency>
            <![CDATA[
                  pod 'MUPApplePayKit', '0.0.3'
             ]]>
        </dependency>
    </ios>
</component><component namespace="com.nd.sdp.component" name="countryselect" display="地区选择" type="library">
	
	<properties>
	</properties>
	
	<events>
	</events>

	<handlers>
	</handlers>

	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
			<property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
		</properties>
	</runtime>
  
    <android>
		<class>com.nd.sdp.android.countryselect.CountrySelectComponent</class>
		<dependency>
			<![CDATA[
			    compile('com.nd.sdp.android:mui-countryselect:0.0.2.89036d3@aar') {
			        transitive = true
			        changing = true
			    }
             ]]>
		</dependency> 
	</android>
 	 <ios>
        <class>MUICountrySelect</class>
        <dependency>
            <![CDATA[
                  pod 'MUICountrySelect', '0.0.4'
             ]]>
        </dependency>
    </ios>
  
</component><component namespace="com.nd.sdp.component" name="applepay-component" display="苹果内购支付">
	<pages>
	</pages>
	
	<properties>
	</properties>
	
	<events>
	</events>

	<handlers>
      <handler name="ios://receive_event_pay_handleiap" desc="苹果内购" receive_event="payment_event_pay_handleiap"/>
      <handler name="ios://receive_event_restorepay" desc="恢复购买" receive_event="payment_event_restorepay"/>
      <handler name="ios://receive_event_consume_iap_pay_order" desc="恢复购买" receive_event="payment_event_consume_iap_pay_order"/>
	</handlers>

	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
			<property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
		</properties>
	</runtime>
    <ios>
		<class>ApplePayComponent</class>
		<dependency>
			<![CDATA[
            	pod 'ApplePayComponent', '0.0.6'
			]]>
		</dependency>       
	</ios>
</component><component namespace="com.nd.xst" name="edu-class" display="X-班级基础能力">
	<pages>
	</pages>
	
	<properties>
	</properties>
	
	<events>
	</events>
  
    <routes>
    	<route source="cmp://com.nd.sdp.component.user-select-framework/main" destination="cmp://com.nd.xst.edu-class/class_picker"/> 
	</routes>

    <handlers>
        <handler name="ios://xClassBaseInit" desc="" receive_event="xcloud_app_init"/>
        <handler name="ios://classSDKListenEvent" receive_event="com.nd.xcloud/class_change,com.nd.xcloud/class_statistics,com.nd.xcloud/class_dissolve,com.nd.xcloud/class_transfer,com.nd.xcloud/class_member_change,com.nd.xcloud/class_audit_change,com.nd.xcloud/class_member_delete" desc="转发班级SDK事件（班级信息变化）"/>
        <handler name="not-ios:://xClassBaseInit" desc="" receive_event="xcloud_app_init"/>
        <handler name="not-ios://classSDKListenEvent" receive_event="com.nd.xcloud/class_change,com.nd.xcloud/class_statistics,com.nd.xcloud/class_dissolve,com.nd.xcloud/class_transfer,com.nd.xcloud/class_member_change,com.nd.xcloud/class_audit_change,com.nd.xcloud/class_member_delete" desc="转发班级SDK事件"/>
    </handlers>

	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
			<property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
		</properties>
       <providers>
            <provider name="com.nd.xst.edu-class.selection_provider" filter="" desc="provider的声明" anClass="SelectionProvider" iosClass=""/>
        </providers>
	</runtime>
  
     <android>
    	<class>com.nd.sdp.android.xst.classmember.selector.XClassMemberSelectorComponent</class>   
		<dependency>
    	<![CDATA[  
  			compile 'com.nd.sdp.android:xst-classmember-selector-android:1.3.0-rc3'
            implementation('com.nd.sdp.android:xst-class-sdk:4.6-rc09')
		]]> 
		</dependency>
   	</android> 
  
    <ios>
        <class>XClassmemberSelectorComponent</class>
        <dependency>
            <![CDATA[
			pod 'xst_classmember_selector_ios', '0.0.11'
  			pod 'xst_class_sdk','0.0.72'
        ]]>
        </dependency>
    </ios>
  
</component><component namespace="com.nd.pbl" name="alipay" display="支付宝支付" type="function_library">
    <pages>
    </pages>
    
    <properties>
    </properties>
    
    <events>
    </events>

    <handlers>
    </handlers>

    <runtime>
        <properties>
            <property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="false"/>
        </properties>
    </runtime>
  
    <build>
        <android>   
            <safe_whitelist>
                <activities>
                    <activity name="com.alipay.sdk.app.PayResultActivity" describe="支付宝支付结果回调需要" type="activity" owner="912025"/>
                    <activity name="com.alipay.sdk.app.AlipayResultActivity" describe="支付宝支付结果回调需要" type="activity" owner="912025"/>
                </activities>
            </safe_whitelist>
        </android>
    </build>
  
    <android>    
        <scenes>
            <scene name="android.permission.ACCESS_WIFI_STATE" displayName="获取WiFi状态" describe="查询用户设备的网络状态" isAsk="true" closeable="true" type="permission"/>
            <scene name="android.permission.ACCESS_NETWORK_STATE" displayName="获取网络状态" describe="查询用户设备的网络状态" isAsk="true" closeable="true" type="permission"/>
            <scene name="android.permission.INTERNET" displayName="访问网络" describe="提供接口访问网络的需求" isAsk="true" closeable="true" type="permission"/>
        </scenes>
        <dependency>
            <![CDATA[
                compile('com.nd.sdp.android:social-alipay:3.0.3@aar') {
                    transitive = true
                    changing = true
                }
             ]]>
        </dependency>
    </android>
    <ios>
      <class>alipay</class>
      <dependency>
        <![CDATA[
            pod 'AlipaySDK-iOS' ,'15.6.8'
            pod 'NdAlipay', '0.0.9'
        ]]>
      </dependency>
    </ios>
</component><component namespace="com.nd.sdp.component" name="pointpay" display="养成币支付">
	<pages>
	</pages>
	
	<properties>
	</properties>
	
	<events>
	</events>

	<handlers>
      <handler name="not-ios://payCertificate" desc="非消费类商户支付" receive_event="payment_event_pay_certificate"/>
      <handler name="not-ios://payConsumeCertificate" desc="消费类商户支付，带付款详情（废弃）" receive_event="payment_event_consume_pay_certificate"/>
      <handler name="not-ios://payConsumeOrderWithouUiPage" desc="消费类支付" receive_event="payment_event_consume_pay_order"/>
      <handler name="not-ios://payCheckoutCounter" desc="收银台支付" receive_event="payment_event_pay_checkout_counter"/>
      <handler name="ios://payment_event_pay_certificate" desc="获取支付凭证" receive_event="payment_event_pay_certificate"/>
      <handler name="ios://payment_event_consume_pay_certificate" desc="凭证支付（商城组件，表情商城组件）" receive_event="payment_event_consume_pay_certificate"/>
      <handler name="ios://payment_event_consume_pay_order" desc="凭证支付（表情商城组件，VIP组件）" receive_event="payment_event_consume_pay_order"/>
	</handlers>

	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
			<property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
		</properties>
      <providers>
        <provider name="com.nd.sdp.component.payment:point" filter="" desc="获取积分余额"/>
        <provider name="com.nd.sdp.component.payment:coin" filter="" desc="获取积分余额(已废弃)"/>
        <provider name="com.nd.sdp.component.payment:CurrencyBalance" filter="" desc="获取币种余额"/>
      </providers> 
	</runtime>
  
  	<android>
        <scenes>
            <scene name="android.permission.ACCESS_WIFI_STATE" displayName="获取WiFi状态" describe="查询用户设备的网络状态" isAsk="true" closeable="true" type="permission"/>
            <scene name="android.permission.ACCESS_NETWORK_STATE" displayName="获取网络状态" describe="查询用户设备的网络状态" isAsk="true" closeable="true" type="permission"/>
            <scene name="android.permission.INTERNET" displayName="访问网络" describe="提供接口访问网络的需求" isAsk="true" closeable="true" type="permission"/>
            <scene name="android.permission.READ_EXTERNAL_STORAGE" displayName="读取外部存储" describe="读取数据和图片缓存" isAsk="true" closeable="true" type="permission"/>
            <scene name="android.permission.WRITE_EXTERNAL_STORAGE" displayName="写入外部存储" describe="写入数据和图片缓存" isAsk="true" closeable="true" type="permission"/>
            <scene name="android.permission.QUERY_ALL_PACKAGES" displayName="应用包可见性" describe="唤起第三方支付应用" isAsk="true" closeable="true" type="permission"/>  
        </scenes>
      
		<class>com.nd.sdp.android.ndpayment.NdPointPayComponent</class>
		<dependency>
			<![CDATA[
			    compile('com.nd.sdp.android:ndpayment:0.10.72.46bde8b@aar') {
			        transitive = true
			        changing = true
			    }
			    compile('com.nd.sdp.android:pay-channel-view:1.2.15.27e96cf@aar') {
			        transitive = true
			        changing = true
			    }
             ]]>
		</dependency> 
	</android>
  
  	<ios>
		<class>PointPay_Component</class>
      	<dependency>
			<![CDATA[
            	pod 'PointPaySDK', '0.0.8'
			]]>
		</dependency>    
	</ios>
  
   <sdk>
    <js-sdk>
      <name>jssdk-point-payment</name>
      <version>1.0</version>
      <ios>
      </ios>
      <android>
        <js-class>com.nd.sdp.android.ndpayment.provider.PointPaymentJsInjectorProvider</js-class>
      </android>
    </js-sdk>
  </sdk>
</component><component namespace="com.nd.sdp.component" name="eda-habit-cultivate" display="EDA-学习打卡">
	<pages>
	</pages>
	
	<properties>
	</properties>
	
	<events>
	</events>

	<handlers>
	</handlers>

	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
			<property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
		</properties>
	</runtime>
</component><component namespace="com.nd.eda" name="assemble" display="EDA-拼装门户">
		<pages>
      <page type="cmp" name="launch_event_page" display="EDA学习-启动运营页" toplevel="2" allow_guest="true"/>
      <page type="cmp" name="preLaunch" display="EDA学习-启动中间页" toplevel="2" allow_guest="true"/>
      <page type="cmp" name="loginlessForward" display="EDA学习-首页" toplevel="2" allow_guest="true">
        <params>
            <property type="bool" name="rebuild_tabpage" displayName="是否打开新主界面"/>
        </params>
      </page>
      <page type="cmp" name="login_dialog" display="登录确认弹窗" toplevel="2" allow_guest="true"/>
      <page type="cmp" name="showCreateGroupDialog" display="显示创建群组菜单选择框" toplevel="2" allow_guest="true"/>
      <page type="cmp" name="showJoinGroupDialog" display="显示加入群组菜单选择框" toplevel="2" allow_guest="true"/>
      <page type="cmp" name="successPage1" display="加入反馈无需审核" toplevel="1" allow_guest="true"/>
      <page type="cmp" name="successPage2" display="加入反馈需要审核" toplevel="1" allow_guest="true"/>
      <page type="cmp" name="guide" display="选择身份后引导页面" toplevel="2" allow_guest="false"/>
      <page type="cmp" name="lectureHomepage" display="讲师页面" toplevel="2" allow_guest="true"/>
      <page type="cmp" name="openvlab" display="虚拟实验室" toplevel="2" allow_guest="true"/>
      <page type="cmp" name="study" display="学习广场" toplevel="1" allow_guest="true"/>
      <page type="cmp" name="regionChannel" display="区域频道" toplevel="1" allow_guest="true"/>
      <page type="cmp" name="uploadlog" display="上传日志(没有实际页面，转发事件上传日志)" toplevel="2" allow_guest="true"/>
	</pages>
	
	<properties>
   <property type="page" name="launch_event_finish_page" displayName="运营页展示结束后跳转页"/>
        <group name="loginlessForward" displayName="免登陆模式主页地址配置" max-repeat="1">
         	<property type="page" name="mainpageDefault" displayName="默认主页"/>
         	<property type="page" name="mainpageLoginless" displayName="免登陆模式主页"/>
          	<property type="page" name="mainpageStatic" displayName="纯静态主页"/>
         </group>
      <property type="string" name="service_tel" displayName="客服电话" value=""/>
      <property type="txt" name="url_config_file" displayName="Android入口地址配置文件(json)" value="http://git.sdp.nd/mobile/res/raw/master/x-study/urlconfig.json"/>
      <property type="bool" name="clear_nick_name" displayName="是否在登录成功后有昵称时清除昵称" value="false"/>
      <property type="bool" name="enable_immersive_statusbar" displayName="是否开启沉浸式状态栏" value="false"/>
      <property type="txt" name="activity_ignore" displayName="沉浸式状态栏忽略界面" value=""/>
      <property type="txt" name="activity_transparent" displayName="沉浸式状态栏透明处理界面" value=""/>
      <property type="bool" name="ipad_orientation_all" displayName="是否允许iPad横竖屏切换" value="false"/>
      <property type="int" name="loginless_time_out" displayName="免登陆页面超时时间，单位:毫秒" value="2000"/>
      <property type="string" name="download_uid" displayName="下载管理存取UID（不为空表示对所有用户开放，为空代表用当前用户UID进行隔离）" value="9999999999"/>
      <property type="string" name="mapKey" displayName="高德key(iOS)" value=""/>
      <property type="page" name="timeout_default_page" displayName="APP超时默认访问页面"/>
      <property type="int" name="default_page_selected_tab" displayName="默认页面页选中tab" value="0"/>
      <property type="txt" name="default_h5_learning" displayName="默认h5学习页" value="https://h5-zxx.eduyun.cn"/>
      <property type="int" name="user_avtar_manager_cache_time" displayName="头像缓存时长（秒）" value="86400"/>
      <property type="int" name="app_usage_secs" displayName="使用多长时间后显示温馨提示（秒）" value="1800"/>
      <property type="string" name="channel_cmp" displayName="内嵌频道页面" value=""/>
      <property type="string" name="search_cmp" displayName="搜索页面" value=""/>
      <property type="string" name="channel_filter_url" displayName="频道筛选数据" value="https://api.ykt.cbern.com.cn/zxx/api_static/conf/channel_filter_datas.json"/>
      <property type="string" name="region_channel_url" displayName="区域频道数据" value="https://api.ykt.cbern.com.cn/zxx/api_static/data/region_channel.json"/>
	</properties>
	
	<events>
	</events>

	<handlers>
      <handler name="userRefuseAgreement" desc="不同意隐私协议事件" receive_event="KEY_USER_REFUSE_AGREEMENT_EVENT_ASYNC"/>
    	<handler name="uc_on_login_success" desc="登录成功事件监听" receive_event="uc_on_login_success"/>
        <handler name="ios://uc_on_login_success2" receive_event="uc_on_login_success" desc="登录成功事件监听"/>
        <handler name="not-ios://event_query_current_recommend_week" desc="获取周推荐key" receive_event="event_query_current_recommend_week"/>
        <handler name="ios://queryCurrentRecommend" desc="获取周推荐key" receive_event="event_query_current_recommend_week"/>
        <handler name="not-ios://event_ims_select_custom_view" desc="IM自定义分享弹出框" receive_event="event_ims_select_custom_view"/>
        <handler name="not-ios://register_flow_control" desc="注册限流页面代理" receive_event="register_flow_control"/>
  		<handler name="ios://punchRefresh" desc="打��推送" receive_event="com.nd.sdp.component.elearning_habit_train/user_date_unfinished_remind"/>	
  </handlers>

    <!-- 路由表 -->
	<routes>
    	<route source="cmp://com.nd.sdp.component.lecture-management2/lectureHomepageV2" destination="cmp://com.nd.eda.assemble/lectureHomepage"/>
    	<route source="cmp://com.nd.xst.downloader/resList" destination="cmp://com.nd.xst.downloader/download_business_list"/>
        <route source="cmp://com.nd.eda.assemble/createclass_v2" destination="cmp://com.nd.eda.assemble/createclass"/>
	</routes>
  
	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
			<property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
	</properties>
      
        <providers>
            <provider name="com.nd.eda.assemble.channel_tab_provider" filter="com.nd.eda.assemble.channel_tab_provider.filter" desc="首页tab节日化" iosClass="XCAChannelTabProvider"/>
		    <provider name="com.nd.sdp.android.xcloud_assemble.MenuExtendProvider" filter="com.nd.social.im.GetRecentContactTitleMenuItem" desc="IM消息列表右上角菜单" iosClass="NDGSProvider" anClass="com.nd.sdp.android.xcloud_assemble.im.provider.ToolBarMenuMoreProvider"/>
            <provider name="com.nd.dynamicCSHostProvider" filter="" desc="获取CS域名" iosClass="" anClass=""/>
            <provider name="com.nd.eda.assemble.XWordChainChatInputMenuItem" filter="com.nd.social.im.GetChatInputMenuItem2" desc="群接龙底部入口" iosClass="XCAWordChainProvider" anClass="com.nd.sdp.android.xcloud_assemble.im.provider.WordChainIMProvider"/>
        </providers>
      <!-- <gradles name="XST网络拦截器"> 
  			<android-project-gradle-classpaths displayName="XST网络拦截器 plugin"> 
    			<classpath value="com.nd.xst.android:gradle-intercept:1.1"/> 
  			</android-project-gradle-classpaths>  
  			<android-app-gradle-applys displayName="XST网络拦截器 plugin id"> 
    			<apply value="xst-network"/> 
  			</android-app-gradle-applys>
		</gradles> -->
	</runtime>
  
  	<android>
		<class>com.nd.sdp.android.xcloud_assemble.XCloudAssembleComponent</class>
		<dependency>
              compile ("com.nd.sdp.android:e-cloud-assemble-android:1.0.1.117")
          
              // x学习定制的im界面，IM同学维护
              compile("com.nd.android.sdp.im:im-x-study-gluein:22.16.2.15184.release") {     
              	exclude group: 'com.android.support'
     		  }
          
              //移除新浪库，用户关系组件
              configurations {
			          all*.exclude group:'com.sina.weibo.sdk', module: 'core'
                all*.exclude group:'com.nd.sdp.android', module: 'x-cloud-assemble-android'
                all*.exclude group:'com.nd.sdp.android', module: 'xst-course'
	          all*.exclude group:'com.nd.sdp.android', module: 'edu-ap-parent-child-raship-sdk-android'
              }
        </dependency>
        <groovy>
        <![CDATA[
			apply from: "http://git.sdp.nd/mobile/res/raw/master/x-study/file-replace.gradle"
            apply from: "http://git.sdp.nd/android-social-doc/library-doc/-/raw/master/remove-manifest-test.gradle"
        ]]>
        </groovy>
    </android>
  
  <ios>
        <class>XCloudAssembleComponent</class>
        <dependency>
            <![CDATA[
				pod 'x_cloud_assemble_ios', '1.1.304'
               ]]>
        </dependency>
    </ios>
</component><component namespace="com.nd.eda" name="e-study-activity" display="EDA-学习活动集" extension="true">
	<pages>
       <page type="cmp" name="test" display="测试入口" toplevel="1"/>
       <page type="cmp" name="my_study" display="我的学习" toplevel="1" allow_guest="false"/>
      <page type="cmp" name="special_topic_pdf" display="pdf播放" allow_guest="true"/>
      <page type="cmp" name="special_topic_detail" display="专题教育资源详情" allow_guest="true"/>
      <page type="cmp" name="assets_document" display="NDR文档详情" allow_guest="true"/>
      <page type="cmp" name="rank_detail_top50" display="排行榜详情" allow_guest="true"/>
      <page type="cmp" name="course" display="课程融合" allow_guest="true"/>
	</pages>
	
	<properties>
	    <property type="string" name="my_study_unit_business_type" displayName="我的学习/课程类型" value="x_course"/>
        <property type="string" name="teacher_training_business_type" displayName="教师研修类型" value="t_course"/>
        <property type="txt" name="my_study_empty_page_jump_config" displayName="我的学习/空页面/跳转配置" value="{'operations':[{'event_name':'EL_MUTUAL_SWITCH_TAB','param':{'index':0}},{'event_name':'EL_CHANNEL_SWITCH_TAB','param':{'inner_cmp':'cmp://com.nd.eda.e-study-activity/syncClassroom?tab_offest=1','offset':0,'visible':0}}]}"/>
        <property type="string" name="share_default_link" displayName="分享地址" value="https://h5-bd.ykt.eduyun.cn/download_app"/>
        <property type="txt" name="home_recommend_src" displayName="推荐板块数据源" value="https://api.ykt.cbern.com.cn/zxx/api_static/data/channel_home_recommend.json"/>
        <property type="txt" name="rank_share_config" displayName="排行榜的分享配置" value="{'sedu':{'link':'https://x-link.ykt.eduyun.cn/smart_links/141072450060289?qrEventName=smartlink','img':'https://cdncs.ykt.cbern.com.cn/v0.1/static/x_cloud_web/api_static/top_rank/top_rank_share_img.png'},'syncClassroom':{'link':'https://x-link.ykt.eduyun.cn/smart_links/141072594780161?qrEventName=smartlink','img':'https://cdncs.ykt.cbern.com.cn/v0.1/static/x_cloud_web/api_static/top_rank/top_rank_share_img.png'},'schoolService':{'link':'https://x-link.ykt.eduyun.cn/smart_links/141072661889025?qrEventName=smartlink','img':'https://cdncs.ykt.cbern.com.cn/v0.1/static/x_cloud_web/api_static/top_rank/top_rank_share_img.png'},'tchTraining':{'link':'https://x-link.ykt.eduyun.cn/smart_links/141072689152001?qrEventName=smartlink','img':'https://cdncs.ykt.cbern.com.cn/v0.1/static/x_cloud_web/api_static/top_rank/top_rank_share_img.png'},'family':{'link':'https://x-link.ykt.eduyun.cn/smart_links/141072718512129?qrEventName=smartlink','img':'https://cdncs.ykt.cbern.com.cn/v0.1/static/x_cloud_web/api_static/top_rank/top_rank_share_img.png'},'eduReform':{'link':'https://x-link.ykt.eduyun.cn/smart_links/141072758341633?qrEventName=smartlink','img':'https://cdncs.ykt.cbern.com.cn/v0.1/static/x_cloud_web/api_static/top_rank/top_rank_share_img.png'},'sport':{'link':'https://x-link.ykt.eduyun.cn/smart_links/159561516826627?qrEventName=smartlink','img':'https://cdncs.ykt.cbern.com.cn/v0.1/static/x_cloud_web/api_static/top_rank/top_rank_share_img.png'},'art':{'link':'https://x-link.ykt.eduyun.cn/smart_links/159561550381059?qrEventName=smartlink','img':'https://cdncs.ykt.cbern.com.cn/v0.1/static/x_cloud_web/api_static/top_rank/top_rank_share_img.png'},'labourEdu':{'link':'https://x-link.ykt.eduyun.cn/smart_links/159561590226947?qrEventName=smartlink','img':'https://cdncs.ykt.cbern.com.cn/v0.1/static/x_cloud_web/api_static/top_rank/top_rank_share_img.png'},'tchMaterial':{'link':'https://x-link.ykt.eduyun.cn/smart_links/159561632169986?qrEventName=smartlink','img':'https://cdncs.ykt.cbern.com.cn/v0.1/static/x_cloud_web/api_static/top_rank/top_rank_share_img.png'}}"/>  
    
        <group name="course_tab_items" displayName="课程教学子tab" max-repeat="3">
          	<property type="string" name="key" displayName="key"/>
            <property type="string" name="title" displayName="名称" i18n="true"/>
            <property type="string" name="url" displayName="tab项URL，支持cmp和http地址"/>
            <property type="image" name="image_icon" senior="true" displayName="图标" value="" accept="png,jpeg,webp">
               <transfer os="Android" resize="@xxxhdpi"/>
               <transfer os="iOS"/>
            </property>
       </group>    
  </properties>
	
	<events>
	</events>

	<handlers>
      <handler name="ios://onTextbookInitEvent" desc="触发学习活动加载" receive_event="XSA_TEXTBOOK_NEED_INIT"/>
      <handler name="ios://onForInitEvent" desc="初始化组件事件" receive_event="for_init_event"/>
      <handler name="notifySpacialTopicReport" desc="进度上报" receive_event="EVENT_UPLOAD_MY_SIMPLE_STUDY_RECORD"/>
      <handler name="ios://onShowCoursePage" desc="跳转课程频道事件" receive_event="EVENT_SHOW_COURSE_PAGE"/>
      <handler name="ios://onLikeCompletion" desc="点赞成功" receive_event="event_xst_like_completion"/>
      <handler name="ios://onUnLikeCompletion" desc="取消点赞" receive_event="event_xst_unlike_completion"/>
	</handlers>

	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
			<property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
		</properties>
      
      <providers>
        	<provider name="com.nd.eda.e-study-activity.syncClassroomProvider" filter="com.nd.eda.e-study-activity.syncClassroomProvider.filter" desc="获取视图" iosClass="XSASyncClassroomProvider" anClass="com.nd.android.xst.study.actv.provider.TreeFiltrateClassFragmentProvider"/>
        	<provider name="com.nd.android.xst.study.actv.bookDetail.XBookDetailActivity.coursev5.Provider" filter="com.nd.android.xst.study.actv.bookDetail.XBookDetailActivity.coursev5.Provider.Filter" desc="获取课程标签" anClass="com.nd.android.xst.study.actv.bookDetail.dataProvider.XBookDetailDataProvider"/>
        	<provider name="com.nd.sdp.component.XSABookDetailVC.provider" filter="com.nd.sdp.component.XSABookDetailVC.filter" desc="课本详情iOS-Provider" iosClass="XSATextbookProvider" anClass=""/>
            <provider name="com.nd.eda.e-study-activity.libraryInfoProvider" filter="com.nd.eda.e-study-activity.libraryInfoProvider.filter" desc="获取库信息" iosClass="XSALibraryInfoProvider" anClass="com.nd.android.xst.study.actv.provider.LibraryInfoProvider"/>
            <provider name="com.nd.eda.e-study-activity.SpecialSubjectVersionProvider" filter="com.nd.eda.e-study-activity.SpecialSubjectVersionProvider.filter" desc="获取专题原生支持的版本" iosClass="XSASpecialSubjectVersionProvider" anClass="com.nd.android.xst.study.actv.provider.SpecialSubjectVersionProvider"/>
            <provider name="com.nd.eda.e-study-activity.homeRecommendProvider" filter="com.nd.eda.e-study-activity.homeRecommendProvider.filter" desc="热门推荐板块" iosClass="XSAHomeRecommendProvider" anClass="com.nd.android.xst.study.content.RecommendFrameProvider"/>
            <provider name="com.nd.eda.e-study-activity.homeBlankSpaceProvider" filter="com.nd.eda.e-study-activity.homeBlankSpaceProvider.filter" desc="空白视图" anClass="com.nd.android.xst.study.actv.provider.HomeBlankSpaceProvider"/>
      </providers>
      
	</runtime>
    <android>
		<class>com.nd.android.xst.study.actv.StudyActComponent</class>
		<dependency>
            def stuActVersion = "1.1.0.102"
        	compile "com.nd.eda:e-study-activity:${stuActVersion}"
            compile "com.nd.eda:e-study-content:${stuActVersion}"
              
          //移除新浪库，用户关系组件
              configurations {
                all*.exclude group:'com.nd.xst', module: 'study-activity'
                all*.exclude group:'com.nd.xst', module: 'study-content'
              }
        </dependency>
    </android>
  	<ios>
        <class>XStudyActivityComponent</class>
        <dependency>
            <![CDATA[
			pod 'x_study_activity_ios', '0.0.196'
        ]]>
        </dependency>
    </ios>
</component><component namespace="com.nd.eda" name="ecourse" display="EDA-课程">
	<pages>
      <page type="cmp" name="course" display="课程主页" toplevel="1" allow_guest="true" expandability="true">
       <properties>
           <property name="image" displayName="属性占位" type="bool" value="true"/>
       </properties>
      </page>
      <page type="cmp" name="ocourse" display="通用线下课" toplevel="1" allow_guest="true"/>
      <page type="cmp" name="tcourse" display="通用研修课" toplevel="1" allow_guest="true"/>
      <page type="cmp" name="teacherTrainingEx" display="强师教师研修" toplevel="1" allow_guest="true"/>
      <page type="cmp" name="teacherTraining" display="教师研修" toplevel="1" allow_guest="true"/>
      <page type="cmp" name="specialCourse" display="专题课程" toplevel="1" allow_guest="true"/>
      <page type="cmp" name="study" display="通用学习" toplevel="1" allow_guest="true"/>
      <page type="cmp" name="downloadResourceList" display="下载资源列表" toplevel="1" allow_guest="true"/>
      <page type="cmp" name="download" display="离线查看" toplevel="2" allow_guest="true"/>
      <page type="cmp" name="debug" display="调试" toplevel="1" allow_guest="true"/>
	</pages>
	
	<properties>
      <property type="string" name="h5_activity_orientation" displayName="h5活动屏幕方向（填写数字，请在开发指导下配置）" value=""/>
	</properties>
	
	<events>
	</events>

	<handlers>
      <handler name="ios://event_handler_enroll" desc="报名" receive_event="event_enroll"/>
      <handler name="ios://event_handler_enroll_view" desc="获取报名视图" receive_event="event_get_enroll_view"/>
      <handler name="ios://event_handler_enrollStateChange" desc="报名状态变更" receive_event="ELENROLL_STATE_CHANGE"/>
      <handler name="ios://event_handler_coursePageRemove" desc="移除课程页" receive_event="CECT_COURSE_PAGE_REMOVE"/>
      <handler name="ios://event_handler_smartlinkGenerateLinkResult" desc="smartLink获取成功" receive_event="smartlink_generate_link_result"/>
      <handler name="ios://playNextActivity" desc="播放下一个活动" receive_event="CectActivityFramePlayNextActivity"/>
      <handler name="uc_on_login_success" desc="uc登录事件" receive_event="uc_on_login_success"/>
      <handler name="ios://event_handler_UpdateCourseLocalProcessInfo" desc="本地进度管理初始化消息" receive_event="CECT_COURSE_LOCAL_PROCESS_INIT"/>
	  <handler name="event_handler_enter_train" desc="进入h5培训聚合页" receive_event="EVENT_ENTER_TRAIN_PAGE"/>
      <handler name="ios://onLikeCompletion" desc="点赞成功" receive_event="event_xst_like_completion"/>
      <handler name="ios://onUnLikeCompletion" desc="取消点赞" receive_event="event_xst_unlike_completion"/>
  </handlers>

	<runtime>
		<properties>
			<property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
			<property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
		</properties>
        <providers>
              <provider name="com.nd.sdp.component.cect-course-v5.provider" filter="com.nd.sdp.component.cect-course-v5.provider.filter" desc="provider的声明" anClass="" iosClass="CectCourseV5Provider"/>
              <provider name="com.nd.sdp.android.coursev5.mvp.detail.CourseV5MvpActivity.coursev5.Provider" filter="com.nd.sdp.android.coursev5.mvp.detail.CourseV5MvpActivity.coursev5.Provider.filter" desc="provider的声明" anClass="DownloadCourseDataProvider" iosClass=""/>  
        </providers>
	</runtime>
  
    <android>
		<class>com.nd.sdp.android.coursev5.CourseV5Component</class>
		<dependency>
        	<![CDATA[
       		    compile ("com.nd.sdp.android:eda-course:1.1.0.109")
             ]]>
           configurations {
                all*.exclude group:'com.nd.sdp.android', module: 'x-cloud-assemble-android'
                all*.exclude group:'com.nd.sdp.android', module: 'xst-course'
                all*.exclude group:'com.nd.sdp.android', module: 'xst-course-data'
               all*.exclude group:'com.nd.sdp.android', module: 'xst-coursehour'
               all*.exclude group:'com.nd.sdp.android', module: 'xst-off-course'
               all*.exclude group:'com.nd.sdp.android', module: 'xst-course-presenter'
               all*.exclude group:'com.nd.sdp.android', module: 'xst-course-sdk'
              }
		</dependency>
        <groovy>
			<![CDATA[
		    	android {
    				compileOptions {
        				sourceCompatibility 1.8
        				targetCompatibility 1.8
    				}
				}
			]]>
		</groovy>
	</android>
  
    <ios>
		<class>CectCourseV5ComponentImpl</class>
		<dependency>
			<![CDATA[
				pod 'xst_course_ios', '0.0.257'
			]]>
		</dependency>
    </ios>
</component><component namespace="com.nd.eda" name="euser" display="EDA-个人主页">    
    <pages>
        <page type="cmp" name="homepage" display="EDA-个人主页" toplevel="1" allow_guest="true"/>
        <page type="cmp" name="about" display="关于软件" toplevel="1" allow_guest="true"/>
      	<page type="cmp" name="userinfo_settings" display="用户信息设置" toplevel="1" allow_guest="false"/>
        <page type="cmp" name="ks_cloud_doc" display="云文档入口" toplevel="2" allow_guest="true"/>
    </pages>
    <properties>
        <property type="page" name="userinfopage" displayName="用户信息设置页"/>
        <property type="string" name="otherpage" displayName="他人资料地址"/>
        <group name="homepageitemLogin" displayName="登录下设置项配置" max-repeat="10">
            <property type="string" name="name" displayName="设置项名称" i18n="true"/>
            <property type="string" name="url" displayName="设置项跳转URL，支持cmp和http地址"/>
            <property type="image" name="image_login" senior="true" displayName="设置项图标" value="" accept="png,jpeg,webp">
                <transfer os="Android" resize="@xxhdpi"/>
                <transfer os="iOS"/>
            </property>
            <property type="string" name="statistics_code" displayName="埋点事件编码"/>
        </group>
        <group name="homepageitemGuest" displayName="游客下设置项配置" max-repeat="10">
            <property type="string" name="name" displayName="设置项名称" i18n="true"/>
            <property type="string" name="url" displayName="设置项跳转URL，支持cmp和http地址"/>
            <property type="image" name="image_guest" senior="true" displayName="设置项图标" value="" accept="png,jpeg,webp">
                <transfer os="Android" resize="@xxhdpi"/>
                <transfer os="iOS"/>
            </property>
            <property type="string" name="statistics_code" displayName="埋点事件编码"/>
        </group>
        <group name="homepageitemLoginless" displayName="免登陆模式配置项" max-repeat="10">
            <property type="string" name="name" displayName="名称" i18n="true"/>
            <property type="string" name="url" displayName="跳转地址，支持cmp，http"/>
            <property type="image" name="image_guest" senior="true" displayName="图标" value="" accept="png,jpeg,webp">
                <transfer os="Android" resize="@xxhdpi"/>
                <transfer os="iOS"/>
            </property>
            <property type="string" name="statistics_code" displayName="埋点事件编码"/>
        </group>
        <property type="bool" name="ipad_orientation_all" displayName="是否允许iPad横竖屏切换" value="false"/>
    </properties>
    <events/>
  	<routes>
        <!--离线课程地址路由-->
    	<route source="cmp://com.nd.sdp.component.cect-course-v5/course" destination="cmp://com.nd.eda.ecourse/course"/>
        <route source="cmp://com.nd.sdp.component.cect-course-v5/download" destination="cmp://com.nd.eda.ecourse/download"/>
    	<route source="cmp://com.nd.sdp.component.local-data-management/dowmload_manager" destination="cmp://com.nd.sdp.component.elearning-course/alldownloadlist"/> 
	</routes>
    <handlers>
        <handler name="uc_on_login_success" desc="登录成功事件监听" receive_event="uc_on_login_success"/>
        <handler name="xuser_show_other_page" desc="打开他人主页" receive_event="xuser_show_other_page">
            <property name="uid" displayName="用户ID(一定要传)" type="string"/>
        </handler>
        <handler name="x_event_feedback" desc="群组/他人举报" receive_event="x_event_feedback"/>
        <handler name="not-ios://event_send_open_tab_activity" desc="工厂首页TAB打开事件" receive_event="event_send_open_tab_activity"/>
    </handlers>
    <runtime>
        <properties>
            <property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="true"/>
            <property type="bool" name="lazy_init_ios" displayName="是否开启iOS延迟初始化" value="true"/>
        </properties>
    </runtime>
    <android>
    <!--  关注 -->
        <class>com.nd.sdp.android.edauser.XUserComponent</class>
        <dependency>
            compile 'com.nd.sdp.android:eda-user-android:1.1.2.007'
            compile 'com.nd.eda:eda-userinfo:1.1.1'
        </dependency>
    </android>
    <ios>
       <class>XUserComponent</class>
        <dependency>
            <![CDATA[
			pod 'x_user_ios', '1.0.188'
        ]]>
        </dependency>
        <scenes>
             <scene name="NSPhotoLibraryUsageDescription" describe="获取相册权限用于选择用户头像"/>
             <scene name="NSCameraUsageDescription" describe="获取相机权限用于拍照生成用户头像"/>
          	 <scene name="NSPhotoLibraryAddUsageDescription" describe="获取相册写入权限用于保存头像"/>
        </scenes>
    </ios>
</component><component name="pblcomponent" display="PBL" namespace="com.nd.pbl">
    <pages>
        <page name="me" display="我的主页" toplevel="1" type="cmp" allow_guest="true"/>
        <page name="others" display="他人主页" toplevel="2" type="cmp"/>
        <page name="task" display="任务列表" toplevel="2" type="cmp"/>
        <page name="reward" display="奖励列表" toplevel="2" type="cmp"/>
        <page name="qrcode" display="二维码页面" toplevel="2" type="cmp"/>
        <page name="sign" display="签到页面" toplevel="2" type="cmp"/>
        <page name="setting" display="名片信息页面" toplevel="2" type="cmp"/>
        <page name="settingAvatar" display="头像查看" toplevel="2" type="cmp"/>
        <page name="sendflowercenter" display="送花中心" toplevel="2" type="cmp"/>
        <page name="alertSetting" display="日事日清提醒设置" toplevel="2" type="cmp"/>
    </pages>

     <properties>
        <!-- <property name="card_msg_logout" displayName="设置页面是否包含退出登录" type="bool">
          <tip>设置页面是否包含退出登录</tip>
          <img src="http://cdncs.101.com/v0.1/static/production_pbl_user/PBLComponent/PBL_Setting_logout.jpg"/>
          </property> -->
        <property name="add_friends" displayName="他人主页显示加为好友" type="bool">
          <tip>他人主页显示加为好友</tip>
          <img src="http://cdncs.101.com/v0.1/static/production_pbl_user/PBLComponent/PBL_Others_add_friend.jpg"/>
          </property>
        <property name="send_msg" displayName="他人主页显示发送消息" type="bool">
          <tip>他人主页显示发送消息</tip>
          <img src="http://cdncs.101.com/v0.1/static/production_pbl_user/PBLComponent/PBL_Others_send_msg.jpg"/>
          </property>
      <property name="show_crush" displayName="他人主页显示暗恋按钮" type="bool"/>
      <property name="show_relationship" displayName="他人主页显示和TA建立关系按钮" type="bool"/>
        <property name="show_qrcode" displayName="他人主页更多显示二维码按钮" type="bool">
          <tip>他人主页更多显示二维码按钮</tip>
          <img src="http://cdncs.101.com/v0.1/static/production_pbl_user/PBLComponent/PBL_Others_qrcode.jpg"/>
          </property>
      <!--  <property name="show_suspend_sign" displayName="显示悬浮签到按钮" type="bool">
          <tip>显示悬浮签到按钮</tip>
          <img src="http://cdncs.101.com/v0.1/static/production_pbl_user/PBLComponent/PBL_Sign_Suspend.jpg"/>
          </property> -->
        <property name="auto_sign" displayName="进入签到页面后自动触发签到" type="bool">
          <tip>示例图片为标准版签到页面</tip>
          <img src="http://cdncs.101.com/v0.1/static/production_pbl_user/PBLComponent/PBL_Sign_Standard.png"/>
          </property>
        <property name="sign_type" displayName="签到类型" type="string">
            <tip>standard(标准版),fjt(佛教通),star(明星版)</tip>
            <img src="http://cdncs.101.com/v0.1/static/production_pbl_user/PBLComponent/PBL_Sign_Type.jpg"/>
        </property>
      <!--	<property name="show_reward_in_dlg" displayName="弹窗显示奖励" type="bool">
            <tip>默认false，使用系统提示；为true时，在后台配置过奖励消息推送后，前端将弹窗通知</tip>
        </property> -->
       <!-- <property name="use_task2" displayName="是否使用任务2.0" type="bool"/> -->
      <property type="bool" name="open_daily_remind" displayName="启用日事日清提醒功能" value="false">
        <tip>启用日事日清提醒功能</tip>
        <dependency>
			<component namespace="com.nd.social" name="remindcomponent" display="IM提醒组件"/>
		</dependency>
	  </property>
       
       <property type="bool" name="open_extend_button_sequence" displayName="启用他人主页底部扩展按钮顺序显示" value="false">
        <tip>启用他人主页底部扩展按钮顺序显示（只有业务方注入功能�����PBl组件不提供默认功能的情况）</tip>
	  </property>
       
       <property type="array" name="extend_button_sequence" displayName="他人主页底部扩展按钮显示顺序">
        <tip>他人主页底部扩展按钮显示顺序（只有业务方注入功能，PBl组件不提供默认功能的情况）</tip>
	  </property>
       
       <property type="array" name="extend_button_sequence_retain_default" displayName="他人主页底部按钮显示顺序">
        <tip>他人主页底部按钮显示顺序（他人底部默认功能+业务方注入功能的情况）</tip>
       </property>
       
       <property type="string" name="task_and_reward_url_param" displayName="任务和奖励H5跳转参数" value="">
        <tip>参数例子:"?novip=1"，不显示vip</tip>
       </property>
       
       <property type="bool" name="report_upload_avatar_task" displayName="上报头像上传任务" value="false">
        <tip>上报头像上传任务</tip>
	  </property>
       
       <property type="bool" name="friend_message_greenhand_guidance" displayName="非好友拒收信息引导" value="true">
        <tip>非好友拒收信息引导</tip>
	  </property>
       
       <property name="data_expire" displayName="缓存过期时间(秒)" type="int" value="7200">
         <tip>个人主页卡片、功能入口等配置数据在缓存过期时间前不自动刷新，默认2小时，下拉可强制刷新</tip>
       </property>
    </properties>

    <events>
        <event name="event_pblcomponent_qrcode_scan" desc="二维码扫描后跳转" sync="1"/>
        <!-- <event name="event_pblcomponent_get_user_data_result" desc="查询用户数据返回" sync="1"/> -->
    </events>

    <handlers>
        <handler name="event_pblcomponent_get_user_data" desc="查询用户数据">
            <property name="uid" displayName="用户ID(可选)" type="string"/>
            <property name="fields" displayName="fields字段" type="string"/>
        </handler>
        <handler name="event_pblcomponent_get_sign_view" desc="获取签到按钮view">
            <property name="button" displayName="签到按钮view,不传为新建view,传值为刷新view" type="view"/>
            <result name="button" displayName="签到按钮view"/>
        </handler>
      	<handler name="ios://receive_event_tab_badget_start" desc="角标变化事件" receive_event="handler_badget_start_event"/>
      	<handler name="cmp://com.nd.pbl.pblcomponent/others" desc="打开他人主页-废弃（无法保证正常跳转，请使用新事件）">
            <property name="uid" displayName="用户ID(一定要传)" type="string"/>
        </handler>
        <handler name="cmp://com.nd.pbl.pblcomponent/task" desc="打开任务列表-废弃（无法保证正常跳转，请使用新事件）"/>
        <handler name="cmp://com.nd.pbl.pblcomponent/reward" desc="打开奖励列表-废弃（无法保证正常跳转，请使用新事件）"/>
        <handler name="cmp://com.nd.pbl.pblcomponent/sendflowercenter" desc="打开送花中心-废弃（无法保证正常跳转，请使用新事件）"/>
      	<handler name="receive_event_show_other_page" desc="打开他人主页" receive_event="pbl_event_show_other_page">
            <property name="uid" displayName="用户ID(一定要传)" type="string"/>
        </handler>
      	<handler name="receive_event_show_task_page" desc="打开任务列表" receive_event="pbl_event_show_task_page"/>
      	<handler name="receive_event_show_reward_page" desc="打开奖励列表" receive_event="pbl_event_show_reward_page"/>
      	<handler name="receive_event_show_sendflowercenter_page" desc="打开送花中心" receive_event="pbl_event_show_sendflowercenter_page"/>
    </handlers>
  
     <routes>
      <route source="cmp://com.nd.social.me/me_HomePage" destination="cmp://com.nd.pbl.pblcomponent/others"/>
    </routes> 
  
  	<runtime>
      <properties>
        <property type="bool" name="lazy_init_ios" displayName="是否开启IOS延迟初始化" value="true"/>
        <property type="bool" name="lazy_init_android" displayName="是否开启Android延迟初始化" value="false"/>
      </properties>
       <providers>
        <provider name="com.nd.pbl.pblcomponent:functiondata-provider" filter="" desc="获取个人和他人主页功能入口数据"/>
        <provider name="com.nd.pbl.pblcomponent:functionai-provider" filter="com.nd.sdp.component.ai-assistant" desc="获取个人功能入口AI数据"/>
        <provider name="com.nd.pbl.pblcomponent:remind-provider" filter="com.nd.social.remindcomponent.startup" desc="为提醒组件提供的"/>
      </providers>
    </runtime>
 
    <android>
        <class>com.nd.pbl.pblcomponent.base.LifeComponent</class>
        <dependency>
            <![CDATA[
                  configurations.all {
                      resolutionStrategy {
                          force "com.nd.pbl:pblcomponent-sdk:4.1.22.053931e"
                      }
                  }
                  compile ('com.nd.pbl:pblcomponent:7.5.151.82efd3f8') {
                      transitive = true
                      changing = true
                  }
				  compile ('com.nd.sdp.android:star-module:0.9.12.610b0bd') {
                      transitive = true
                      changing = true
                  }

            ]]>
        </dependency>
            <groovy>
         	<![CDATA[
                android {
					packagingOptions {
	    				exclude 'META-INF/ASL2.0'
                        exclude 'META-INF/DEPENDENCIES.txt'
                        exclude 'META-INF/LICENSE.txt'
                        exclude 'META-INF/NOTICE.txt'
                        exclude 'META-INF/NOTICE'
                        exclude 'META-INF/LICENSE'
                        exclude 'META-INF/DEPENDENCIES'
                        exclude 'META-INF/notice.txt'
                        exclude 'META-INF/license.txt'
                        exclude 'META-INF/dependencies.txt'
                        exclude 'META-INF/LGPL2.1'
                        exclude 'META-INF/services/javax.annotation.processing.Processor'
                        exclude 'META-INF/rxjava.properties'
	  				}
                }
             ]]>
		</groovy>
    </android>

    <ios>
        <class>pbl_component</class>
        <dependency>
            <![CDATA[
                  pod 'pbl_component', '0.1.336'
                  pod 'pbl_sdk', '0.0.25'
                  pod 'SQXTools', '0.0.78'
				  pod 'WCDB', '1.0.7-Framework2'
                  pod 'SQLCipher', '0.0.2'
             ]]>
        </dependency>
        <scenes>
             <scene name="NSPhotoLibraryUsageDescription" describe="获取相册权限用于选择用户头像"/>
             <scene name="NSCameraUsageDescription" describe="获取相机权限用于拍照生成用户头像"/>
          	 <scene name="NSPhotoLibraryAddUsageDescription" describe="获取相册写入权限用于保存头像"/>
        </scenes>
    </ios>
</component></components>